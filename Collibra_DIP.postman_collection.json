{
	"info": {
		"_postman_id": "bcaa82fb-da50-440d-9fd4-d0f32a1bc808",
		"name": "Collibra Data Governance Center Core API",
		"description": "<p>The Core REST API allows you to create your own integrations with Collibra Data Governance Center.</p><p><i>Create custom applications to help users get access to the right data.</i></p>",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18430515"
	},
	"item": [
		{
			"name": "activities",
			"item": [
				{
					"name": "Returns activities matching the given search criteria.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/activities?offset=0&limit=0&countLimit=-1&taskId=<uuid>&contextId=<uuid>&involvedPeopleIds=<uuid>&involvedPeopleIds=<uuid>&involvedRoleIds=<uuid>&involvedRoleIds=<uuid>&performedByUserId=<uuid>&performedByRoleIds=<uuid>&performedByRoleIds=<uuid>&activityType=ADD&callId=<string>&categories=ATTACHMENT&categories=RESPONSIBILITY&resourceTypes=PhysicalDataConnector&resourceTypes=Asset&startDate=<long>&endDate=<long>&callCountEnabled=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activities"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
								},
								{
									"key": "limit",
									"value": "0",
									"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
								},
								{
									"key": "countLimit",
									"value": "-1",
									"description": "Parameter not used in the context of activities, for performance reasons they are not counted."
								},
								{
									"key": "taskId",
									"value": "<uuid>",
									"description": "The ID of the task which contains the basic find activities request."
								},
								{
									"key": "contextId",
									"value": "<uuid>",
									"description": "The ID of the context which the activities should be searched for."
								},
								{
									"key": "involvedPeopleIds",
									"value": "<uuid>",
									"description": "The list of IDs of the people that should be involved in searched activities."
								},
								{
									"key": "involvedPeopleIds",
									"value": "<uuid>",
									"description": "The list of IDs of the people that should be involved in searched activities."
								},
								{
									"key": "involvedRoleIds",
									"value": "<uuid>",
									"description": "The list of IDs of the roles that should be involved in searched activities."
								},
								{
									"key": "involvedRoleIds",
									"value": "<uuid>",
									"description": "The list of IDs of the roles that should be involved in searched activities."
								},
								{
									"key": "performedByUserId",
									"value": "<uuid>",
									"description": "The ID of the user who performed searched activities."
								},
								{
									"key": "performedByRoleIds",
									"value": "<uuid>",
									"description": "The list of IDs of the roles assigned to users who performed searched activities."
								},
								{
									"key": "performedByRoleIds",
									"value": "<uuid>",
									"description": "The list of IDs of the roles assigned to users who performed searched activities."
								},
								{
									"key": "activityType",
									"value": "ADD",
									"description": "The type of the activity."
								},
								{
									"key": "callId",
									"value": "<string>",
									"description": "The ID of the call."
								},
								{
									"key": "categories",
									"value": "ATTACHMENT",
									"description": "The set of the categories of activities that should be searched. One of [ATTRIBUTE, ATTACHMENT, RELATION, COMMENT,<br/>STATUS, WORKFLOW, RESPONSIBILITY, USER, USER_GROUP, ROLE, TAGS, OTHERS]."
								},
								{
									"key": "categories",
									"value": "RESPONSIBILITY",
									"description": "The set of the categories of activities that should be searched. One of [ATTRIBUTE, ATTACHMENT, RELATION, COMMENT,<br/>STATUS, WORKFLOW, RESPONSIBILITY, USER, USER_GROUP, ROLE, TAGS, OTHERS]."
								},
								{
									"key": "resourceTypes",
									"value": "PhysicalDataConnector",
									"description": "The set of the resource types that searched activities refer to, i.e. [Community, Asset, Domain, Attribute,<br/>Relation, WorkflowInstance]."
								},
								{
									"key": "resourceTypes",
									"value": "Asset",
									"description": "The set of the resource types that searched activities refer to, i.e. [Community, Asset, Domain, Attribute,<br/>Relation, WorkflowInstance]."
								},
								{
									"key": "startDate",
									"value": "<long>",
									"description": "The start date of the searched activities, expressed as a Unix timestamp in milliseconds."
								},
								{
									"key": "endDate",
									"value": "<long>",
									"description": "The end date of the searched activities, expressed as a Unix timestamp in milliseconds."
								},
								{
									"key": "callCountEnabled",
									"value": "false",
									"description": "Flag to indicate if the number of calls standing behind the activity should be returned or not.<br/>Note that by default that count will be not calculated as it brings an important performance penalty."
								}
							]
						},
						"description": "Returns activities matching the given search criteria.Only parameters that are specified in this request and have not <code>null</code> values are used for filtering.All other parameters are ignored.The returned activities satisfy all constraints that are specified in this search criteria.By default a result containing 100 activities is returned."
					},
					"response": [
						{
							"name": "The paged response with found Activity information. The total number of results is not calculated and should be ignored",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activities?offset=0&limit=0&countLimit=-1&taskId=<uuid>&contextId=<uuid>&involvedPeopleIds=<uuid>&involvedRoleIds=<uuid>&performedByUserId=<uuid>&performedByRoleIds=<uuid>&activityType=ADD&callId=<string>&categories=RESPONSIBILITY&resourceTypes=Asset&startDate=<long>&endDate=<long>&callCountEnabled=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activities"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Parameter not used in the context of activities, for performance reasons they are not counted."
										},
										{
											"key": "taskId",
											"value": "<uuid>",
											"description": "The ID of the task which contains the basic find activities request."
										},
										{
											"key": "contextId",
											"value": "<uuid>",
											"description": "The ID of the context which the activities should be searched for."
										},
										{
											"key": "involvedPeopleIds",
											"value": "<uuid>",
											"description": "The list of IDs of the people that should be involved in searched activities."
										},
										{
											"key": "involvedRoleIds",
											"value": "<uuid>",
											"description": "The list of IDs of the roles that should be involved in searched activities."
										},
										{
											"key": "performedByUserId",
											"value": "<uuid>",
											"description": "The ID of the user who performed searched activities."
										},
										{
											"key": "performedByRoleIds",
											"value": "<uuid>",
											"description": "The list of IDs of the roles assigned to users who performed searched activities."
										},
										{
											"key": "activityType",
											"value": "ADD",
											"description": "The type of the activity."
										},
										{
											"key": "callId",
											"value": "<string>",
											"description": "The ID of the call."
										},
										{
											"key": "categories",
											"value": "RESPONSIBILITY",
											"description": "The set of the categories of activities that should be searched. One of [ATTRIBUTE, ATTACHMENT, RELATION, COMMENT,<br/>STATUS, WORKFLOW, RESPONSIBILITY, USER, USER_GROUP, ROLE, TAGS, OTHERS]."
										},
										{
											"key": "resourceTypes",
											"value": "Asset",
											"description": "The set of the resource types that searched activities refer to, i.e. [Community, Asset, Domain, Attribute,<br/>Relation, WorkflowInstance]."
										},
										{
											"key": "startDate",
											"value": "<long>",
											"description": "The start date of the searched activities, expressed as a Unix timestamp in milliseconds."
										},
										{
											"key": "endDate",
											"value": "<long>",
											"description": "The end date of the searched activities, expressed as a Unix timestamp in milliseconds."
										},
										{
											"key": "callCountEnabled",
											"value": "false",
											"description": "Flag to indicate if the number of calls standing behind the activity should be returned or not.<br/>Note that by default that count will be not calculated as it brings an important performance penalty."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "application",
			"item": [
				{
					"name": "info",
					"item": [
						{
							"name": "Returns the basic information about the application.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/application/info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"application",
										"info"
									]
								},
								"description": "Returns the basic information about the application."
							},
							"response": [
								{
									"name": "default response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/application/info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"application",
												"info"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"solutions\": [\n    {\n      \"name\": \"<string>\",\n      \"version\": {\n        \"major\": \"<integer>\",\n        \"minor\": \"<integer>\",\n        \"fullVersion\": \"<string>\",\n        \"displayVersion\": \"<string>\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"version\": {\n        \"major\": \"<integer>\",\n        \"minor\": \"<integer>\",\n        \"fullVersion\": \"<string>\",\n        \"displayVersion\": \"<string>\"\n      }\n    }\n  ],\n  \"baseUrl\": \"<string>\",\n  \"buildNumber\": \"<string>\",\n  \"version\": {\n    \"major\": \"<integer>\",\n    \"minor\": \"<integer>\",\n    \"fullVersion\": \"<string>\",\n    \"displayVersion\": \"<string>\"\n  }\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "assignments",
			"item": [
				{
					"name": "{assignmentId}",
					"item": [
						{
							"name": "Removes the Assignment identified by the given id.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/assignments/:assignmentId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assignments",
										":assignmentId"
									],
									"variable": [
										{
											"key": "assignmentId",
											"value": "<uuid>",
											"description": "(Required) The unique identifier of the Assignment."
										}
									]
								},
								"description": "Removes the Assignment identified by the given id."
							},
							"response": [
								{
									"name": "Assignment removed.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assignments/:assignmentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assignments",
												":assignmentId"
											],
											"variable": [
												{
													"key": "assignmentId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Assignment not found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assignments/:assignmentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assignments",
												":assignmentId"
											],
											"variable": [
												{
													"key": "assignmentId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Changes the assignment with the information that is provided in the request.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"statusIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"characteristicTypes\": [\n    {\n      \"id\": \"<uuid>\",\n      \"min\": \"<integer>\",\n      \"max\": \"<integer>\",\n      \"type\": \"MultiValueListAttribute\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"relationTypeDirection\": \"NONE\",\n      \"relationTypeRestriction\": \"<uuid>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"min\": \"<integer>\",\n      \"max\": \"<integer>\",\n      \"type\": \"MultiValueListAttributeType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"relationTypeDirection\": \"TO_TARGET\",\n      \"relationTypeRestriction\": \"<uuid>\"\n    }\n  ],\n  \"articulationRules\": [\n    {\n      \"operation\": \"SET\",\n      \"score\": \"<double>\",\n      \"id\": \"<uuid>\",\n      \"statusId\": \"<uuid>\",\n      \"attributeTypeId\": \"<uuid>\"\n    },\n    {\n      \"operation\": \"SET\",\n      \"score\": \"<double>\",\n      \"id\": \"<uuid>\",\n      \"statusId\": \"<uuid>\",\n      \"attributeTypeId\": \"<uuid>\"\n    }\n  ],\n  \"validationRuleIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"dataQualityRuleIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"domainTypeIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"defaultStatusId\": \"<uuid>\",\n  \"scopeId\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assignments/:assignmentId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assignments",
										":assignmentId"
									],
									"variable": [
										{
											"key": "assignmentId",
											"value": "<uuid>",
											"description": "(Required) The unique identifier of the Assignment."
										}
									]
								},
								"description": "Changes the assignment with the information that is provided in the request. Only properties that are specified in the request and are not NULL are updated. All other properties are ignored."
							},
							"response": [
								{
									"name": "Assignment successfully changed.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"statusIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"characteristicTypes\": [\n    {\n      \"id\": \"<uuid>\",\n      \"min\": \"<integer>\",\n      \"max\": \"<integer>\",\n      \"type\": \"MultiValueListAttribute\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"relationTypeDirection\": \"NONE\",\n      \"relationTypeRestriction\": \"<uuid>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"min\": \"<integer>\",\n      \"max\": \"<integer>\",\n      \"type\": \"MultiValueListAttributeType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"relationTypeDirection\": \"TO_TARGET\",\n      \"relationTypeRestriction\": \"<uuid>\"\n    }\n  ],\n  \"articulationRules\": [\n    {\n      \"operation\": \"SET\",\n      \"score\": \"<double>\",\n      \"id\": \"<uuid>\",\n      \"statusId\": \"<uuid>\",\n      \"attributeTypeId\": \"<uuid>\"\n    },\n    {\n      \"operation\": \"SET\",\n      \"score\": \"<double>\",\n      \"id\": \"<uuid>\",\n      \"statusId\": \"<uuid>\",\n      \"attributeTypeId\": \"<uuid>\"\n    }\n  ],\n  \"validationRuleIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"dataQualityRuleIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"domainTypeIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"defaultStatusId\": \"<uuid>\",\n  \"scopeId\": \"<uuid>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/assignments/:assignmentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assignments",
												":assignmentId"
											],
											"variable": [
												{
													"key": "assignmentId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"WorkflowInstance\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"assetType\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Classification\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"statuses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"SingleValueListAttributeType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Classification\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"defaultStatusId\": \"<uuid>\",\n  \"characteristicTypes\": [\n    {\n      \"assignedResourceType\": \"DateAttribute\",\n      \"minimumOccurrences\": \"<integer>\",\n      \"maximumOccurrences\": \"<integer>\",\n      \"assignedResourceId\": \"<uuid>\",\n      \"assignedCharacteristicTypeDiscriminator\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"system\": \"<boolean>\",\n      \"id\": \"<uuid>\"\n    },\n    {\n      \"assignedResourceType\": \"DataQualityMetric\",\n      \"minimumOccurrences\": \"<integer>\",\n      \"maximumOccurrences\": \"<integer>\",\n      \"assignedResourceId\": \"<uuid>\",\n      \"assignedCharacteristicTypeDiscriminator\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"system\": \"<boolean>\",\n      \"id\": \"<uuid>\"\n    }\n  ],\n  \"articulationRules\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ConnectionStringParameter\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"score\": \"<double>\",\n      \"operation\": \"SET\",\n      \"status\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Domain\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"attributeType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Responsibility\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Tag\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"score\": \"<double>\",\n      \"operation\": \"SET\",\n      \"status\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Activity\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"attributeType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ActivityChange\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    }\n  ],\n  \"validationRules\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"FormProperty\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Attribute\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"dataQualityRules\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelation\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DataQualityMetric\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"domainTypes\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"AssetType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"FormProperty\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"scope\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Responsibility\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"publicId\": \"<string>\",\n    \"domains\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"DataQualityRule\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ScriptAttribute\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"communities\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"RelationType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ValidationRule\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    ]\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "forResource",
					"item": [
						{
							"name": "Find the assignments where a given resource is assigned.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/assignments/forResource?resourceId=<uuid>&resourceType=RelationTrace",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assignments",
										"forResource"
									],
									"query": [
										{
											"key": "resourceId",
											"value": "<uuid>",
											"description": "The ID of the resource on which the assignment applies."
										},
										{
											"key": "resourceType",
											"value": "RelationTrace",
											"description": "The type of resource that is assigned."
										}
									]
								},
								"description": "Find the assignments where a given resource is assigned."
							},
							"response": [
								{
									"name": "Assignments found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assignments/forResource?resourceId=<uuid>&resourceType=RelationTrace",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assignments",
												"forResource"
											],
											"query": [
												{
													"key": "resourceId",
													"value": "<uuid>",
													"description": "The ID of the resource on which the assignment applies."
												},
												{
													"key": "resourceType",
													"value": "RelationTrace",
													"description": "The type of resource that is assigned."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"DiagramPicture\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"assetType\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Context\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"statuses\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ConnectionStringParameter\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"PhysicalDataConnector\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"defaultStatusId\": \"<uuid>\",\n    \"characteristicTypes\": [\n      {\n        \"assignedResourceType\": \"JdbcDriverFile\",\n        \"minimumOccurrences\": \"<integer>\",\n        \"maximumOccurrences\": \"<integer>\",\n        \"assignedResourceId\": \"<uuid>\",\n        \"assignedCharacteristicTypeDiscriminator\": \"<string>\",\n        \"readOnly\": \"<boolean>\",\n        \"system\": \"<boolean>\",\n        \"id\": \"<uuid>\"\n      },\n      {\n        \"assignedResourceType\": \"JdbcDriver\",\n        \"minimumOccurrences\": \"<integer>\",\n        \"maximumOccurrences\": \"<integer>\",\n        \"assignedResourceId\": \"<uuid>\",\n        \"assignedCharacteristicTypeDiscriminator\": \"<string>\",\n        \"readOnly\": \"<boolean>\",\n        \"system\": \"<boolean>\",\n        \"id\": \"<uuid>\"\n      }\n    ],\n    \"articulationRules\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Comment\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"score\": \"<double>\",\n        \"operation\": \"SET\",\n        \"status\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"DiagramPictureAssignmentRule\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"attributeType\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"RelationType\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Job\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"score\": \"<double>\",\n        \"operation\": \"ADD\",\n        \"status\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Classification\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"attributeType\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"NumericAttribute\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      }\n    ],\n    \"validationRules\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ConnectionStringParameter\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Assignment\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"dataQualityRules\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ValidationRule\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"StringAttribute\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"domainTypes\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"JdbcDriverFile\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"DateAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"scope\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Tag\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"publicId\": \"<string>\",\n      \"domains\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Context\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Comment\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"communities\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"AssetType\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Role\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      ]\n    }\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"DataQualityMetric\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"assetType\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"BooleanAttributeType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"statuses\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ComplexRelationType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"AdvancedDataType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"defaultStatusId\": \"<uuid>\",\n    \"characteristicTypes\": [\n      {\n        \"assignedResourceType\": \"ViewAssignmentRule\",\n        \"minimumOccurrences\": \"<integer>\",\n        \"maximumOccurrences\": \"<integer>\",\n        \"assignedResourceId\": \"<uuid>\",\n        \"assignedCharacteristicTypeDiscriminator\": \"<string>\",\n        \"readOnly\": \"<boolean>\",\n        \"system\": \"<boolean>\",\n        \"id\": \"<uuid>\"\n      },\n      {\n        \"assignedResourceType\": \"UserGroup\",\n        \"minimumOccurrences\": \"<integer>\",\n        \"maximumOccurrences\": \"<integer>\",\n        \"assignedResourceId\": \"<uuid>\",\n        \"assignedCharacteristicTypeDiscriminator\": \"<string>\",\n        \"readOnly\": \"<boolean>\",\n        \"system\": \"<boolean>\",\n        \"id\": \"<uuid>\"\n      }\n    ],\n    \"articulationRules\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ComplexRelationAttributeType\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"score\": \"<double>\",\n        \"operation\": \"SET\",\n        \"status\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Tag\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"attributeType\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"InstantMessagingAccount\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"MultiValueListAttributeType\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"score\": \"<double>\",\n        \"operation\": \"SET\",\n        \"status\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ClassificationMatch\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"attributeType\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Workflow\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      }\n    ],\n    \"validationRules\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Email\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ScriptAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"dataQualityRules\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"BooleanAttribute\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"BooleanAttribute\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"domainTypes\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Assignment\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"MultiValueListAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"scope\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Address\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"publicId\": \"<string>\",\n      \"domains\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Assignment\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"SingleValueListAttribute\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"communities\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"UserGroup\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Email\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      ]\n    }\n  }\n]"
								},
								{
									"name": "The parameter is invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assignments/forResource?resourceId=<uuid>&resourceType=RelationTrace",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assignments",
												"forResource"
											],
											"query": [
												{
													"key": "resourceId",
													"value": "<uuid>",
													"description": "The ID of the resource on which the assignment applies."
												},
												{
													"key": "resourceType",
													"value": "RelationTrace",
													"description": "The type of resource that is assigned."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "asset",
					"item": [
						{
							"name": "{assetId}",
							"item": [
								{
									"name": "attributeTypes",
									"item": [
										{
											"name": "Returns available attribute types for asset identified by given id.",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assignments/asset/:assetId/attributeTypes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assignments",
														"asset",
														":assetId",
														"attributeTypes"
													],
													"variable": [
														{
															"key": "assetId",
															"value": "<uuid>",
															"description": "(Required) The unique identifier of the Asset."
														}
													]
												},
												"description": "Returns available attribute types for asset identified by given id."
											},
											"response": [
												{
													"name": "AttributeTypes found.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/assignments/asset/:assetId/attributeTypes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"assignments",
																"asset",
																":assetId",
																"attributeTypes"
															],
															"variable": [
																{
																	"key": "assetId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"attributeTypeDiscriminator\": \"<string>\",\n    \"publicId\": \"<string>\",\n    \"description\": \"<string>\",\n    \"name\": \"<string>\",\n    \"resourceType\": \"StringAttributeType\",\n    \"createdBy\": \"<uuid>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"id\": \"<uuid>\"\n  },\n  {\n    \"attributeTypeDiscriminator\": \"<string>\",\n    \"publicId\": \"<string>\",\n    \"description\": \"<string>\",\n    \"name\": \"<string>\",\n    \"resourceType\": \"JdbcDriver\",\n    \"createdBy\": \"<uuid>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"id\": \"<uuid>\"\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "complexRelationTypes",
									"item": [
										{
											"name": "Returns the available ComplexRelationTypes for the Asset identified by the given id.",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assignments/asset/:assetId/complexRelationTypes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assignments",
														"asset",
														":assetId",
														"complexRelationTypes"
													],
													"variable": [
														{
															"key": "assetId",
															"value": "<uuid>",
															"description": "(Required) The unique identifier of the Asset."
														}
													]
												},
												"description": "Returns the available ComplexRelationTypes for the Asset identified by the given id."
											},
											"response": [
												{
													"name": "ComplexRelationTypes found.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/assignments/asset/:assetId/complexRelationTypes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"assignments",
																"asset",
																":assetId",
																"complexRelationTypes"
															],
															"variable": [
																{
																	"key": "assetId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"JdbcDriverFile\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"publicId\": \"<string>\",\n    \"symbolData\": {\n      \"color\": \"<string>\",\n      \"symbolType\": \"ACRONYM_CODE\",\n      \"iconCode\": \"<string>\",\n      \"acronymCode\": \"<string>\"\n    },\n    \"attributeTypes\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"DateAttribute\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"minimumOccurrences\": \"<integer>\",\n        \"maximumOccurrences\": \"<integer>\",\n        \"readOnly\": \"<boolean>\",\n        \"attributeType\": {\n          \"attributeTypeDiscriminator\": \"<string>\",\n          \"publicId\": \"<string>\",\n          \"description\": \"<string>\",\n          \"name\": \"<string>\",\n          \"resourceType\": \"ClassificationMatch\",\n          \"createdBy\": \"<uuid>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"id\": \"<uuid>\"\n        }\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"MultiValueListAttribute\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"minimumOccurrences\": \"<integer>\",\n        \"maximumOccurrences\": \"<integer>\",\n        \"readOnly\": \"<boolean>\",\n        \"attributeType\": {\n          \"attributeTypeDiscriminator\": \"<string>\",\n          \"publicId\": \"<string>\",\n          \"description\": \"<string>\",\n          \"name\": \"<string>\",\n          \"resourceType\": \"MultiValueListAttributeType\",\n          \"createdBy\": \"<uuid>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"id\": \"<uuid>\"\n        }\n      }\n    ],\n    \"legTypes\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"BooleanAttribute\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"minimumOccurrences\": \"<integer>\",\n        \"maximumOccurrences\": \"<integer>\",\n        \"assetType\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Rating\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"role\": \"<string>\",\n        \"coRole\": \"<string>\",\n        \"relationTypeId\": \"<uuid>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ViewAssignmentRule\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"minimumOccurrences\": \"<integer>\",\n        \"maximumOccurrences\": \"<integer>\",\n        \"assetType\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ArticulationRule\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"role\": \"<string>\",\n        \"coRole\": \"<string>\",\n        \"relationTypeId\": \"<uuid>\"\n      }\n    ]\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"ComplexRelation\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"publicId\": \"<string>\",\n    \"symbolData\": {\n      \"color\": \"<string>\",\n      \"symbolType\": \"ICON_CODE\",\n      \"iconCode\": \"<string>\",\n      \"acronymCode\": \"<string>\"\n    },\n    \"attributeTypes\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Email\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"minimumOccurrences\": \"<integer>\",\n        \"maximumOccurrences\": \"<integer>\",\n        \"readOnly\": \"<boolean>\",\n        \"attributeType\": {\n          \"attributeTypeDiscriminator\": \"<string>\",\n          \"publicId\": \"<string>\",\n          \"description\": \"<string>\",\n          \"name\": \"<string>\",\n          \"resourceType\": \"Email\",\n          \"createdBy\": \"<uuid>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"id\": \"<uuid>\"\n        }\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ScriptAttribute\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"minimumOccurrences\": \"<integer>\",\n        \"maximumOccurrences\": \"<integer>\",\n        \"readOnly\": \"<boolean>\",\n        \"attributeType\": {\n          \"attributeTypeDiscriminator\": \"<string>\",\n          \"publicId\": \"<string>\",\n          \"description\": \"<string>\",\n          \"name\": \"<string>\",\n          \"resourceType\": \"Rating\",\n          \"createdBy\": \"<uuid>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"id\": \"<uuid>\"\n        }\n      }\n    ],\n    \"legTypes\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"PhoneNumber\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"minimumOccurrences\": \"<integer>\",\n        \"maximumOccurrences\": \"<integer>\",\n        \"assetType\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"DateAttributeType\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"role\": \"<string>\",\n        \"coRole\": \"<string>\",\n        \"relationTypeId\": \"<uuid>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"JdbcIngestionProperties\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"minimumOccurrences\": \"<integer>\",\n        \"maximumOccurrences\": \"<integer>\",\n        \"assetType\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Community\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"role\": \"<string>\",\n        \"coRole\": \"<string>\",\n        \"relationTypeId\": \"<uuid>\"\n      }\n    ]\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "relationTypes",
									"item": [
										{
											"name": "Returns the available RelationTypes for the Asset identified by the given id.",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assignments/asset/:assetId/relationTypes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assignments",
														"asset",
														":assetId",
														"relationTypes"
													],
													"variable": [
														{
															"key": "assetId",
															"value": "<uuid>",
															"description": "(Required) The unique identifier of the Asset."
														}
													]
												},
												"description": "Returns the available RelationTypes for the Asset identified by the given id."
											},
											"response": [
												{
													"name": "RelationTypes found.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/assignments/asset/:assetId/relationTypes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"assignments",
																"asset",
																":assetId",
																"relationTypes"
															],
															"variable": [
																{
																	"key": "assetId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"PhysicalDataConnector\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"publicId\": \"<string>\",\n    \"sourceType\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Domain\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"targetType\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"MultiValueListAttributeType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"role\": \"<string>\",\n    \"coRole\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Email\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"publicId\": \"<string>\",\n    \"sourceType\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"targetType\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DateAttribute\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"role\": \"<string>\",\n    \"coRole\": \"<string>\",\n    \"description\": \"<string>\"\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "Returns the Assignment identified by the given Asset.",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assignments/asset/:assetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assignments",
												"asset",
												":assetId"
											],
											"variable": [
												{
													"key": "assetId",
													"value": "<uuid>",
													"description": "(Required) The unique identifier of the Asset."
												}
											]
										},
										"description": "Returns the Assignment identified by the given Asset."
									},
									"response": [
										{
											"name": "Assignment found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assignments/asset/:assetId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assignments",
														"asset",
														":assetId"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"WorkflowInstance\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"assetType\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Classification\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"statuses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"SingleValueListAttributeType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Classification\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"defaultStatusId\": \"<uuid>\",\n  \"characteristicTypes\": [\n    {\n      \"assignedResourceType\": \"DateAttribute\",\n      \"minimumOccurrences\": \"<integer>\",\n      \"maximumOccurrences\": \"<integer>\",\n      \"assignedResourceId\": \"<uuid>\",\n      \"assignedCharacteristicTypeDiscriminator\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"system\": \"<boolean>\",\n      \"id\": \"<uuid>\"\n    },\n    {\n      \"assignedResourceType\": \"DataQualityMetric\",\n      \"minimumOccurrences\": \"<integer>\",\n      \"maximumOccurrences\": \"<integer>\",\n      \"assignedResourceId\": \"<uuid>\",\n      \"assignedCharacteristicTypeDiscriminator\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"system\": \"<boolean>\",\n      \"id\": \"<uuid>\"\n    }\n  ],\n  \"articulationRules\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ConnectionStringParameter\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"score\": \"<double>\",\n      \"operation\": \"SET\",\n      \"status\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Domain\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"attributeType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Responsibility\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Tag\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"score\": \"<double>\",\n      \"operation\": \"SET\",\n      \"status\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Activity\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"attributeType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ActivityChange\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    }\n  ],\n  \"validationRules\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"FormProperty\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Attribute\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"dataQualityRules\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelation\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DataQualityMetric\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"domainTypes\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"AssetType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"FormProperty\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"scope\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Responsibility\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"publicId\": \"<string>\",\n    \"domains\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"DataQualityRule\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ScriptAttribute\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"communities\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"RelationType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ValidationRule\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    ]\n  }\n}"
										},
										{
											"name": "Assignment not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assignments/asset/:assetId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assignments",
														"asset",
														":assetId"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "assetType",
					"item": [
						{
							"name": "{assetTypeId}",
							"item": [
								{
									"name": "Returns Assignments for given asset type id.",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assignments/assetType/:assetTypeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assignments",
												"assetType",
												":assetTypeId"
											],
											"variable": [
												{
													"key": "assetTypeId",
													"value": "<uuid>",
													"description": "(Required) The unique identifier of the AssetType."
												}
											]
										},
										"description": "Returns Assignments for given asset type id."
									},
									"response": [
										{
											"name": "Assignments found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assignments/assetType/:assetTypeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assignments",
														"assetType",
														":assetTypeId"
													],
													"variable": [
														{
															"key": "assetTypeId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"DiagramPicture\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"assetType\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Context\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"statuses\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ConnectionStringParameter\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"PhysicalDataConnector\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"defaultStatusId\": \"<uuid>\",\n    \"characteristicTypes\": [\n      {\n        \"assignedResourceType\": \"JdbcDriverFile\",\n        \"minimumOccurrences\": \"<integer>\",\n        \"maximumOccurrences\": \"<integer>\",\n        \"assignedResourceId\": \"<uuid>\",\n        \"assignedCharacteristicTypeDiscriminator\": \"<string>\",\n        \"readOnly\": \"<boolean>\",\n        \"system\": \"<boolean>\",\n        \"id\": \"<uuid>\"\n      },\n      {\n        \"assignedResourceType\": \"JdbcDriver\",\n        \"minimumOccurrences\": \"<integer>\",\n        \"maximumOccurrences\": \"<integer>\",\n        \"assignedResourceId\": \"<uuid>\",\n        \"assignedCharacteristicTypeDiscriminator\": \"<string>\",\n        \"readOnly\": \"<boolean>\",\n        \"system\": \"<boolean>\",\n        \"id\": \"<uuid>\"\n      }\n    ],\n    \"articulationRules\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Comment\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"score\": \"<double>\",\n        \"operation\": \"SET\",\n        \"status\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"DiagramPictureAssignmentRule\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"attributeType\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"RelationType\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Job\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"score\": \"<double>\",\n        \"operation\": \"ADD\",\n        \"status\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Classification\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"attributeType\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"NumericAttribute\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      }\n    ],\n    \"validationRules\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ConnectionStringParameter\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Assignment\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"dataQualityRules\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ValidationRule\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"StringAttribute\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"domainTypes\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"JdbcDriverFile\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"DateAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"scope\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Tag\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"publicId\": \"<string>\",\n      \"domains\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Context\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Comment\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"communities\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"AssetType\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Role\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      ]\n    }\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"DataQualityMetric\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"assetType\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"BooleanAttributeType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"statuses\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ComplexRelationType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"AdvancedDataType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"defaultStatusId\": \"<uuid>\",\n    \"characteristicTypes\": [\n      {\n        \"assignedResourceType\": \"ViewAssignmentRule\",\n        \"minimumOccurrences\": \"<integer>\",\n        \"maximumOccurrences\": \"<integer>\",\n        \"assignedResourceId\": \"<uuid>\",\n        \"assignedCharacteristicTypeDiscriminator\": \"<string>\",\n        \"readOnly\": \"<boolean>\",\n        \"system\": \"<boolean>\",\n        \"id\": \"<uuid>\"\n      },\n      {\n        \"assignedResourceType\": \"UserGroup\",\n        \"minimumOccurrences\": \"<integer>\",\n        \"maximumOccurrences\": \"<integer>\",\n        \"assignedResourceId\": \"<uuid>\",\n        \"assignedCharacteristicTypeDiscriminator\": \"<string>\",\n        \"readOnly\": \"<boolean>\",\n        \"system\": \"<boolean>\",\n        \"id\": \"<uuid>\"\n      }\n    ],\n    \"articulationRules\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ComplexRelationAttributeType\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"score\": \"<double>\",\n        \"operation\": \"SET\",\n        \"status\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Tag\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"attributeType\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"InstantMessagingAccount\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"MultiValueListAttributeType\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"score\": \"<double>\",\n        \"operation\": \"SET\",\n        \"status\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ClassificationMatch\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"attributeType\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Workflow\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      }\n    ],\n    \"validationRules\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Email\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ScriptAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"dataQualityRules\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"BooleanAttribute\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"BooleanAttribute\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"domainTypes\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Assignment\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"MultiValueListAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"scope\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Address\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"publicId\": \"<string>\",\n      \"domains\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Assignment\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"SingleValueListAttribute\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"communities\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"UserGroup\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Email\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      ]\n    }\n  }\n]"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "domain",
					"item": [
						{
							"name": "{domainId}",
							"item": [
								{
									"name": "assetTypes",
									"item": [
										{
											"name": "Returns available asset types for domain identified by given id.",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assignments/domain/:domainId/assetTypes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assignments",
														"domain",
														":domainId",
														"assetTypes"
													],
													"variable": [
														{
															"key": "domainId",
															"value": "<uuid>",
															"description": "(Required) The unique identifier of the Domain."
														}
													]
												},
												"description": "Returns available asset types for domain identified by given id."
											},
											"response": [
												{
													"name": "AssetTypes found.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/assignments/domain/:domainId/assetTypes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"assignments",
																"domain",
																":domainId",
																"assetTypes"
															],
															"variable": [
																{
																	"key": "domainId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"ExcelIngestionProperties\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"publicId\": \"<string>\",\n    \"parent\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Domain\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"symbolData\": {\n      \"color\": \"<string>\",\n      \"symbolType\": \"ACRONYM_CODE\",\n      \"iconCode\": \"<string>\",\n      \"acronymCode\": \"<string>\"\n    },\n    \"displayNameEnabled\": \"<boolean>\",\n    \"ratingEnabled\": \"<boolean>\",\n    \"finalType\": \"<boolean>\",\n    \"lockStatuses\": \"<boolean>\",\n    \"product\": \"<string>\",\n    \"appliedTraits\": [\n      {\n        \"id\": \"<uuid>\",\n        \"trait\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"UserGroup\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"system\": \"<boolean>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"trait\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"DataQualityMetric\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"system\": \"<boolean>\"\n      }\n    ]\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"ViewSharingRule\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"publicId\": \"<string>\",\n    \"parent\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"StringAttribute\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"symbolData\": {\n      \"color\": \"<string>\",\n      \"symbolType\": \"ICON_CODE\",\n      \"iconCode\": \"<string>\",\n      \"acronymCode\": \"<string>\"\n    },\n    \"displayNameEnabled\": \"<boolean>\",\n    \"ratingEnabled\": \"<boolean>\",\n    \"finalType\": \"<boolean>\",\n    \"lockStatuses\": \"<boolean>\",\n    \"product\": \"<string>\",\n    \"appliedTraits\": [\n      {\n        \"id\": \"<uuid>\",\n        \"trait\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Notification\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"system\": \"<boolean>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"trait\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"View\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"system\": \"<boolean>\"\n      }\n    ]\n  }\n]"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Adds a new Assignment.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"assetTypeId\": \"<uuid>\",\n  \"defaultStatusId\": \"<uuid>\",\n  \"statusIds\": [\n    \"<uuid>\"\n  ],\n  \"id\": \"<uuid>\",\n  \"characteristicTypes\": [\n    {\n      \"id\": \"<uuid>\",\n      \"min\": \"<integer>\",\n      \"max\": \"<integer>\",\n      \"type\": \"ActivityChange\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"relationTypeDirection\": \"TO_SOURCE\",\n      \"relationTypeRestriction\": \"<uuid>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"min\": \"<integer>\",\n      \"max\": \"<integer>\",\n      \"type\": \"WorkflowInstance\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"relationTypeDirection\": \"BOTH\",\n      \"relationTypeRestriction\": \"<uuid>\"\n    }\n  ],\n  \"articulationRules\": [\n    {\n      \"operation\": \"SET\",\n      \"score\": \"<double>\",\n      \"id\": \"<uuid>\",\n      \"statusId\": \"<uuid>\",\n      \"attributeTypeId\": \"<uuid>\"\n    },\n    {\n      \"operation\": \"ADD\",\n      \"score\": \"<double>\",\n      \"id\": \"<uuid>\",\n      \"statusId\": \"<uuid>\",\n      \"attributeTypeId\": \"<uuid>\"\n    }\n  ],\n  \"validationRuleIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"dataQualityRuleIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"domainTypeIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"scopeId\": \"<uuid>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/assignments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assignments"
							]
						},
						"description": "Adds a new Assignment."
					},
					"response": [
						{
							"name": "Assignment successfully added.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"assetTypeId\": \"<uuid>\",\n  \"defaultStatusId\": \"<uuid>\",\n  \"statusIds\": [\n    \"<uuid>\"\n  ],\n  \"id\": \"<uuid>\",\n  \"characteristicTypes\": [\n    {\n      \"id\": \"<uuid>\",\n      \"min\": \"<integer>\",\n      \"max\": \"<integer>\",\n      \"type\": \"ActivityChange\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"relationTypeDirection\": \"TO_SOURCE\",\n      \"relationTypeRestriction\": \"<uuid>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"min\": \"<integer>\",\n      \"max\": \"<integer>\",\n      \"type\": \"WorkflowInstance\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"relationTypeDirection\": \"BOTH\",\n      \"relationTypeRestriction\": \"<uuid>\"\n    }\n  ],\n  \"articulationRules\": [\n    {\n      \"operation\": \"SET\",\n      \"score\": \"<double>\",\n      \"id\": \"<uuid>\",\n      \"statusId\": \"<uuid>\",\n      \"attributeTypeId\": \"<uuid>\"\n    },\n    {\n      \"operation\": \"ADD\",\n      \"score\": \"<double>\",\n      \"id\": \"<uuid>\",\n      \"statusId\": \"<uuid>\",\n      \"attributeTypeId\": \"<uuid>\"\n    }\n  ],\n  \"validationRuleIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"dataQualityRuleIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"domainTypeIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"scopeId\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assignments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assignments"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"WorkflowInstance\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"assetType\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Classification\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"statuses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"SingleValueListAttributeType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Classification\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"defaultStatusId\": \"<uuid>\",\n  \"characteristicTypes\": [\n    {\n      \"assignedResourceType\": \"DateAttribute\",\n      \"minimumOccurrences\": \"<integer>\",\n      \"maximumOccurrences\": \"<integer>\",\n      \"assignedResourceId\": \"<uuid>\",\n      \"assignedCharacteristicTypeDiscriminator\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"system\": \"<boolean>\",\n      \"id\": \"<uuid>\"\n    },\n    {\n      \"assignedResourceType\": \"DataQualityMetric\",\n      \"minimumOccurrences\": \"<integer>\",\n      \"maximumOccurrences\": \"<integer>\",\n      \"assignedResourceId\": \"<uuid>\",\n      \"assignedCharacteristicTypeDiscriminator\": \"<string>\",\n      \"readOnly\": \"<boolean>\",\n      \"system\": \"<boolean>\",\n      \"id\": \"<uuid>\"\n    }\n  ],\n  \"articulationRules\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ConnectionStringParameter\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"score\": \"<double>\",\n      \"operation\": \"SET\",\n      \"status\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Domain\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"attributeType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Responsibility\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Tag\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"score\": \"<double>\",\n      \"operation\": \"SET\",\n      \"status\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Activity\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"attributeType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ActivityChange\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    }\n  ],\n  \"validationRules\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"FormProperty\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Attribute\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"dataQualityRules\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelation\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DataQualityMetric\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"domainTypes\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"AssetType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"FormProperty\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ],\n  \"scope\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Responsibility\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"publicId\": \"<string>\",\n    \"domains\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"DataQualityRule\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ScriptAttribute\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"communities\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"RelationType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ValidationRule\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    ]\n  }\n}"
						},
						{
							"name": "An assignment with the given ID already exists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"assetTypeId\": \"<uuid>\",\n  \"defaultStatusId\": \"<uuid>\",\n  \"statusIds\": [\n    \"<uuid>\"\n  ],\n  \"id\": \"<uuid>\",\n  \"characteristicTypes\": [\n    {\n      \"id\": \"<uuid>\",\n      \"min\": \"<integer>\",\n      \"max\": \"<integer>\",\n      \"type\": \"ActivityChange\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"relationTypeDirection\": \"TO_SOURCE\",\n      \"relationTypeRestriction\": \"<uuid>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"min\": \"<integer>\",\n      \"max\": \"<integer>\",\n      \"type\": \"WorkflowInstance\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"relationTypeDirection\": \"BOTH\",\n      \"relationTypeRestriction\": \"<uuid>\"\n    }\n  ],\n  \"articulationRules\": [\n    {\n      \"operation\": \"SET\",\n      \"score\": \"<double>\",\n      \"id\": \"<uuid>\",\n      \"statusId\": \"<uuid>\",\n      \"attributeTypeId\": \"<uuid>\"\n    },\n    {\n      \"operation\": \"ADD\",\n      \"score\": \"<double>\",\n      \"id\": \"<uuid>\",\n      \"statusId\": \"<uuid>\",\n      \"attributeTypeId\": \"<uuid>\"\n    }\n  ],\n  \"validationRuleIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"dataQualityRuleIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"domainTypeIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"scopeId\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assignments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assignments"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "scopes",
			"item": [
				{
					"name": "{scopeId}",
					"item": [
						{
							"name": "Get scope",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/scopes/:scopeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scopes",
										":scopeId"
									],
									"variable": [
										{
											"key": "scopeId",
											"value": "<uuid>",
											"description": "(Required) The unique identifier of the scope."
										}
									]
								},
								"description": "Returns scope identified by given id."
							},
							"response": [
								{
									"name": "The found scope",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/scopes/:scopeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scopes",
												":scopeId"
											],
											"variable": [
												{
													"key": "scopeId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Scope\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"publicId\": \"<string>\",\n  \"domains\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"NumericAttributeType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Address\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"communities\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Classification\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationLegType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Remove scope",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/scopes/:scopeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scopes",
										":scopeId"
									],
									"variable": [
										{
											"key": "scopeId",
											"value": "<uuid>",
											"description": "(Required) the id of the scope"
										}
									]
								},
								"description": "Removes scope identified by given id."
							},
							"response": [
								{
									"name": "The scope has been successfully removed.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/scopes/:scopeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scopes",
												":scopeId"
											],
											"variable": [
												{
													"key": "scopeId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Change scope",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"publicId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"domainIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"communityIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/scopes/:scopeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scopes",
										":scopeId"
									],
									"variable": [
										{
											"key": "scopeId",
											"value": "<uuid>",
											"description": "(Required) the id of the scope to be changed"
										}
									]
								},
								"description": "Changes the scope with the information that is present in the request. Only properties that are specified in this request and have not <code>null</code> values are updated. All other properties are ignored."
							},
							"response": [
								{
									"name": "The changed scope",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"publicId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"domainIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"communityIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/scopes/:scopeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scopes",
												":scopeId"
											],
											"variable": [
												{
													"key": "scopeId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Scope\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"publicId\": \"<string>\",\n  \"domains\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"NumericAttributeType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Address\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"communities\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Classification\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationLegType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "publicId",
					"item": [
						{
							"name": "{publicId}",
							"item": [
								{
									"name": "Get the scope by public id",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/scopes/publicId/:publicId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"scopes",
												"publicId",
												":publicId"
											],
											"variable": [
												{
													"key": "publicId",
													"value": "<string>",
													"description": "(Required) The public identifier of the scope."
												}
											]
										},
										"description": "Returns the scope identified by the given public id."
									},
									"response": [
										{
											"name": "The found scope",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/scopes/publicId/:publicId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"scopes",
														"publicId",
														":publicId"
													],
													"variable": [
														{
															"key": "publicId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Scope\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"publicId\": \"<string>\",\n  \"domains\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"NumericAttributeType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Address\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"communities\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Classification\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationLegType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Find scopes",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/scopes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"scopes"
							]
						},
						"description": "Returns all scopes."
					},
					"response": [
						{
							"name": "The found scopes",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/scopes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scopes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": \"<long>\",\n  \"offset\": \"<long>\",\n  \"limit\": \"<long>\",\n  \"results\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ActivityChange\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"publicId\": \"<string>\",\n      \"domains\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"InstantMessagingAccount\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ActivityChange\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"communities\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"InstantMessagingAccount\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ComplexRelationLegType\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DateAttributeType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"publicId\": \"<string>\",\n      \"domains\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Website\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Asset\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"communities\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Context\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"DiagramPictureAssignmentRule\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Add scope",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"publicId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"domainIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"communityIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/scopes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"scopes"
							]
						},
						"description": "Adds a new scope."
					},
					"response": [
						{
							"name": "Scope successfully added.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"publicId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"domainIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"communityIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/scopes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scopes"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Scope\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"publicId\": \"<string>\",\n  \"domains\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"NumericAttributeType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Address\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"communities\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Classification\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationLegType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "A scope with the given ID already exists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"publicId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"domainIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"communityIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/scopes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scopes"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "traitAssignments",
			"item": [
				{
					"name": "trait",
					"item": [
						{
							"name": "{traitId}",
							"item": [
								{
									"name": "Returns Trait Assignments for given trait id.",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/traitAssignments/trait/:traitId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"traitAssignments",
												"trait",
												":traitId"
											],
											"variable": [
												{
													"key": "traitId",
													"value": "<uuid>",
													"description": "(Required) The unique identifier of the Trait."
												}
											]
										},
										"description": "Returns Trait Assignments for given trait id."
									},
									"response": [
										{
											"name": "Trait Assignments found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/traitAssignments/trait/:traitId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"traitAssignments",
														"trait",
														":traitId"
													],
													"variable": [
														{
															"key": "traitId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"SingleValueListAttribute\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"trait\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"View\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"characteristicTypes\": [\n      {\n        \"assignedResourceType\": \"Attachment\",\n        \"minimumOccurrences\": \"<integer>\",\n        \"maximumOccurrences\": \"<integer>\",\n        \"assignedResourceId\": \"<uuid>\",\n        \"assignedCharacteristicTypeDiscriminator\": \"<string>\",\n        \"readOnly\": \"<boolean>\",\n        \"system\": \"<boolean>\",\n        \"id\": \"<uuid>\"\n      },\n      {\n        \"assignedResourceType\": \"JdbcDriverFile\",\n        \"minimumOccurrences\": \"<integer>\",\n        \"maximumOccurrences\": \"<integer>\",\n        \"assignedResourceId\": \"<uuid>\",\n        \"assignedCharacteristicTypeDiscriminator\": \"<string>\",\n        \"readOnly\": \"<boolean>\",\n        \"system\": \"<boolean>\",\n        \"id\": \"<uuid>\"\n      }\n    ],\n    \"scope\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"WorkflowTask\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"publicId\": \"<string>\",\n      \"domains\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Address\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ComplexRelationLeg\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"communities\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ComplexRelationLegType\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ViewAssignmentRule\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      ]\n    }\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"ClassificationMatch\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"trait\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"SingleValueListAttribute\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"characteristicTypes\": [\n      {\n        \"assignedResourceType\": \"DiagramPicture\",\n        \"minimumOccurrences\": \"<integer>\",\n        \"maximumOccurrences\": \"<integer>\",\n        \"assignedResourceId\": \"<uuid>\",\n        \"assignedCharacteristicTypeDiscriminator\": \"<string>\",\n        \"readOnly\": \"<boolean>\",\n        \"system\": \"<boolean>\",\n        \"id\": \"<uuid>\"\n      },\n      {\n        \"assignedResourceType\": \"RelationType\",\n        \"minimumOccurrences\": \"<integer>\",\n        \"maximumOccurrences\": \"<integer>\",\n        \"assignedResourceId\": \"<uuid>\",\n        \"assignedCharacteristicTypeDiscriminator\": \"<string>\",\n        \"readOnly\": \"<boolean>\",\n        \"system\": \"<boolean>\",\n        \"id\": \"<uuid>\"\n      }\n    ],\n    \"scope\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"NumericAttributeType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"publicId\": \"<string>\",\n      \"domains\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"SingleValueListAttribute\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Attribute\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      ],\n      \"communities\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"AdvancedDataType\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ConnectionStringParameter\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      ]\n    }\n  }\n]"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "diagramPictures",
			"item": [
				{
					"name": "Adds a diagram picture.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"assetId\": \"<uuid>\",\n  \"viewId\": \"<uuid>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/diagramPictures",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"diagramPictures"
							]
						},
						"description": "Take a diagram picture for a given asset and diagram view.\nA diagram picture is a copy of traceability diagram (result diagram) at a given time (for more information on traceability diagram check DGC User Guide).\n\nThe motivation behind diagram picture is to be able to reopen them at a later point in time and be able to see them them exactly as they were created. This feature is not possible for result diagram which are always showing the current situation."
					},
					"response": [
						{
							"name": "Diagram picture successfully added.The response contains a UUID of the added diagram picture. The UUID can be used to compose an URL to retrive the diagram picture.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"assetId\": \"<uuid>\",\n  \"viewId\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/diagramPictures",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"diagramPictures"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "<uuid>"
						}
					]
				}
			]
		},
		{
			"name": "files",
			"item": [
				{
					"name": "{fileId}",
					"item": [
						{
							"name": "info",
							"item": [
								{
									"name": "Get file information",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/files/:fileId/info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"files",
												":fileId",
												"info"
											],
											"variable": [
												{
													"key": "fileId",
													"value": "<uuid>",
													"description": "(Required) the id of the file"
												}
											]
										},
										"description": "Returns information about the file identified by given id. Keep in mind to use GET /attachments/{attachmentId} instead of this endpoint when you want to get information of an attachment. A File and its id can be temporary so it's possible this endpoint will not get you the information of the desired file."
									},
									"response": [
										{
											"name": "The file information",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/files/:fileId/info",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"files",
														":fileId",
														"info"
													],
													"variable": [
														{
															"key": "fileId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Scope\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"publicId\": \"<string>\",\n  \"domains\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"NumericAttributeType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Address\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"communities\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Classification\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationLegType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Download file",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/files/:fileId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										":fileId"
									],
									"variable": [
										{
											"key": "fileId",
											"value": "<uuid>",
											"description": "(Required) the id of the file"
										}
									]
								},
								"description": "Downloads file identified by given id.  Keep in mind to use GET /attachments/{attachmentId}/file instead of this endpoint when you want to get the file of an attachment.  A File and its id can be temporary so it's possible this endpoint will not get you the desired file."
							},
							"response": [
								{
									"name": "The file has been downloaded",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/files/:fileId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"files",
												":fileId"
											],
											"variable": [
												{
													"key": "fileId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "<binary>"
								}
							]
						},
						{
							"name": "Delete file",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/files/:fileId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										":fileId"
									],
									"variable": [
										{
											"key": "fileId",
											"value": "<uuid>",
											"description": "(Required) the id of the file"
										}
									]
								},
								"description": "Delete file for a given Id"
							},
							"response": [
								{
									"name": "default response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/files/:fileId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"files",
												":fileId"
											],
											"variable": [
												{
													"key": "fileId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "bulk",
					"item": [
						{
							"name": "Delete multiple files",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/files/bulk?timeToLive=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"bulk"
									],
									"query": [
										{
											"key": "timeToLive",
											"value": "<long>"
										}
									]
								},
								"description": "Deletes files that are older than the given time to live."
							},
							"response": [
								{
									"name": "default response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/files/bulk?timeToLive=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"files",
												"bulk"
											],
											"query": [
												{
													"key": "timeToLive",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Upload files",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "File to upload",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/files",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files"
							]
						},
						"description": "Upload files"
					},
					"response": [
						{
							"name": "Files successfully uploaded.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "File to upload",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/files",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"contentType\": \"<string>\",\n    \"size\": \"<long>\",\n    \"extension\": \"<string>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"contentType\": \"<string>\",\n    \"size\": \"<long>\",\n    \"extension\": \"<string>\"\n  }\n]"
						}
					]
				}
			]
		},
		{
			"name": "assets",
			"item": [
				{
					"name": "bulk",
					"item": [
						{
							"name": "Add multiple assets",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"domainId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"id\": \"<uuid>\",\n    \"statusId\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"domainId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"id\": \"<uuid>\",\n    \"statusId\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assets/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assets",
										"bulk"
									]
								},
								"description": "Adds multiple assets in one go"
							},
							"response": [
								{
									"name": "Created - The request has been fulfilled and resulted in a new resource being created.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"domainId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"id\": \"<uuid>\",\n    \"statusId\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"domainId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"id\": \"<uuid>\",\n    \"statusId\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/assets/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												"bulk"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Attribute\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"articulationScore\": \"<double>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"domain\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ClassificationMatch\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"type\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"UserGroup\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"status\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"AttributeType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"avgRating\": \"<double>\",\n    \"ratingsCount\": \"<integer>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"RelationType\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"articulationScore\": \"<double>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"domain\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Responsibility\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"type\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ViewAssignmentRule\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"status\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"WorkflowTask\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"avgRating\": \"<double>\",\n    \"ratingsCount\": \"<integer>\"\n  }\n]"
								},
								{
									"name": "Bad Request - Request data is malformed or illegal. The request body will contain additional information.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"domainId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"id\": \"<uuid>\",\n    \"statusId\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"domainId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"id\": \"<uuid>\",\n    \"statusId\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/assets/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												"bulk"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized - Authentication has failed or has not been provided.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"domainId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"id\": \"<uuid>\",\n    \"statusId\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"domainId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"id\": \"<uuid>\",\n    \"statusId\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/assets/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												"bulk"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "License Problem - There was a problem related to the license.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"domainId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"id\": \"<uuid>\",\n    \"statusId\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"domainId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"id\": \"<uuid>\",\n    \"statusId\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/assets/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												"bulk"
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden - Insufficient permissions to perform the requested operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"domainId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"id\": \"<uuid>\",\n    \"statusId\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"domainId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"id\": \"<uuid>\",\n    \"statusId\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/assets/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												"bulk"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"domainId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"id\": \"<uuid>\",\n    \"statusId\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"domainId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"id\": \"<uuid>\",\n    \"statusId\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/assets/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												"bulk"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Remove assets",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assets/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assets",
										"bulk"
									]
								},
								"description": "Removes multiple assets."
							},
							"response": [
								{
									"name": "No Content - The server has fulfilled the request but does not need to return an entity-body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/assets/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												"bulk"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request - Request data is malformed or illegal. The request body will contain additional information.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/assets/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												"bulk"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized - Authentication has failed or has not been provided.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/assets/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												"bulk"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "License Problem - There was a problem related to the license.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/assets/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												"bulk"
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden - Insufficient permissions to perform the requested operation.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/assets/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												"bulk"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/assets/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												"bulk"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Change multiple assets",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"statusId\": \"<uuid>\",\n    \"domainId\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"statusId\": \"<uuid>\",\n    \"domainId\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assets/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assets",
										"bulk"
									]
								},
								"description": "Changes multiple assets in one go"
							},
							"response": [
								{
									"name": "OK - The request has succeeded.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"statusId\": \"<uuid>\",\n    \"domainId\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"statusId\": \"<uuid>\",\n    \"domainId\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/assets/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												"bulk"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Attribute\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"articulationScore\": \"<double>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"domain\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ClassificationMatch\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"type\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"UserGroup\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"status\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"AttributeType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"avgRating\": \"<double>\",\n    \"ratingsCount\": \"<integer>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"RelationType\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"articulationScore\": \"<double>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"domain\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Responsibility\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"type\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ViewAssignmentRule\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"status\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"WorkflowTask\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"avgRating\": \"<double>\",\n    \"ratingsCount\": \"<integer>\"\n  }\n]"
								},
								{
									"name": "Bad Request - Request data is malformed or illegal. The request body will contain additional information.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"statusId\": \"<uuid>\",\n    \"domainId\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"statusId\": \"<uuid>\",\n    \"domainId\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/assets/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												"bulk"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized - Authentication has failed or has not been provided.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"statusId\": \"<uuid>\",\n    \"domainId\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"statusId\": \"<uuid>\",\n    \"domainId\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/assets/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												"bulk"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "License Problem - There was a problem related to the license.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"statusId\": \"<uuid>\",\n    \"domainId\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"statusId\": \"<uuid>\",\n    \"domainId\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/assets/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												"bulk"
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden - Insufficient permissions to perform the requested operation.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"statusId\": \"<uuid>\",\n    \"domainId\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"statusId\": \"<uuid>\",\n    \"domainId\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/assets/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												"bulk"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"statusId\": \"<uuid>\",\n    \"domainId\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"statusId\": \"<uuid>\",\n    \"domainId\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/assets/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												"bulk"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"statusId\": \"<uuid>\",\n    \"domainId\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"statusId\": \"<uuid>\",\n    \"domainId\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/assets/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												"bulk"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "{assetId}",
					"item": [
						{
							"name": "tags",
							"item": [
								{
									"name": "Get asset tags",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assets/:assetId/tags",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												":assetId",
												"tags"
											],
											"variable": [
												{
													"key": "assetId",
													"value": "<uuid>",
													"description": "(Required) The ID of the asset"
												}
											]
										},
										"description": "Returns all tags of the asset with the given ID."
									},
									"response": [
										{
											"name": "OK - The request has succeeded.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"tags"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"DomainType\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"assetsCount\": \"<integer>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Email\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"assetsCount\": \"<integer>\"\n  }\n]"
										},
										{
											"name": "Unauthorized - Authentication has failed or has not been provided.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"tags"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "License Problem - There was a problem related to the license.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"tags"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Payment Required",
											"code": 402,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden - Insufficient permissions to perform the requested operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"tags"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"tags"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"tags"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Set asset tags",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tagNames\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/assets/:assetId/tags",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												":assetId",
												"tags"
											],
											"variable": [
												{
													"key": "assetId",
													"value": "<uuid>",
													"description": "(Required) The ID of the asset"
												}
											]
										},
										"description": "Sets tags for the asset with the given ID. The asset will contain only those tags specified in the request."
									},
									"response": [
										{
											"name": "OK - The request has succeeded.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tagNames\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"tags"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"DomainType\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"assetsCount\": \"<integer>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Email\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"assetsCount\": \"<integer>\"\n  }\n]"
										},
										{
											"name": "Bad Request - Request data is malformed or illegal. The request body will contain additional information.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tagNames\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"tags"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized - Authentication has failed or has not been provided.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tagNames\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"tags"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "License Problem - There was a problem related to the license.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tagNames\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"tags"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Payment Required",
											"code": 402,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden - Insufficient permissions to perform the requested operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tagNames\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"tags"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tagNames\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"tags"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tagNames\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"tags"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Add tags",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tagNames\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/assets/:assetId/tags",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												":assetId",
												"tags"
											],
											"variable": [
												{
													"key": "assetId",
													"value": "<uuid>",
													"description": "(Required) The ID of the asset"
												}
											]
										},
										"description": "Adds tags to the asset with the given ID."
									},
									"response": [
										{
											"name": "Created - The request has been fulfilled and resulted in a new resource being created.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tagNames\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"tags"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"DomainType\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"assetsCount\": \"<integer>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Email\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"assetsCount\": \"<integer>\"\n  }\n]"
										},
										{
											"name": "Bad Request - Request data is malformed or illegal. The request body will contain additional information.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tagNames\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"tags"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized - Authentication has failed or has not been provided.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tagNames\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"tags"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "License Problem - There was a problem related to the license.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tagNames\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"tags"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Payment Required",
											"code": 402,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden - Insufficient permissions to perform the requested operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tagNames\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"tags"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tagNames\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"tags"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tagNames\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"tags"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Remove tags",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tagNames\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/assets/:assetId/tags",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												":assetId",
												"tags"
											],
											"variable": [
												{
													"key": "assetId",
													"value": "<uuid>",
													"description": "(Required) The ID of the asset"
												}
											]
										},
										"description": "Removes tags from the asset with the given ID."
									},
									"response": [
										{
											"name": "No Content - The server has fulfilled the request but does not need to return an entity-body.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tagNames\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"tags"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request - Request data is malformed or illegal. The request body will contain additional information.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tagNames\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"tags"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized - Authentication has failed or has not been provided.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tagNames\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"tags"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "License Problem - There was a problem related to the license.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tagNames\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"tags"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Payment Required",
											"code": 402,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden - Insufficient permissions to perform the requested operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tagNames\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"tags"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tagNames\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"tags"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tagNames\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"tags"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "breadcrumb",
							"item": [
								{
									"name": "Get asset breadcrumb",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assets/:assetId/breadcrumb",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												":assetId",
												"breadcrumb"
											],
											"variable": [
												{
													"key": "assetId",
													"value": "<string>",
													"description": "(Required) The ID of the asset"
												}
											]
										},
										"description": "Returns the list of resources that lead to the asset identified by the given ID."
									},
									"response": [
										{
											"name": "OK - The request has succeeded.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/breadcrumb",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"breadcrumb"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"DateAttributeType\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"StringAttributeType\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  }\n]"
										},
										{
											"name": "Unauthorized - Authentication has failed or has not been provided.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/breadcrumb",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"breadcrumb"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "License Problem - There was a problem related to the license.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/breadcrumb",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"breadcrumb"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Payment Required",
											"code": 402,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden - Insufficient permissions to perform the requested operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/breadcrumb",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"breadcrumb"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/breadcrumb",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"breadcrumb"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/breadcrumb",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"breadcrumb"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "attributes",
							"item": [
								{
									"name": "Set asset attributes",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"values\": [],\n  \"typeId\": \"<uuid>\",\n  \"typePublicId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/assets/:assetId/attributes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												":assetId",
												"attributes"
											],
											"variable": [
												{
													"key": "assetId",
													"value": "<uuid>",
													"description": "(Required) The ID of the asset"
												}
											]
										},
										"description": "Replaces all attributes of the asset with the given ID (of given attribute type) with the attributes from the request, except matching attributes, which are retained."
									},
									"response": [
										{
											"name": "OK - The request has succeeded.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"values\": [],\n  \"typeId\": \"<uuid>\",\n  \"typePublicId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/attributes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"attributes"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"attributeDiscriminator\": \"<string>\",\n    \"asset\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DomainType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"value\": {},\n    \"type\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"MultiValueListAttribute\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"resourceType\": \"PhysicalDataConnector\",\n    \"createdBy\": \"<uuid>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"id\": \"<uuid>\"\n  },\n  {\n    \"attributeDiscriminator\": \"<string>\",\n    \"asset\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"WorkflowInstance\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"value\": {},\n    \"type\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Domain\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"resourceType\": \"AssignedCharacteristicType\",\n    \"createdBy\": \"<uuid>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"id\": \"<uuid>\"\n  }\n]"
										},
										{
											"name": "Bad Request - Request data is malformed or illegal. The request body will contain additional information.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"values\": [],\n  \"typeId\": \"<uuid>\",\n  \"typePublicId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/attributes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"attributes"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized - Authentication has failed or has not been provided.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"values\": [],\n  \"typeId\": \"<uuid>\",\n  \"typePublicId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/attributes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"attributes"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "License Problem - There was a problem related to the license.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"values\": [],\n  \"typeId\": \"<uuid>\",\n  \"typePublicId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/attributes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"attributes"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Payment Required",
											"code": 402,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden - Insufficient permissions to perform the requested operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"values\": [],\n  \"typeId\": \"<uuid>\",\n  \"typePublicId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/attributes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"attributes"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"values\": [],\n  \"typeId\": \"<uuid>\",\n  \"typePublicId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/attributes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"attributes"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"values\": [],\n  \"typeId\": \"<uuid>\",\n  \"typePublicId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/attributes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"attributes"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "relations",
							"item": [
								{
									"name": "Set asset relations",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"relatedAssetIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"relationDirection\": \"TO_TARGET\",\n  \"typeId\": \"<uuid>\",\n  \"typePublicId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/assets/:assetId/relations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												":assetId",
												"relations"
											],
											"variable": [
												{
													"key": "assetId",
													"value": "<uuid>",
													"description": "(Required) The ID of the asset"
												}
											]
										},
										"description": "Sets relations for the asset with the given ID. All the relations described by this request will replace the existing ones (identified with asset as one end, relation type and direction of the relation)."
									},
									"response": [
										{
											"name": "OK - The request has succeeded.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"relatedAssetIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"relationDirection\": \"TO_TARGET\",\n  \"typeId\": \"<uuid>\",\n  \"typePublicId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/relations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"relations"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Role\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"source\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DiagramPicture\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"target\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"JdbcDriver\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"type\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ViewSharingRule\",\n      \"resourceDiscriminator\": \"<string>\"\n    },\n    \"startingDate\": \"<long>\",\n    \"endingDate\": \"<long>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Asset\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"source\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Responsibility\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"target\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"MultiValueListAttributeType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"type\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"BooleanAttribute\",\n      \"resourceDiscriminator\": \"<string>\"\n    },\n    \"startingDate\": \"<long>\",\n    \"endingDate\": \"<long>\"\n  }\n]"
										},
										{
											"name": "Bad Request - Request data is malformed or illegal. The request body will contain additional information.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"relatedAssetIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"relationDirection\": \"TO_TARGET\",\n  \"typeId\": \"<uuid>\",\n  \"typePublicId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/relations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"relations"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized - Authentication has failed or has not been provided.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"relatedAssetIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"relationDirection\": \"TO_TARGET\",\n  \"typeId\": \"<uuid>\",\n  \"typePublicId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/relations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"relations"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "License Problem - There was a problem related to the license.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"relatedAssetIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"relationDirection\": \"TO_TARGET\",\n  \"typeId\": \"<uuid>\",\n  \"typePublicId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/relations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"relations"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Payment Required",
											"code": 402,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden - Insufficient permissions to perform the requested operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"relatedAssetIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"relationDirection\": \"TO_TARGET\",\n  \"typeId\": \"<uuid>\",\n  \"typePublicId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/relations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"relations"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"relatedAssetIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"relationDirection\": \"TO_TARGET\",\n  \"typeId\": \"<uuid>\",\n  \"typePublicId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/relations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"relations"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"relatedAssetIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"relationDirection\": \"TO_TARGET\",\n  \"typeId\": \"<uuid>\",\n  \"typePublicId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/relations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"relations"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "responsibilities",
							"item": [
								{
									"name": "Set asset responsibilities",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ownerIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"roleId\": \"<uuid>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/assets/:assetId/responsibilities",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												":assetId",
												"responsibilities"
											],
											"variable": [
												{
													"key": "assetId",
													"value": "<uuid>",
													"description": "(Required) The ID of the asset"
												}
											]
										},
										"description": "Sets responsibilities for the asset with the given ID."
									},
									"response": [
										{
											"name": "OK - The request has succeeded.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ownerIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"roleId\": \"<uuid>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/responsibilities",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"responsibilities"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"ComplexRelationLeg\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"role\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ConnectionStringParameter\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"baseResource\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Notification\",\n      \"resourceDiscriminator\": \"<string>\"\n    },\n    \"owner\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ScriptAttributeType\",\n      \"resourceDiscriminator\": \"<string>\"\n    }\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Scope\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"role\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"JdbcDriver\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"baseResource\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationLegType\",\n      \"resourceDiscriminator\": \"<string>\"\n    },\n    \"owner\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"AssignedCharacteristicType\",\n      \"resourceDiscriminator\": \"<string>\"\n    }\n  }\n]"
										},
										{
											"name": "Bad Request - Request data is malformed or illegal. The request body will contain additional information.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ownerIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"roleId\": \"<uuid>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/responsibilities",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"responsibilities"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized - Authentication has failed or has not been provided.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ownerIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"roleId\": \"<uuid>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/responsibilities",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"responsibilities"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "License Problem - There was a problem related to the license.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ownerIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"roleId\": \"<uuid>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/responsibilities",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"responsibilities"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Payment Required",
											"code": 402,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden - Insufficient permissions to perform the requested operation.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ownerIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"roleId\": \"<uuid>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/responsibilities",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"responsibilities"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ownerIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"roleId\": \"<uuid>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/responsibilities",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"responsibilities"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ownerIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"roleId\": \"<uuid>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/assets/:assetId/responsibilities",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assets",
														":assetId",
														"responsibilities"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get asset",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/assets/:assetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assets",
										":assetId"
									],
									"variable": [
										{
											"key": "assetId",
											"value": "<uuid>",
											"description": "(Required) The ID of the asset"
										}
									]
								},
								"description": "Returns the asset having the given ID."
							},
							"response": [
								{
									"name": "OK - The request has succeeded.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assets/:assetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												":assetId"
											],
											"variable": [
												{
													"key": "assetId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Tag\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"displayName\": \"<string>\",\n  \"articulationScore\": \"<double>\",\n  \"excludedFromAutoHyperlinking\": \"<boolean>\",\n  \"domain\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"DiagramPictureAssignmentRule\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"type\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"DateAttribute\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"status\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"DateAttribute\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"avgRating\": \"<double>\",\n  \"ratingsCount\": \"<integer>\"\n}"
								},
								{
									"name": "Unauthorized - Authentication has failed or has not been provided.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assets/:assetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												":assetId"
											],
											"variable": [
												{
													"key": "assetId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "License Problem - There was a problem related to the license.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assets/:assetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												":assetId"
											],
											"variable": [
												{
													"key": "assetId"
												}
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden - Insufficient permissions to perform the requested operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assets/:assetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												":assetId"
											],
											"variable": [
												{
													"key": "assetId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assets/:assetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												":assetId"
											],
											"variable": [
												{
													"key": "assetId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assets/:assetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												":assetId"
											],
											"variable": [
												{
													"key": "assetId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Remove asset",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/assets/:assetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assets",
										":assetId"
									],
									"variable": [
										{
											"key": "assetId",
											"value": "<uuid>",
											"description": "(Required) The ID of the asset"
										}
									]
								},
								"description": "Removes an asset identified by given ID."
							},
							"response": [
								{
									"name": "No Content - The server has fulfilled the request but does not need to return an entity-body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assets/:assetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												":assetId"
											],
											"variable": [
												{
													"key": "assetId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized - Authentication has failed or has not been provided.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assets/:assetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												":assetId"
											],
											"variable": [
												{
													"key": "assetId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "License Problem - There was a problem related to the license.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assets/:assetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												":assetId"
											],
											"variable": [
												{
													"key": "assetId"
												}
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden - Insufficient permissions to perform the requested operation.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assets/:assetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												":assetId"
											],
											"variable": [
												{
													"key": "assetId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assets/:assetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												":assetId"
											],
											"variable": [
												{
													"key": "assetId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assets/:assetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												":assetId"
											],
											"variable": [
												{
													"key": "assetId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Change asset",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"displayName\": \"<string>\",\n  \"typeId\": \"<uuid>\",\n  \"statusId\": \"<uuid>\",\n  \"domainId\": \"<uuid>\",\n  \"excludedFromAutoHyperlinking\": \"<boolean>\",\n  \"typePublicId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assets/:assetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assets",
										":assetId"
									],
									"variable": [
										{
											"key": "assetId",
											"value": "<uuid>",
											"description": "(Required) The ID of the asset to be changed"
										}
									]
								},
								"description": "Changes the asset with the given ID as specified by the given request. Only properties that are specified in this request and have not <code>null</code> values are updated. All other properties are ignored."
							},
							"response": [
								{
									"name": "OK - The request has succeeded.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"displayName\": \"<string>\",\n  \"typeId\": \"<uuid>\",\n  \"statusId\": \"<uuid>\",\n  \"domainId\": \"<uuid>\",\n  \"excludedFromAutoHyperlinking\": \"<boolean>\",\n  \"typePublicId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/assets/:assetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												":assetId"
											],
											"variable": [
												{
													"key": "assetId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Tag\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"displayName\": \"<string>\",\n  \"articulationScore\": \"<double>\",\n  \"excludedFromAutoHyperlinking\": \"<boolean>\",\n  \"domain\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"DiagramPictureAssignmentRule\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"type\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"DateAttribute\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"status\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"DateAttribute\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"avgRating\": \"<double>\",\n  \"ratingsCount\": \"<integer>\"\n}"
								},
								{
									"name": "Bad Request - Request data is malformed or illegal. The request body will contain additional information.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"displayName\": \"<string>\",\n  \"typeId\": \"<uuid>\",\n  \"statusId\": \"<uuid>\",\n  \"domainId\": \"<uuid>\",\n  \"excludedFromAutoHyperlinking\": \"<boolean>\",\n  \"typePublicId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/assets/:assetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												":assetId"
											],
											"variable": [
												{
													"key": "assetId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized - Authentication has failed or has not been provided.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"displayName\": \"<string>\",\n  \"typeId\": \"<uuid>\",\n  \"statusId\": \"<uuid>\",\n  \"domainId\": \"<uuid>\",\n  \"excludedFromAutoHyperlinking\": \"<boolean>\",\n  \"typePublicId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/assets/:assetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												":assetId"
											],
											"variable": [
												{
													"key": "assetId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "License Problem - There was a problem related to the license.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"displayName\": \"<string>\",\n  \"typeId\": \"<uuid>\",\n  \"statusId\": \"<uuid>\",\n  \"domainId\": \"<uuid>\",\n  \"excludedFromAutoHyperlinking\": \"<boolean>\",\n  \"typePublicId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/assets/:assetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												":assetId"
											],
											"variable": [
												{
													"key": "assetId"
												}
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden - Insufficient permissions to perform the requested operation.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"displayName\": \"<string>\",\n  \"typeId\": \"<uuid>\",\n  \"statusId\": \"<uuid>\",\n  \"domainId\": \"<uuid>\",\n  \"excludedFromAutoHyperlinking\": \"<boolean>\",\n  \"typePublicId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/assets/:assetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												":assetId"
											],
											"variable": [
												{
													"key": "assetId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"displayName\": \"<string>\",\n  \"typeId\": \"<uuid>\",\n  \"statusId\": \"<uuid>\",\n  \"domainId\": \"<uuid>\",\n  \"excludedFromAutoHyperlinking\": \"<boolean>\",\n  \"typePublicId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/assets/:assetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												":assetId"
											],
											"variable": [
												{
													"key": "assetId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"displayName\": \"<string>\",\n  \"typeId\": \"<uuid>\",\n  \"statusId\": \"<uuid>\",\n  \"domainId\": \"<uuid>\",\n  \"excludedFromAutoHyperlinking\": \"<boolean>\",\n  \"typePublicId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/assets/:assetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assets",
												":assetId"
											],
											"variable": [
												{
													"key": "assetId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Find assets",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/assets?offset=0&limit=0&countLimit=-1&cursor=<string>&name=<string>&nameMatchMode=ANYWHERE&domainId=<uuid>&communityId=<uuid>&typeIds=<uuid>&typeIds=<uuid>&typePublicIds=<string>&typePublicIds=<string>&typeId=<uuid>&typeId=<uuid>&statusIds=<uuid>&statusIds=<uuid>&statusId=<uuid>&statusId=<uuid>&tagNames=<string>&tagNames=<string>&typeInheritance=true&excludeMeta=true&sortField=NAME&sortOrder=ASC",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assets"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>. Cursor should be preferred over offset for better performance and stable results. It is forbidden to use both in the same request."
								},
								{
									"key": "limit",
									"value": "0",
									"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
								},
								{
									"key": "countLimit",
									"value": "-1",
									"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped. For cursor pagination this parameter is ignored and count is skipped."
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for the current page of results. To retrieve the first page with cursor pagination you need to pass this parameter with an empty value (must be non-null). For the next pages, the value must be taken from the response (<code>nextCursor</code> property)."
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "The name of the asset to search for (either display name or full name)."
								},
								{
									"key": "nameMatchMode",
									"value": "ANYWHERE",
									"description": "The match mode used to compare <code>name</code>. If the match mode is <code>EXACT</code> the search is case-sensitive, otherwise the search is case-insensitive."
								},
								{
									"key": "domainId",
									"value": "<uuid>",
									"description": "The ID of the domain to find the assets in."
								},
								{
									"key": "communityId",
									"value": "<uuid>",
									"description": "The ID of the community to find the assets in."
								},
								{
									"key": "typeIds",
									"value": "<uuid>",
									"description": "The list of IDs of the asset types. The returned assets are of one of types specified by this parameter."
								},
								{
									"key": "typeIds",
									"value": "<uuid>",
									"description": "The list of IDs of the asset types. The returned assets are of one of types specified by this parameter."
								},
								{
									"key": "typePublicIds",
									"value": "<string>",
									"description": "The list of IDs of the asset public types. The returned assets are of one of types specified by this parameter."
								},
								{
									"key": "typePublicIds",
									"value": "<string>",
									"description": "The list of IDs of the asset public types. The returned assets are of one of types specified by this parameter."
								},
								{
									"key": "typeId",
									"value": "<uuid>",
									"description": "The list of IDs of the asset types. The returned assets are of one of types specified by this parameter.  Deprecated in favour of 'typeIds'"
								},
								{
									"key": "typeId",
									"value": "<uuid>",
									"description": "The list of IDs of the asset types. The returned assets are of one of types specified by this parameter.  Deprecated in favour of 'typeIds'"
								},
								{
									"key": "statusIds",
									"value": "<uuid>",
									"description": "The list of IDs of the statuses. The returned assets have one of statuses specified by this parameter."
								},
								{
									"key": "statusIds",
									"value": "<uuid>",
									"description": "The list of IDs of the statuses. The returned assets have one of statuses specified by this parameter."
								},
								{
									"key": "statusId",
									"value": "<uuid>",
									"description": "The list of IDs of the statuses. The returned assets have one of statuses specified by this parameter. Deprecated in favour of 'statusIds'."
								},
								{
									"key": "statusId",
									"value": "<uuid>",
									"description": "The list of IDs of the statuses. The returned assets have one of statuses specified by this parameter. Deprecated in favour of 'statusIds'."
								},
								{
									"key": "tagNames",
									"value": "<string>",
									"description": "The list of names of tags. The returned assets have one of tags with names specified by this parameter."
								},
								{
									"key": "tagNames",
									"value": "<string>",
									"description": "The list of names of tags. The returned assets have one of tags with names specified by this parameter."
								},
								{
									"key": "typeInheritance",
									"value": "true",
									"description": "Whether the type inheritance for the asset type filtering should be applied or not."
								},
								{
									"key": "excludeMeta",
									"value": "true",
									"description": "The exclude meta flag. If this is set to true then the assets from meta domains will not be returned (meta domains are the domains which were not created by the user manually)."
								},
								{
									"key": "sortField",
									"value": "NAME",
									"description": "(Required) The field on which the results are sorted."
								},
								{
									"key": "sortOrder",
									"value": "ASC",
									"description": "The sorting order."
								}
							]
						},
						"description": "Returns assets matching the given search criteria. Only parameters that are specified in this request and have not <code>null</code> values are used for filtering. All other parameters are ignored. By default a result containing 1000 assets is returned."
					},
					"response": [
						{
							"name": "OK - The request has succeeded.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/assets?offset=0&limit=0&countLimit=-1&cursor=<string>&name=<string>&nameMatchMode=ANYWHERE&domainId=<uuid>&communityId=<uuid>&typeIds=<uuid>&typePublicIds=<string>&typeId=<uuid>&statusIds=<uuid>&statusId=<uuid>&tagNames=<string>&typeInheritance=true&excludeMeta=true&sortField=NAME&sortOrder=ASC",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assets"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>. Cursor should be preferred over offset for better performance and stable results. It is forbidden to use both in the same request."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped. For cursor pagination this parameter is ignored and count is skipped."
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Cursor for the current page of results. To retrieve the first page with cursor pagination you need to pass this parameter with an empty value (must be non-null). For the next pages, the value must be taken from the response (<code>nextCursor</code> property)."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "The name of the asset to search for (either display name or full name)."
										},
										{
											"key": "nameMatchMode",
											"value": "ANYWHERE",
											"description": "The match mode used to compare <code>name</code>. If the match mode is <code>EXACT</code> the search is case-sensitive, otherwise the search is case-insensitive."
										},
										{
											"key": "domainId",
											"value": "<uuid>",
											"description": "The ID of the domain to find the assets in."
										},
										{
											"key": "communityId",
											"value": "<uuid>",
											"description": "The ID of the community to find the assets in."
										},
										{
											"key": "typeIds",
											"value": "<uuid>",
											"description": "The list of IDs of the asset types. The returned assets are of one of types specified by this parameter."
										},
										{
											"key": "typePublicIds",
											"value": "<string>",
											"description": "The list of IDs of the asset public types. The returned assets are of one of types specified by this parameter."
										},
										{
											"key": "typeId",
											"value": "<uuid>",
											"description": "The list of IDs of the asset types. The returned assets are of one of types specified by this parameter.  Deprecated in favour of 'typeIds'"
										},
										{
											"key": "statusIds",
											"value": "<uuid>",
											"description": "The list of IDs of the statuses. The returned assets have one of statuses specified by this parameter."
										},
										{
											"key": "statusId",
											"value": "<uuid>",
											"description": "The list of IDs of the statuses. The returned assets have one of statuses specified by this parameter. Deprecated in favour of 'statusIds'."
										},
										{
											"key": "tagNames",
											"value": "<string>",
											"description": "The list of names of tags. The returned assets have one of tags with names specified by this parameter."
										},
										{
											"key": "typeInheritance",
											"value": "true",
											"description": "Whether the type inheritance for the asset type filtering should be applied or not."
										},
										{
											"key": "excludeMeta",
											"value": "true",
											"description": "The exclude meta flag. If this is set to true then the assets from meta domains will not be returned (meta domains are the domains which were not created by the user manually)."
										},
										{
											"key": "sortField",
											"value": "NAME",
											"description": "(Required) The field on which the results are sorted."
										},
										{
											"key": "sortOrder",
											"value": "ASC",
											"description": "The sorting order."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": \"<long>\",\n  \"offset\": \"<long>\",\n  \"limit\": \"<long>\",\n  \"results\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Notification\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"articulationScore\": \"<double>\",\n      \"excludedFromAutoHyperlinking\": \"<boolean>\",\n      \"domain\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ExcelIngestionProperties\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"type\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"WorkflowInstance\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"status\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ComplexRelationAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"avgRating\": \"<double>\",\n      \"ratingsCount\": \"<integer>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Community\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"articulationScore\": \"<double>\",\n      \"excludedFromAutoHyperlinking\": \"<boolean>\",\n      \"domain\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ClassificationMatch\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"type\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"SingleValueListAttribute\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"status\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"StringAttribute\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"avgRating\": \"<double>\",\n      \"ratingsCount\": \"<integer>\"\n    }\n  ]\n}"
						},
						{
							"name": "Unauthorized - Authentication has failed or has not been provided.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/assets?offset=0&limit=0&countLimit=-1&cursor=<string>&name=<string>&nameMatchMode=ANYWHERE&domainId=<uuid>&communityId=<uuid>&typeIds=<uuid>&typePublicIds=<string>&typeId=<uuid>&statusIds=<uuid>&statusId=<uuid>&tagNames=<string>&typeInheritance=true&excludeMeta=true&sortField=NAME&sortOrder=ASC",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assets"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>. Cursor should be preferred over offset for better performance and stable results. It is forbidden to use both in the same request."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped. For cursor pagination this parameter is ignored and count is skipped."
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Cursor for the current page of results. To retrieve the first page with cursor pagination you need to pass this parameter with an empty value (must be non-null). For the next pages, the value must be taken from the response (<code>nextCursor</code> property)."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "The name of the asset to search for (either display name or full name)."
										},
										{
											"key": "nameMatchMode",
											"value": "ANYWHERE",
											"description": "The match mode used to compare <code>name</code>. If the match mode is <code>EXACT</code> the search is case-sensitive, otherwise the search is case-insensitive."
										},
										{
											"key": "domainId",
											"value": "<uuid>",
											"description": "The ID of the domain to find the assets in."
										},
										{
											"key": "communityId",
											"value": "<uuid>",
											"description": "The ID of the community to find the assets in."
										},
										{
											"key": "typeIds",
											"value": "<uuid>",
											"description": "The list of IDs of the asset types. The returned assets are of one of types specified by this parameter."
										},
										{
											"key": "typePublicIds",
											"value": "<string>",
											"description": "The list of IDs of the asset public types. The returned assets are of one of types specified by this parameter."
										},
										{
											"key": "typeId",
											"value": "<uuid>",
											"description": "The list of IDs of the asset types. The returned assets are of one of types specified by this parameter.  Deprecated in favour of 'typeIds'"
										},
										{
											"key": "statusIds",
											"value": "<uuid>",
											"description": "The list of IDs of the statuses. The returned assets have one of statuses specified by this parameter."
										},
										{
											"key": "statusId",
											"value": "<uuid>",
											"description": "The list of IDs of the statuses. The returned assets have one of statuses specified by this parameter. Deprecated in favour of 'statusIds'."
										},
										{
											"key": "tagNames",
											"value": "<string>",
											"description": "The list of names of tags. The returned assets have one of tags with names specified by this parameter."
										},
										{
											"key": "typeInheritance",
											"value": "true",
											"description": "Whether the type inheritance for the asset type filtering should be applied or not."
										},
										{
											"key": "excludeMeta",
											"value": "true",
											"description": "The exclude meta flag. If this is set to true then the assets from meta domains will not be returned (meta domains are the domains which were not created by the user manually)."
										},
										{
											"key": "sortField",
											"value": "NAME",
											"description": "(Required) The field on which the results are sorted."
										},
										{
											"key": "sortOrder",
											"value": "ASC",
											"description": "The sorting order."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "License Problem - There was a problem related to the license.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/assets?offset=0&limit=0&countLimit=-1&cursor=<string>&name=<string>&nameMatchMode=ANYWHERE&domainId=<uuid>&communityId=<uuid>&typeIds=<uuid>&typePublicIds=<string>&typeId=<uuid>&statusIds=<uuid>&statusId=<uuid>&tagNames=<string>&typeInheritance=true&excludeMeta=true&sortField=NAME&sortOrder=ASC",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assets"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>. Cursor should be preferred over offset for better performance and stable results. It is forbidden to use both in the same request."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped. For cursor pagination this parameter is ignored and count is skipped."
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Cursor for the current page of results. To retrieve the first page with cursor pagination you need to pass this parameter with an empty value (must be non-null). For the next pages, the value must be taken from the response (<code>nextCursor</code> property)."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "The name of the asset to search for (either display name or full name)."
										},
										{
											"key": "nameMatchMode",
											"value": "ANYWHERE",
											"description": "The match mode used to compare <code>name</code>. If the match mode is <code>EXACT</code> the search is case-sensitive, otherwise the search is case-insensitive."
										},
										{
											"key": "domainId",
											"value": "<uuid>",
											"description": "The ID of the domain to find the assets in."
										},
										{
											"key": "communityId",
											"value": "<uuid>",
											"description": "The ID of the community to find the assets in."
										},
										{
											"key": "typeIds",
											"value": "<uuid>",
											"description": "The list of IDs of the asset types. The returned assets are of one of types specified by this parameter."
										},
										{
											"key": "typePublicIds",
											"value": "<string>",
											"description": "The list of IDs of the asset public types. The returned assets are of one of types specified by this parameter."
										},
										{
											"key": "typeId",
											"value": "<uuid>",
											"description": "The list of IDs of the asset types. The returned assets are of one of types specified by this parameter.  Deprecated in favour of 'typeIds'"
										},
										{
											"key": "statusIds",
											"value": "<uuid>",
											"description": "The list of IDs of the statuses. The returned assets have one of statuses specified by this parameter."
										},
										{
											"key": "statusId",
											"value": "<uuid>",
											"description": "The list of IDs of the statuses. The returned assets have one of statuses specified by this parameter. Deprecated in favour of 'statusIds'."
										},
										{
											"key": "tagNames",
											"value": "<string>",
											"description": "The list of names of tags. The returned assets have one of tags with names specified by this parameter."
										},
										{
											"key": "typeInheritance",
											"value": "true",
											"description": "Whether the type inheritance for the asset type filtering should be applied or not."
										},
										{
											"key": "excludeMeta",
											"value": "true",
											"description": "The exclude meta flag. If this is set to true then the assets from meta domains will not be returned (meta domains are the domains which were not created by the user manually)."
										},
										{
											"key": "sortField",
											"value": "NAME",
											"description": "(Required) The field on which the results are sorted."
										},
										{
											"key": "sortOrder",
											"value": "ASC",
											"description": "The sorting order."
										}
									]
								}
							},
							"status": "Payment Required",
							"code": 402,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/assets?offset=0&limit=0&countLimit=-1&cursor=<string>&name=<string>&nameMatchMode=ANYWHERE&domainId=<uuid>&communityId=<uuid>&typeIds=<uuid>&typePublicIds=<string>&typeId=<uuid>&statusIds=<uuid>&statusId=<uuid>&tagNames=<string>&typeInheritance=true&excludeMeta=true&sortField=NAME&sortOrder=ASC",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assets"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>. Cursor should be preferred over offset for better performance and stable results. It is forbidden to use both in the same request."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped. For cursor pagination this parameter is ignored and count is skipped."
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Cursor for the current page of results. To retrieve the first page with cursor pagination you need to pass this parameter with an empty value (must be non-null). For the next pages, the value must be taken from the response (<code>nextCursor</code> property)."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "The name of the asset to search for (either display name or full name)."
										},
										{
											"key": "nameMatchMode",
											"value": "ANYWHERE",
											"description": "The match mode used to compare <code>name</code>. If the match mode is <code>EXACT</code> the search is case-sensitive, otherwise the search is case-insensitive."
										},
										{
											"key": "domainId",
											"value": "<uuid>",
											"description": "The ID of the domain to find the assets in."
										},
										{
											"key": "communityId",
											"value": "<uuid>",
											"description": "The ID of the community to find the assets in."
										},
										{
											"key": "typeIds",
											"value": "<uuid>",
											"description": "The list of IDs of the asset types. The returned assets are of one of types specified by this parameter."
										},
										{
											"key": "typePublicIds",
											"value": "<string>",
											"description": "The list of IDs of the asset public types. The returned assets are of one of types specified by this parameter."
										},
										{
											"key": "typeId",
											"value": "<uuid>",
											"description": "The list of IDs of the asset types. The returned assets are of one of types specified by this parameter.  Deprecated in favour of 'typeIds'"
										},
										{
											"key": "statusIds",
											"value": "<uuid>",
											"description": "The list of IDs of the statuses. The returned assets have one of statuses specified by this parameter."
										},
										{
											"key": "statusId",
											"value": "<uuid>",
											"description": "The list of IDs of the statuses. The returned assets have one of statuses specified by this parameter. Deprecated in favour of 'statusIds'."
										},
										{
											"key": "tagNames",
											"value": "<string>",
											"description": "The list of names of tags. The returned assets have one of tags with names specified by this parameter."
										},
										{
											"key": "typeInheritance",
											"value": "true",
											"description": "Whether the type inheritance for the asset type filtering should be applied or not."
										},
										{
											"key": "excludeMeta",
											"value": "true",
											"description": "The exclude meta flag. If this is set to true then the assets from meta domains will not be returned (meta domains are the domains which were not created by the user manually)."
										},
										{
											"key": "sortField",
											"value": "NAME",
											"description": "(Required) The field on which the results are sorted."
										},
										{
											"key": "sortOrder",
											"value": "ASC",
											"description": "The sorting order."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/assets?offset=0&limit=0&countLimit=-1&cursor=<string>&name=<string>&nameMatchMode=ANYWHERE&domainId=<uuid>&communityId=<uuid>&typeIds=<uuid>&typePublicIds=<string>&typeId=<uuid>&statusIds=<uuid>&statusId=<uuid>&tagNames=<string>&typeInheritance=true&excludeMeta=true&sortField=NAME&sortOrder=ASC",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assets"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>. Cursor should be preferred over offset for better performance and stable results. It is forbidden to use both in the same request."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped. For cursor pagination this parameter is ignored and count is skipped."
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Cursor for the current page of results. To retrieve the first page with cursor pagination you need to pass this parameter with an empty value (must be non-null). For the next pages, the value must be taken from the response (<code>nextCursor</code> property)."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "The name of the asset to search for (either display name or full name)."
										},
										{
											"key": "nameMatchMode",
											"value": "ANYWHERE",
											"description": "The match mode used to compare <code>name</code>. If the match mode is <code>EXACT</code> the search is case-sensitive, otherwise the search is case-insensitive."
										},
										{
											"key": "domainId",
											"value": "<uuid>",
											"description": "The ID of the domain to find the assets in."
										},
										{
											"key": "communityId",
											"value": "<uuid>",
											"description": "The ID of the community to find the assets in."
										},
										{
											"key": "typeIds",
											"value": "<uuid>",
											"description": "The list of IDs of the asset types. The returned assets are of one of types specified by this parameter."
										},
										{
											"key": "typePublicIds",
											"value": "<string>",
											"description": "The list of IDs of the asset public types. The returned assets are of one of types specified by this parameter."
										},
										{
											"key": "typeId",
											"value": "<uuid>",
											"description": "The list of IDs of the asset types. The returned assets are of one of types specified by this parameter.  Deprecated in favour of 'typeIds'"
										},
										{
											"key": "statusIds",
											"value": "<uuid>",
											"description": "The list of IDs of the statuses. The returned assets have one of statuses specified by this parameter."
										},
										{
											"key": "statusId",
											"value": "<uuid>",
											"description": "The list of IDs of the statuses. The returned assets have one of statuses specified by this parameter. Deprecated in favour of 'statusIds'."
										},
										{
											"key": "tagNames",
											"value": "<string>",
											"description": "The list of names of tags. The returned assets have one of tags with names specified by this parameter."
										},
										{
											"key": "typeInheritance",
											"value": "true",
											"description": "Whether the type inheritance for the asset type filtering should be applied or not."
										},
										{
											"key": "excludeMeta",
											"value": "true",
											"description": "The exclude meta flag. If this is set to true then the assets from meta domains will not be returned (meta domains are the domains which were not created by the user manually)."
										},
										{
											"key": "sortField",
											"value": "NAME",
											"description": "(Required) The field on which the results are sorted."
										},
										{
											"key": "sortOrder",
											"value": "ASC",
											"description": "The sorting order."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add asset",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"domainId\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"displayName\": \"<string>\",\n  \"typeId\": \"<uuid>\",\n  \"id\": \"<uuid>\",\n  \"statusId\": \"<uuid>\",\n  \"excludedFromAutoHyperlinking\": \"<boolean>\",\n  \"typePublicId\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/assets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assets"
							]
						},
						"description": "Adds a new asset to a domain"
					},
					"response": [
						{
							"name": "Created - The request has been fulfilled and resulted in a new resource being created.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"domainId\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"displayName\": \"<string>\",\n  \"typeId\": \"<uuid>\",\n  \"id\": \"<uuid>\",\n  \"statusId\": \"<uuid>\",\n  \"excludedFromAutoHyperlinking\": \"<boolean>\",\n  \"typePublicId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assets"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Tag\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"displayName\": \"<string>\",\n  \"articulationScore\": \"<double>\",\n  \"excludedFromAutoHyperlinking\": \"<boolean>\",\n  \"domain\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"DiagramPictureAssignmentRule\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"type\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"DateAttribute\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"status\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"DateAttribute\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"avgRating\": \"<double>\",\n  \"ratingsCount\": \"<integer>\"\n}"
						},
						{
							"name": "Bad Request - Request data is malformed or illegal. The request body will contain additional information.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"domainId\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"displayName\": \"<string>\",\n  \"typeId\": \"<uuid>\",\n  \"id\": \"<uuid>\",\n  \"statusId\": \"<uuid>\",\n  \"excludedFromAutoHyperlinking\": \"<boolean>\",\n  \"typePublicId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assets"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized - Authentication has failed or has not been provided.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"domainId\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"displayName\": \"<string>\",\n  \"typeId\": \"<uuid>\",\n  \"id\": \"<uuid>\",\n  \"statusId\": \"<uuid>\",\n  \"excludedFromAutoHyperlinking\": \"<boolean>\",\n  \"typePublicId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assets"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "License Problem - There was a problem related to the license.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"domainId\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"displayName\": \"<string>\",\n  \"typeId\": \"<uuid>\",\n  \"id\": \"<uuid>\",\n  \"statusId\": \"<uuid>\",\n  \"excludedFromAutoHyperlinking\": \"<boolean>\",\n  \"typePublicId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assets"
									]
								}
							},
							"status": "Payment Required",
							"code": 402,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden - Insufficient permissions to perform the requested operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"domainId\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"displayName\": \"<string>\",\n  \"typeId\": \"<uuid>\",\n  \"id\": \"<uuid>\",\n  \"statusId\": \"<uuid>\",\n  \"excludedFromAutoHyperlinking\": \"<boolean>\",\n  \"typePublicId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assets"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"domainId\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"displayName\": \"<string>\",\n  \"typeId\": \"<uuid>\",\n  \"id\": \"<uuid>\",\n  \"statusId\": \"<uuid>\",\n  \"excludedFromAutoHyperlinking\": \"<boolean>\",\n  \"typePublicId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assets"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "attachments",
			"item": [
				{
					"name": "{attachmentId}",
					"item": [
						{
							"name": "file",
							"item": [
								{
									"name": "Get attachment content",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/attachments/:attachmentId/file",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attachments",
												":attachmentId",
												"file"
											],
											"variable": [
												{
													"key": "attachmentId",
													"value": "<uuid>",
													"description": "(Required) the id of the attachment"
												}
											]
										},
										"description": "Returns content of the attachment identified by given id."
									},
									"response": [
										{
											"name": "OK - The request has succeeded.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/attachments/:attachmentId/file",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"attachments",
														":attachmentId",
														"file"
													],
													"variable": [
														{
															"key": "attachmentId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "<binary>"
										},
										{
											"name": "Unauthorized - Authentication has failed or has not been provided.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/attachments/:attachmentId/file",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"attachments",
														":attachmentId",
														"file"
													],
													"variable": [
														{
															"key": "attachmentId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "License Problem - There was a problem related to the license.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/attachments/:attachmentId/file",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"attachments",
														":attachmentId",
														"file"
													],
													"variable": [
														{
															"key": "attachmentId"
														}
													]
												}
											},
											"status": "Payment Required",
											"code": 402,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden - Insufficient permissions to perform the requested operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/attachments/:attachmentId/file",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"attachments",
														":attachmentId",
														"file"
													],
													"variable": [
														{
															"key": "attachmentId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/attachments/:attachmentId/file",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"attachments",
														":attachmentId",
														"file"
													],
													"variable": [
														{
															"key": "attachmentId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/attachments/:attachmentId/file",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"attachments",
														":attachmentId",
														"file"
													],
													"variable": [
														{
															"key": "attachmentId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get attachment",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/attachments/:attachmentId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attachments",
										":attachmentId"
									],
									"variable": [
										{
											"key": "attachmentId",
											"value": "<uuid>",
											"description": "(Required) the id of the attachment"
										}
									]
								},
								"description": "Returns information about the attachment identified by id."
							},
							"response": [
								{
									"name": "OK - The request has succeeded.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/attachments/:attachmentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attachments",
												":attachmentId"
											],
											"variable": [
												{
													"key": "attachmentId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"BaseDataType\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"baseResource\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Email\",\n    \"resourceDiscriminator\": \"<string>\"\n  },\n  \"file\": {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"contentType\": \"<string>\"\n  }\n}"
								},
								{
									"name": "Unauthorized - Authentication has failed or has not been provided.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/attachments/:attachmentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attachments",
												":attachmentId"
											],
											"variable": [
												{
													"key": "attachmentId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "License Problem - There was a problem related to the license.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/attachments/:attachmentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attachments",
												":attachmentId"
											],
											"variable": [
												{
													"key": "attachmentId"
												}
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden - Insufficient permissions to perform the requested operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/attachments/:attachmentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attachments",
												":attachmentId"
											],
											"variable": [
												{
													"key": "attachmentId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/attachments/:attachmentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attachments",
												":attachmentId"
											],
											"variable": [
												{
													"key": "attachmentId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/attachments/:attachmentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attachments",
												":attachmentId"
											],
											"variable": [
												{
													"key": "attachmentId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Remove attachment",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/attachments/:attachmentId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attachments",
										":attachmentId"
									],
									"variable": [
										{
											"key": "attachmentId",
											"value": "<uuid>",
											"description": "(Required) the id of the attachment"
										}
									]
								},
								"description": "Removes attachment identified by given id."
							},
							"response": [
								{
									"name": "No Content - The server has fulfilled the request but does not need to return an entity-body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/attachments/:attachmentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attachments",
												":attachmentId"
											],
											"variable": [
												{
													"key": "attachmentId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized - Authentication has failed or has not been provided.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/attachments/:attachmentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attachments",
												":attachmentId"
											],
											"variable": [
												{
													"key": "attachmentId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "License Problem - There was a problem related to the license.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/attachments/:attachmentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attachments",
												":attachmentId"
											],
											"variable": [
												{
													"key": "attachmentId"
												}
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden - Insufficient permissions to perform the requested operation.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/attachments/:attachmentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attachments",
												":attachmentId"
											],
											"variable": [
												{
													"key": "attachmentId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/attachments/:attachmentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attachments",
												":attachmentId"
											],
											"variable": [
												{
													"key": "attachmentId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/attachments/:attachmentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attachments",
												":attachmentId"
											],
											"variable": [
												{
													"key": "attachmentId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Find attachments",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/attachments?offset=0&limit=0&countLimit=-1&fileName=<string>&fileContentType=<string>&uploadDate=<long>&userId=<uuid>&baseResourceId=<uuid>&sortField=LAST_MODIFIED&sortOrder=DESC",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"attachments"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
								},
								{
									"key": "limit",
									"value": "0",
									"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
								},
								{
									"key": "countLimit",
									"value": "-1",
									"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
								},
								{
									"key": "fileName",
									"value": "<string>",
									"description": "The name of the file representing searched attachment."
								},
								{
									"key": "fileContentType",
									"value": "<string>",
									"description": "The type of the content of the file representing searched attachment."
								},
								{
									"key": "uploadDate",
									"value": "<long>",
									"description": "The date of attachment upload. It is the timestamp (in UTC time standard)."
								},
								{
									"key": "userId",
									"value": "<uuid>",
									"description": "The ID of the user who uploaded the attachment."
								},
								{
									"key": "baseResourceId",
									"value": "<uuid>",
									"description": "The ID of the resource the attachment refers to."
								},
								{
									"key": "sortField",
									"value": "LAST_MODIFIED",
									"description": "The field that should be used as reference for sorting."
								},
								{
									"key": "sortOrder",
									"value": "DESC",
									"description": "The order of sorting."
								}
							]
						},
						"description": "Returns attachments matching the given search criteria. Only parameters that are specified in this request and have not <code>null</code> values are used for filtering. All other parameters are ignored. The returned attachments satisfy all constraints that are specified in this search criteria.\tBy default a result containing 1000 attachments is returned."
					},
					"response": [
						{
							"name": "OK - The request has succeeded.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/attachments?offset=0&limit=0&countLimit=-1&fileName=<string>&fileContentType=<string>&uploadDate=<long>&userId=<uuid>&baseResourceId=<uuid>&sortField=LAST_MODIFIED&sortOrder=DESC",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attachments"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
										},
										{
											"key": "fileName",
											"value": "<string>",
											"description": "The name of the file representing searched attachment."
										},
										{
											"key": "fileContentType",
											"value": "<string>",
											"description": "The type of the content of the file representing searched attachment."
										},
										{
											"key": "uploadDate",
											"value": "<long>",
											"description": "The date of attachment upload. It is the timestamp (in UTC time standard)."
										},
										{
											"key": "userId",
											"value": "<uuid>",
											"description": "The ID of the user who uploaded the attachment."
										},
										{
											"key": "baseResourceId",
											"value": "<uuid>",
											"description": "The ID of the resource the attachment refers to."
										},
										{
											"key": "sortField",
											"value": "LAST_MODIFIED",
											"description": "The field that should be used as reference for sorting."
										},
										{
											"key": "sortOrder",
											"value": "DESC",
											"description": "The order of sorting."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": \"<long>\",\n  \"offset\": \"<long>\",\n  \"limit\": \"<long>\",\n  \"results\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DiagramPictureAssignmentRule\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"baseResource\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"PhoneNumber\",\n        \"resourceDiscriminator\": \"<string>\"\n      },\n      \"file\": {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"contentType\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationLeg\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"baseResource\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"DataQualityRule\",\n        \"resourceDiscriminator\": \"<string>\"\n      },\n      \"file\": {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"contentType\": \"<string>\"\n      }\n    }\n  ]\n}"
						},
						{
							"name": "Unauthorized - Authentication has failed or has not been provided.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/attachments?offset=0&limit=0&countLimit=-1&fileName=<string>&fileContentType=<string>&uploadDate=<long>&userId=<uuid>&baseResourceId=<uuid>&sortField=LAST_MODIFIED&sortOrder=DESC",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attachments"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
										},
										{
											"key": "fileName",
											"value": "<string>",
											"description": "The name of the file representing searched attachment."
										},
										{
											"key": "fileContentType",
											"value": "<string>",
											"description": "The type of the content of the file representing searched attachment."
										},
										{
											"key": "uploadDate",
											"value": "<long>",
											"description": "The date of attachment upload. It is the timestamp (in UTC time standard)."
										},
										{
											"key": "userId",
											"value": "<uuid>",
											"description": "The ID of the user who uploaded the attachment."
										},
										{
											"key": "baseResourceId",
											"value": "<uuid>",
											"description": "The ID of the resource the attachment refers to."
										},
										{
											"key": "sortField",
											"value": "LAST_MODIFIED",
											"description": "The field that should be used as reference for sorting."
										},
										{
											"key": "sortOrder",
											"value": "DESC",
											"description": "The order of sorting."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "License Problem - There was a problem related to the license.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/attachments?offset=0&limit=0&countLimit=-1&fileName=<string>&fileContentType=<string>&uploadDate=<long>&userId=<uuid>&baseResourceId=<uuid>&sortField=LAST_MODIFIED&sortOrder=DESC",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attachments"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
										},
										{
											"key": "fileName",
											"value": "<string>",
											"description": "The name of the file representing searched attachment."
										},
										{
											"key": "fileContentType",
											"value": "<string>",
											"description": "The type of the content of the file representing searched attachment."
										},
										{
											"key": "uploadDate",
											"value": "<long>",
											"description": "The date of attachment upload. It is the timestamp (in UTC time standard)."
										},
										{
											"key": "userId",
											"value": "<uuid>",
											"description": "The ID of the user who uploaded the attachment."
										},
										{
											"key": "baseResourceId",
											"value": "<uuid>",
											"description": "The ID of the resource the attachment refers to."
										},
										{
											"key": "sortField",
											"value": "LAST_MODIFIED",
											"description": "The field that should be used as reference for sorting."
										},
										{
											"key": "sortOrder",
											"value": "DESC",
											"description": "The order of sorting."
										}
									]
								}
							},
							"status": "Payment Required",
							"code": 402,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/attachments?offset=0&limit=0&countLimit=-1&fileName=<string>&fileContentType=<string>&uploadDate=<long>&userId=<uuid>&baseResourceId=<uuid>&sortField=LAST_MODIFIED&sortOrder=DESC",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attachments"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
										},
										{
											"key": "fileName",
											"value": "<string>",
											"description": "The name of the file representing searched attachment."
										},
										{
											"key": "fileContentType",
											"value": "<string>",
											"description": "The type of the content of the file representing searched attachment."
										},
										{
											"key": "uploadDate",
											"value": "<long>",
											"description": "The date of attachment upload. It is the timestamp (in UTC time standard)."
										},
										{
											"key": "userId",
											"value": "<uuid>",
											"description": "The ID of the user who uploaded the attachment."
										},
										{
											"key": "baseResourceId",
											"value": "<uuid>",
											"description": "The ID of the resource the attachment refers to."
										},
										{
											"key": "sortField",
											"value": "LAST_MODIFIED",
											"description": "The field that should be used as reference for sorting."
										},
										{
											"key": "sortOrder",
											"value": "DESC",
											"description": "The order of sorting."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/attachments?offset=0&limit=0&countLimit=-1&fileName=<string>&fileContentType=<string>&uploadDate=<long>&userId=<uuid>&baseResourceId=<uuid>&sortField=LAST_MODIFIED&sortOrder=DESC",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attachments"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
										},
										{
											"key": "fileName",
											"value": "<string>",
											"description": "The name of the file representing searched attachment."
										},
										{
											"key": "fileContentType",
											"value": "<string>",
											"description": "The type of the content of the file representing searched attachment."
										},
										{
											"key": "uploadDate",
											"value": "<long>",
											"description": "The date of attachment upload. It is the timestamp (in UTC time standard)."
										},
										{
											"key": "userId",
											"value": "<uuid>",
											"description": "The ID of the user who uploaded the attachment."
										},
										{
											"key": "baseResourceId",
											"value": "<uuid>",
											"description": "The ID of the resource the attachment refers to."
										},
										{
											"key": "sortField",
											"value": "LAST_MODIFIED",
											"description": "The field that should be used as reference for sorting."
										},
										{
											"key": "sortOrder",
											"value": "DESC",
											"description": "The order of sorting."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add attachment",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "the file - attachment content",
									"type": "file",
									"src": []
								},
								{
									"key": "fileName",
									"value": "<string>",
									"description": "the display name of the file of this attachment",
									"type": "text"
								},
								{
									"key": "resourceType",
									"value": "Workflow",
									"description": "the type of the resource the attachment should refer to.\nAn attachment can be added on those resource types: User, Community, Domain, Asset, Role, ValidationRule, Workflow. (This can only be one of View,Asset,Community,Domain,AssetType,DomainType,Status,User,ClassificationMatch,UserGroup,Attribute,StringAttribute,ScriptAttribute,BooleanAttribute,DateAttribute,NumericAttribute,SingleValueListAttribute,MultiValueListAttribute,Comment,Attachment,Responsibility,Workflow,Job,Relation,RelationType,ComplexRelation,ComplexRelationType,ArticulationRule,Assignment,Scope,RelationTrace,ValidationRule,DataQualityRule,DataQualityMetric,Address,InstantMessagingAccount,Email,PhoneNumber,Website,Activity,FormProperty,WorkflowTask,ActivityChange,WorkflowInstance,Role,AttributeType,BooleanAttributeType,DateAttributeType,DateTimeAttributeType,MultiValueListAttributeType,NumericAttributeType,ScriptAttributeType,SingleValueListAttributeType,StringAttributeType,ViewSharingRule,ViewAssignmentRule,JdbcDriverFile,JdbcDriver,JdbcIngestionProperties,CsvIngestionProperties,ExcelIngestionProperties,ConnectionStringParameter,AssignedCharacteristicType,Notification,Tag,ComplexRelationLegType,ComplexRelationAttributeType,ComplexRelationLeg,BaseDataType,AdvancedDataType,DiagramPicture,DiagramPictureSharingRule,DiagramPictureAssignmentRule,Rating,Classification,PhysicalDataConnector,Context)",
									"type": "text"
								},
								{
									"key": "resourceId",
									"value": "<uuid>",
									"description": "the id of the resource the attachment should refer to",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/attachments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"attachments"
							]
						},
						"description": "Adds new attachment."
					},
					"response": [
						{
							"name": "Created - The request has been fulfilled and resulted in a new resource being created.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "the file - attachment content",
											"type": "file",
											"src": []
										},
										{
											"key": "fileName",
											"value": "<string>",
											"description": "the display name of the file of this attachment",
											"type": "text"
										},
										{
											"key": "resourceType",
											"value": "Workflow",
											"description": "the type of the resource the attachment should refer to.\nAn attachment can be added on those resource types: User, Community, Domain, Asset, Role, ValidationRule, Workflow. (This can only be one of View,Asset,Community,Domain,AssetType,DomainType,Status,User,ClassificationMatch,UserGroup,Attribute,StringAttribute,ScriptAttribute,BooleanAttribute,DateAttribute,NumericAttribute,SingleValueListAttribute,MultiValueListAttribute,Comment,Attachment,Responsibility,Workflow,Job,Relation,RelationType,ComplexRelation,ComplexRelationType,ArticulationRule,Assignment,Scope,RelationTrace,ValidationRule,DataQualityRule,DataQualityMetric,Address,InstantMessagingAccount,Email,PhoneNumber,Website,Activity,FormProperty,WorkflowTask,ActivityChange,WorkflowInstance,Role,AttributeType,BooleanAttributeType,DateAttributeType,DateTimeAttributeType,MultiValueListAttributeType,NumericAttributeType,ScriptAttributeType,SingleValueListAttributeType,StringAttributeType,ViewSharingRule,ViewAssignmentRule,JdbcDriverFile,JdbcDriver,JdbcIngestionProperties,CsvIngestionProperties,ExcelIngestionProperties,ConnectionStringParameter,AssignedCharacteristicType,Notification,Tag,ComplexRelationLegType,ComplexRelationAttributeType,ComplexRelationLeg,BaseDataType,AdvancedDataType,DiagramPicture,DiagramPictureSharingRule,DiagramPictureAssignmentRule,Rating,Classification,PhysicalDataConnector,Context)",
											"type": "text"
										},
										{
											"key": "resourceId",
											"value": "<uuid>",
											"description": "the id of the resource the attachment should refer to",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/attachments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attachments"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"BaseDataType\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"baseResource\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Email\",\n    \"resourceDiscriminator\": \"<string>\"\n  },\n  \"file\": {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"contentType\": \"<string>\"\n  }\n}"
						},
						{
							"name": "Bad Request - Request data is malformed or illegal. The request body will contain additional information.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "the file - attachment content",
											"type": "file",
											"src": []
										},
										{
											"key": "fileName",
											"value": "<string>",
											"description": "the display name of the file of this attachment",
											"type": "text"
										},
										{
											"key": "resourceType",
											"value": "Workflow",
											"description": "the type of the resource the attachment should refer to.\nAn attachment can be added on those resource types: User, Community, Domain, Asset, Role, ValidationRule, Workflow. (This can only be one of View,Asset,Community,Domain,AssetType,DomainType,Status,User,ClassificationMatch,UserGroup,Attribute,StringAttribute,ScriptAttribute,BooleanAttribute,DateAttribute,NumericAttribute,SingleValueListAttribute,MultiValueListAttribute,Comment,Attachment,Responsibility,Workflow,Job,Relation,RelationType,ComplexRelation,ComplexRelationType,ArticulationRule,Assignment,Scope,RelationTrace,ValidationRule,DataQualityRule,DataQualityMetric,Address,InstantMessagingAccount,Email,PhoneNumber,Website,Activity,FormProperty,WorkflowTask,ActivityChange,WorkflowInstance,Role,AttributeType,BooleanAttributeType,DateAttributeType,DateTimeAttributeType,MultiValueListAttributeType,NumericAttributeType,ScriptAttributeType,SingleValueListAttributeType,StringAttributeType,ViewSharingRule,ViewAssignmentRule,JdbcDriverFile,JdbcDriver,JdbcIngestionProperties,CsvIngestionProperties,ExcelIngestionProperties,ConnectionStringParameter,AssignedCharacteristicType,Notification,Tag,ComplexRelationLegType,ComplexRelationAttributeType,ComplexRelationLeg,BaseDataType,AdvancedDataType,DiagramPicture,DiagramPictureSharingRule,DiagramPictureAssignmentRule,Rating,Classification,PhysicalDataConnector,Context)",
											"type": "text"
										},
										{
											"key": "resourceId",
											"value": "<uuid>",
											"description": "the id of the resource the attachment should refer to",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/attachments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attachments"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized - Authentication has failed or has not been provided.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "the file - attachment content",
											"type": "file",
											"src": []
										},
										{
											"key": "fileName",
											"value": "<string>",
											"description": "the display name of the file of this attachment",
											"type": "text"
										},
										{
											"key": "resourceType",
											"value": "Workflow",
											"description": "the type of the resource the attachment should refer to.\nAn attachment can be added on those resource types: User, Community, Domain, Asset, Role, ValidationRule, Workflow. (This can only be one of View,Asset,Community,Domain,AssetType,DomainType,Status,User,ClassificationMatch,UserGroup,Attribute,StringAttribute,ScriptAttribute,BooleanAttribute,DateAttribute,NumericAttribute,SingleValueListAttribute,MultiValueListAttribute,Comment,Attachment,Responsibility,Workflow,Job,Relation,RelationType,ComplexRelation,ComplexRelationType,ArticulationRule,Assignment,Scope,RelationTrace,ValidationRule,DataQualityRule,DataQualityMetric,Address,InstantMessagingAccount,Email,PhoneNumber,Website,Activity,FormProperty,WorkflowTask,ActivityChange,WorkflowInstance,Role,AttributeType,BooleanAttributeType,DateAttributeType,DateTimeAttributeType,MultiValueListAttributeType,NumericAttributeType,ScriptAttributeType,SingleValueListAttributeType,StringAttributeType,ViewSharingRule,ViewAssignmentRule,JdbcDriverFile,JdbcDriver,JdbcIngestionProperties,CsvIngestionProperties,ExcelIngestionProperties,ConnectionStringParameter,AssignedCharacteristicType,Notification,Tag,ComplexRelationLegType,ComplexRelationAttributeType,ComplexRelationLeg,BaseDataType,AdvancedDataType,DiagramPicture,DiagramPictureSharingRule,DiagramPictureAssignmentRule,Rating,Classification,PhysicalDataConnector,Context)",
											"type": "text"
										},
										{
											"key": "resourceId",
											"value": "<uuid>",
											"description": "the id of the resource the attachment should refer to",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/attachments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attachments"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "License Problem - There was a problem related to the license.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "the file - attachment content",
											"type": "file",
											"src": []
										},
										{
											"key": "fileName",
											"value": "<string>",
											"description": "the display name of the file of this attachment",
											"type": "text"
										},
										{
											"key": "resourceType",
											"value": "Workflow",
											"description": "the type of the resource the attachment should refer to.\nAn attachment can be added on those resource types: User, Community, Domain, Asset, Role, ValidationRule, Workflow. (This can only be one of View,Asset,Community,Domain,AssetType,DomainType,Status,User,ClassificationMatch,UserGroup,Attribute,StringAttribute,ScriptAttribute,BooleanAttribute,DateAttribute,NumericAttribute,SingleValueListAttribute,MultiValueListAttribute,Comment,Attachment,Responsibility,Workflow,Job,Relation,RelationType,ComplexRelation,ComplexRelationType,ArticulationRule,Assignment,Scope,RelationTrace,ValidationRule,DataQualityRule,DataQualityMetric,Address,InstantMessagingAccount,Email,PhoneNumber,Website,Activity,FormProperty,WorkflowTask,ActivityChange,WorkflowInstance,Role,AttributeType,BooleanAttributeType,DateAttributeType,DateTimeAttributeType,MultiValueListAttributeType,NumericAttributeType,ScriptAttributeType,SingleValueListAttributeType,StringAttributeType,ViewSharingRule,ViewAssignmentRule,JdbcDriverFile,JdbcDriver,JdbcIngestionProperties,CsvIngestionProperties,ExcelIngestionProperties,ConnectionStringParameter,AssignedCharacteristicType,Notification,Tag,ComplexRelationLegType,ComplexRelationAttributeType,ComplexRelationLeg,BaseDataType,AdvancedDataType,DiagramPicture,DiagramPictureSharingRule,DiagramPictureAssignmentRule,Rating,Classification,PhysicalDataConnector,Context)",
											"type": "text"
										},
										{
											"key": "resourceId",
											"value": "<uuid>",
											"description": "the id of the resource the attachment should refer to",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/attachments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attachments"
									]
								}
							},
							"status": "Payment Required",
							"code": 402,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden - Insufficient permissions to perform the requested operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "the file - attachment content",
											"type": "file",
											"src": []
										},
										{
											"key": "fileName",
											"value": "<string>",
											"description": "the display name of the file of this attachment",
											"type": "text"
										},
										{
											"key": "resourceType",
											"value": "Workflow",
											"description": "the type of the resource the attachment should refer to.\nAn attachment can be added on those resource types: User, Community, Domain, Asset, Role, ValidationRule, Workflow. (This can only be one of View,Asset,Community,Domain,AssetType,DomainType,Status,User,ClassificationMatch,UserGroup,Attribute,StringAttribute,ScriptAttribute,BooleanAttribute,DateAttribute,NumericAttribute,SingleValueListAttribute,MultiValueListAttribute,Comment,Attachment,Responsibility,Workflow,Job,Relation,RelationType,ComplexRelation,ComplexRelationType,ArticulationRule,Assignment,Scope,RelationTrace,ValidationRule,DataQualityRule,DataQualityMetric,Address,InstantMessagingAccount,Email,PhoneNumber,Website,Activity,FormProperty,WorkflowTask,ActivityChange,WorkflowInstance,Role,AttributeType,BooleanAttributeType,DateAttributeType,DateTimeAttributeType,MultiValueListAttributeType,NumericAttributeType,ScriptAttributeType,SingleValueListAttributeType,StringAttributeType,ViewSharingRule,ViewAssignmentRule,JdbcDriverFile,JdbcDriver,JdbcIngestionProperties,CsvIngestionProperties,ExcelIngestionProperties,ConnectionStringParameter,AssignedCharacteristicType,Notification,Tag,ComplexRelationLegType,ComplexRelationAttributeType,ComplexRelationLeg,BaseDataType,AdvancedDataType,DiagramPicture,DiagramPictureSharingRule,DiagramPictureAssignmentRule,Rating,Classification,PhysicalDataConnector,Context)",
											"type": "text"
										},
										{
											"key": "resourceId",
											"value": "<uuid>",
											"description": "the id of the resource the attachment should refer to",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/attachments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attachments"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "the file - attachment content",
											"type": "file",
											"src": []
										},
										{
											"key": "fileName",
											"value": "<string>",
											"description": "the display name of the file of this attachment",
											"type": "text"
										},
										{
											"key": "resourceType",
											"value": "Workflow",
											"description": "the type of the resource the attachment should refer to.\nAn attachment can be added on those resource types: User, Community, Domain, Asset, Role, ValidationRule, Workflow. (This can only be one of View,Asset,Community,Domain,AssetType,DomainType,Status,User,ClassificationMatch,UserGroup,Attribute,StringAttribute,ScriptAttribute,BooleanAttribute,DateAttribute,NumericAttribute,SingleValueListAttribute,MultiValueListAttribute,Comment,Attachment,Responsibility,Workflow,Job,Relation,RelationType,ComplexRelation,ComplexRelationType,ArticulationRule,Assignment,Scope,RelationTrace,ValidationRule,DataQualityRule,DataQualityMetric,Address,InstantMessagingAccount,Email,PhoneNumber,Website,Activity,FormProperty,WorkflowTask,ActivityChange,WorkflowInstance,Role,AttributeType,BooleanAttributeType,DateAttributeType,DateTimeAttributeType,MultiValueListAttributeType,NumericAttributeType,ScriptAttributeType,SingleValueListAttributeType,StringAttributeType,ViewSharingRule,ViewAssignmentRule,JdbcDriverFile,JdbcDriver,JdbcIngestionProperties,CsvIngestionProperties,ExcelIngestionProperties,ConnectionStringParameter,AssignedCharacteristicType,Notification,Tag,ComplexRelationLegType,ComplexRelationAttributeType,ComplexRelationLeg,BaseDataType,AdvancedDataType,DiagramPicture,DiagramPictureSharingRule,DiagramPictureAssignmentRule,Rating,Classification,PhysicalDataConnector,Context)",
											"type": "text"
										},
										{
											"key": "resourceId",
											"value": "<uuid>",
											"description": "the id of the resource the attachment should refer to",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/attachments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attachments"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "attributes",
			"item": [
				{
					"name": "bulk",
					"item": [
						{
							"name": "Add attributes",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"assetId\": \"<uuid>\",\n    \"value\": {},\n    \"typeId\": \"<uuid>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"assetId\": \"<uuid>\",\n    \"value\": {},\n    \"typeId\": \"<uuid>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/attributes/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attributes",
										"bulk"
									]
								},
								"description": "Adds multiple attributes."
							},
							"response": [
								{
									"name": "Created - The request has been fulfilled and resulted in a new resource being created.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"assetId\": \"<uuid>\",\n    \"value\": {},\n    \"typeId\": \"<uuid>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"assetId\": \"<uuid>\",\n    \"value\": {},\n    \"typeId\": \"<uuid>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/attributes/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributes",
												"bulk"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"attributeDiscriminator\": \"<string>\",\n    \"asset\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DomainType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"value\": {},\n    \"type\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"MultiValueListAttribute\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"resourceType\": \"PhysicalDataConnector\",\n    \"createdBy\": \"<uuid>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"id\": \"<uuid>\"\n  },\n  {\n    \"attributeDiscriminator\": \"<string>\",\n    \"asset\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"WorkflowInstance\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"value\": {},\n    \"type\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Domain\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"resourceType\": \"AssignedCharacteristicType\",\n    \"createdBy\": \"<uuid>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"id\": \"<uuid>\"\n  }\n]"
								},
								{
									"name": "Bad Request - Request data is malformed or illegal. The request body will contain additional information.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"assetId\": \"<uuid>\",\n    \"value\": {},\n    \"typeId\": \"<uuid>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"assetId\": \"<uuid>\",\n    \"value\": {},\n    \"typeId\": \"<uuid>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/attributes/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributes",
												"bulk"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized - Authentication has failed or has not been provided.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"assetId\": \"<uuid>\",\n    \"value\": {},\n    \"typeId\": \"<uuid>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"assetId\": \"<uuid>\",\n    \"value\": {},\n    \"typeId\": \"<uuid>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/attributes/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributes",
												"bulk"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "License Problem - There was a problem related to the license.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"assetId\": \"<uuid>\",\n    \"value\": {},\n    \"typeId\": \"<uuid>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"assetId\": \"<uuid>\",\n    \"value\": {},\n    \"typeId\": \"<uuid>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/attributes/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributes",
												"bulk"
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden - Insufficient permissions to perform the requested operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"assetId\": \"<uuid>\",\n    \"value\": {},\n    \"typeId\": \"<uuid>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"assetId\": \"<uuid>\",\n    \"value\": {},\n    \"typeId\": \"<uuid>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/attributes/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributes",
												"bulk"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"assetId\": \"<uuid>\",\n    \"value\": {},\n    \"typeId\": \"<uuid>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"assetId\": \"<uuid>\",\n    \"value\": {},\n    \"typeId\": \"<uuid>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/attributes/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributes",
												"bulk"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Remove attributes",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/attributes/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attributes",
										"bulk"
									]
								},
								"description": "Removes the attributes identified by given ids."
							},
							"response": [
								{
									"name": "No Content - The server has fulfilled the request but does not need to return an entity-body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/attributes/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributes",
												"bulk"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request - Request data is malformed or illegal. The request body will contain additional information.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/attributes/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributes",
												"bulk"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized - Authentication has failed or has not been provided.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/attributes/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributes",
												"bulk"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "License Problem - There was a problem related to the license.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/attributes/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributes",
												"bulk"
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden - Insufficient permissions to perform the requested operation.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/attributes/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributes",
												"bulk"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/attributes/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributes",
												"bulk"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Change attributes",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"value\": {}\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"value\": {}\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/attributes/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attributes",
										"bulk"
									]
								},
								"description": "Changes multiple attributes with the information that is present in the request. Only properties that are specified in this request and have not <code>null</code> values are updated. All other properties are ignored."
							},
							"response": [
								{
									"name": "OK - The request has succeeded.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"value\": {}\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"value\": {}\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/attributes/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributes",
												"bulk"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"attributeDiscriminator\": \"<string>\",\n    \"asset\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DomainType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"value\": {},\n    \"type\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"MultiValueListAttribute\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"resourceType\": \"PhysicalDataConnector\",\n    \"createdBy\": \"<uuid>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"id\": \"<uuid>\"\n  },\n  {\n    \"attributeDiscriminator\": \"<string>\",\n    \"asset\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"WorkflowInstance\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"value\": {},\n    \"type\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Domain\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"resourceType\": \"AssignedCharacteristicType\",\n    \"createdBy\": \"<uuid>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"id\": \"<uuid>\"\n  }\n]"
								},
								{
									"name": "Bad Request - Request data is malformed or illegal. The request body will contain additional information.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"value\": {}\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"value\": {}\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/attributes/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributes",
												"bulk"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized - Authentication has failed or has not been provided.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"value\": {}\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"value\": {}\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/attributes/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributes",
												"bulk"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "License Problem - There was a problem related to the license.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"value\": {}\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"value\": {}\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/attributes/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributes",
												"bulk"
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden - Insufficient permissions to perform the requested operation.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"value\": {}\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"value\": {}\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/attributes/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributes",
												"bulk"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"value\": {}\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"value\": {}\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/attributes/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributes",
												"bulk"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"value\": {}\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"value\": {}\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/attributes/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributes",
												"bulk"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "{attributeId}",
					"item": [
						{
							"name": "Get attribute",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/attributes/:attributeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attributes",
										":attributeId"
									],
									"variable": [
										{
											"key": "attributeId",
											"value": "<uuid>",
											"description": "(Required) the id of the attribute"
										}
									]
								},
								"description": "Returns the attribute identified by given id."
							},
							"response": [
								{
									"name": "OK - The request has succeeded.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/attributes/:attributeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributes",
												":attributeId"
											],
											"variable": [
												{
													"key": "attributeId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"attributeDiscriminator\": \"<string>\",\n  \"asset\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Tag\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"value\": {},\n  \"type\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"NumericAttribute\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"resourceType\": \"User\",\n  \"createdBy\": \"<uuid>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"id\": \"<uuid>\"\n}"
								},
								{
									"name": "Unauthorized - Authentication has failed or has not been provided.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/attributes/:attributeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributes",
												":attributeId"
											],
											"variable": [
												{
													"key": "attributeId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "License Problem - There was a problem related to the license.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/attributes/:attributeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributes",
												":attributeId"
											],
											"variable": [
												{
													"key": "attributeId"
												}
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden - Insufficient permissions to perform the requested operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/attributes/:attributeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributes",
												":attributeId"
											],
											"variable": [
												{
													"key": "attributeId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/attributes/:attributeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributes",
												":attributeId"
											],
											"variable": [
												{
													"key": "attributeId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/attributes/:attributeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributes",
												":attributeId"
											],
											"variable": [
												{
													"key": "attributeId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Remove attribute",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/attributes/:attributeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attributes",
										":attributeId"
									],
									"variable": [
										{
											"key": "attributeId",
											"value": "<uuid>",
											"description": "(Required) the id of the attribute"
										}
									]
								},
								"description": "Removes the attribute identified by given id."
							},
							"response": [
								{
									"name": "No Content - The server has fulfilled the request but does not need to return an entity-body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/attributes/:attributeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributes",
												":attributeId"
											],
											"variable": [
												{
													"key": "attributeId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized - Authentication has failed or has not been provided.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/attributes/:attributeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributes",
												":attributeId"
											],
											"variable": [
												{
													"key": "attributeId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "License Problem - There was a problem related to the license.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/attributes/:attributeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributes",
												":attributeId"
											],
											"variable": [
												{
													"key": "attributeId"
												}
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden - Insufficient permissions to perform the requested operation.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/attributes/:attributeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributes",
												":attributeId"
											],
											"variable": [
												{
													"key": "attributeId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/attributes/:attributeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributes",
												":attributeId"
											],
											"variable": [
												{
													"key": "attributeId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/attributes/:attributeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributes",
												":attributeId"
											],
											"variable": [
												{
													"key": "attributeId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Change attribute",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<uuid>\",\n  \"value\": {}\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/attributes/:attributeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attributes",
										":attributeId"
									],
									"variable": [
										{
											"key": "attributeId",
											"value": "<uuid>",
											"description": "(Required) the id of the attribute"
										}
									]
								},
								"description": "Changes the attribute with the information that is present in the request. Only properties that are specified in this request and have not <code>null</code> values are updated. All other properties are ignored."
							},
							"response": [
								{
									"name": "OK - The request has succeeded.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"value\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/attributes/:attributeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributes",
												":attributeId"
											],
											"variable": [
												{
													"key": "attributeId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"attributeDiscriminator\": \"<string>\",\n  \"asset\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Tag\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"value\": {},\n  \"type\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"NumericAttribute\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"resourceType\": \"User\",\n  \"createdBy\": \"<uuid>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"id\": \"<uuid>\"\n}"
								},
								{
									"name": "Bad Request - Request data is malformed or illegal. The request body will contain additional information.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"value\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/attributes/:attributeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributes",
												":attributeId"
											],
											"variable": [
												{
													"key": "attributeId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized - Authentication has failed or has not been provided.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"value\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/attributes/:attributeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributes",
												":attributeId"
											],
											"variable": [
												{
													"key": "attributeId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "License Problem - There was a problem related to the license.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"value\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/attributes/:attributeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributes",
												":attributeId"
											],
											"variable": [
												{
													"key": "attributeId"
												}
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden - Insufficient permissions to perform the requested operation.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"value\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/attributes/:attributeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributes",
												":attributeId"
											],
											"variable": [
												{
													"key": "attributeId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"value\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/attributes/:attributeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributes",
												":attributeId"
											],
											"variable": [
												{
													"key": "attributeId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"value\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/attributes/:attributeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributes",
												":attributeId"
											],
											"variable": [
												{
													"key": "attributeId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Find attributes",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/attributes?offset=0&limit=0&countLimit=-1&cursor=<string>&typeIds=<uuid>&typeIds=<uuid>&assetId=<uuid>&sortOrder=DESC&sortField=LAST_MODIFIED&typePublicIds=<string>&typePublicIds=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"attributes"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>. Cursor should be preferred over offset for better performance and stable results. It is forbidden to use both in the same request."
								},
								{
									"key": "limit",
									"value": "0",
									"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
								},
								{
									"key": "countLimit",
									"value": "-1",
									"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped. For cursor pagination this parameter is ignored and count is skipped."
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for the current page of results. To retrieve the first page with cursor pagination you need to pass this parameter with an empty value (must be non-null). For the next pages, the value must be taken from the response (<code>nextCursor</code> property)."
								},
								{
									"key": "typeIds",
									"value": "<uuid>",
									"description": "The list of IDs of the attribute types the found attributes should have, or null or empty if no type filtering should be applied."
								},
								{
									"key": "typeIds",
									"value": "<uuid>",
									"description": "The list of IDs of the attribute types the found attributes should have, or null or empty if no type filtering should be applied."
								},
								{
									"key": "assetId",
									"value": "<uuid>",
									"description": "The ID of the asset to find the attributes in, or null if no asset filtering should be applied."
								},
								{
									"key": "sortOrder",
									"value": "DESC",
									"description": "The sorting order."
								},
								{
									"key": "sortField",
									"value": "LAST_MODIFIED",
									"description": "(Required) The field on which the results are sorted."
								},
								{
									"key": "typePublicIds",
									"value": "<string>",
									"description": "The list of public IDs of the attribute types the found attributes should have, or null or empty if no type filtering should be applied."
								},
								{
									"key": "typePublicIds",
									"value": "<string>",
									"description": "The list of public IDs of the attribute types the found attributes should have, or null or empty if no type filtering should be applied."
								}
							]
						},
						"description": "Returns attributes matching the given search criteria. Only parameters that are specified in this request and have not <code>null</code> values are used for filtering. All other parameters are ignored. The returned attributes satisfy all constraints that are specified in this search criteria. By default a result containing 1000 attributes is returned."
					},
					"response": [
						{
							"name": "OK - The request has succeeded.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/attributes?offset=0&limit=0&countLimit=-1&cursor=<string>&typeIds=<uuid>&assetId=<uuid>&sortOrder=DESC&sortField=LAST_MODIFIED&typePublicIds=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attributes"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>. Cursor should be preferred over offset for better performance and stable results. It is forbidden to use both in the same request."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped. For cursor pagination this parameter is ignored and count is skipped."
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Cursor for the current page of results. To retrieve the first page with cursor pagination you need to pass this parameter with an empty value (must be non-null). For the next pages, the value must be taken from the response (<code>nextCursor</code> property)."
										},
										{
											"key": "typeIds",
											"value": "<uuid>",
											"description": "The list of IDs of the attribute types the found attributes should have, or null or empty if no type filtering should be applied."
										},
										{
											"key": "assetId",
											"value": "<uuid>",
											"description": "The ID of the asset to find the attributes in, or null if no asset filtering should be applied."
										},
										{
											"key": "sortOrder",
											"value": "DESC",
											"description": "The sorting order."
										},
										{
											"key": "sortField",
											"value": "LAST_MODIFIED",
											"description": "(Required) The field on which the results are sorted."
										},
										{
											"key": "typePublicIds",
											"value": "<string>",
											"description": "The list of public IDs of the attribute types the found attributes should have, or null or empty if no type filtering should be applied."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": \"<long>\",\n  \"offset\": \"<long>\",\n  \"limit\": \"<long>\",\n  \"results\": [\n    {\n      \"attributeDiscriminator\": \"<string>\",\n      \"asset\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Workflow\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"value\": {},\n      \"type\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Attribute\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"resourceType\": \"Workflow\",\n      \"createdBy\": \"<uuid>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"id\": \"<uuid>\"\n    },\n    {\n      \"attributeDiscriminator\": \"<string>\",\n      \"asset\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"WorkflowTask\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"value\": {},\n      \"type\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ComplexRelationType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"resourceType\": \"DomainType\",\n      \"createdBy\": \"<uuid>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"id\": \"<uuid>\"\n    }\n  ],\n  \"nextCursor\": \"<string>\"\n}"
						},
						{
							"name": "Unauthorized - Authentication has failed or has not been provided.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/attributes?offset=0&limit=0&countLimit=-1&cursor=<string>&typeIds=<uuid>&assetId=<uuid>&sortOrder=DESC&sortField=LAST_MODIFIED&typePublicIds=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attributes"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>. Cursor should be preferred over offset for better performance and stable results. It is forbidden to use both in the same request."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped. For cursor pagination this parameter is ignored and count is skipped."
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Cursor for the current page of results. To retrieve the first page with cursor pagination you need to pass this parameter with an empty value (must be non-null). For the next pages, the value must be taken from the response (<code>nextCursor</code> property)."
										},
										{
											"key": "typeIds",
											"value": "<uuid>",
											"description": "The list of IDs of the attribute types the found attributes should have, or null or empty if no type filtering should be applied."
										},
										{
											"key": "assetId",
											"value": "<uuid>",
											"description": "The ID of the asset to find the attributes in, or null if no asset filtering should be applied."
										},
										{
											"key": "sortOrder",
											"value": "DESC",
											"description": "The sorting order."
										},
										{
											"key": "sortField",
											"value": "LAST_MODIFIED",
											"description": "(Required) The field on which the results are sorted."
										},
										{
											"key": "typePublicIds",
											"value": "<string>",
											"description": "The list of public IDs of the attribute types the found attributes should have, or null or empty if no type filtering should be applied."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "License Problem - There was a problem related to the license.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/attributes?offset=0&limit=0&countLimit=-1&cursor=<string>&typeIds=<uuid>&assetId=<uuid>&sortOrder=DESC&sortField=LAST_MODIFIED&typePublicIds=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attributes"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>. Cursor should be preferred over offset for better performance and stable results. It is forbidden to use both in the same request."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped. For cursor pagination this parameter is ignored and count is skipped."
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Cursor for the current page of results. To retrieve the first page with cursor pagination you need to pass this parameter with an empty value (must be non-null). For the next pages, the value must be taken from the response (<code>nextCursor</code> property)."
										},
										{
											"key": "typeIds",
											"value": "<uuid>",
											"description": "The list of IDs of the attribute types the found attributes should have, or null or empty if no type filtering should be applied."
										},
										{
											"key": "assetId",
											"value": "<uuid>",
											"description": "The ID of the asset to find the attributes in, or null if no asset filtering should be applied."
										},
										{
											"key": "sortOrder",
											"value": "DESC",
											"description": "The sorting order."
										},
										{
											"key": "sortField",
											"value": "LAST_MODIFIED",
											"description": "(Required) The field on which the results are sorted."
										},
										{
											"key": "typePublicIds",
											"value": "<string>",
											"description": "The list of public IDs of the attribute types the found attributes should have, or null or empty if no type filtering should be applied."
										}
									]
								}
							},
							"status": "Payment Required",
							"code": 402,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/attributes?offset=0&limit=0&countLimit=-1&cursor=<string>&typeIds=<uuid>&assetId=<uuid>&sortOrder=DESC&sortField=LAST_MODIFIED&typePublicIds=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attributes"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>. Cursor should be preferred over offset for better performance and stable results. It is forbidden to use both in the same request."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped. For cursor pagination this parameter is ignored and count is skipped."
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Cursor for the current page of results. To retrieve the first page with cursor pagination you need to pass this parameter with an empty value (must be non-null). For the next pages, the value must be taken from the response (<code>nextCursor</code> property)."
										},
										{
											"key": "typeIds",
											"value": "<uuid>",
											"description": "The list of IDs of the attribute types the found attributes should have, or null or empty if no type filtering should be applied."
										},
										{
											"key": "assetId",
											"value": "<uuid>",
											"description": "The ID of the asset to find the attributes in, or null if no asset filtering should be applied."
										},
										{
											"key": "sortOrder",
											"value": "DESC",
											"description": "The sorting order."
										},
										{
											"key": "sortField",
											"value": "LAST_MODIFIED",
											"description": "(Required) The field on which the results are sorted."
										},
										{
											"key": "typePublicIds",
											"value": "<string>",
											"description": "The list of public IDs of the attribute types the found attributes should have, or null or empty if no type filtering should be applied."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/attributes?offset=0&limit=0&countLimit=-1&cursor=<string>&typeIds=<uuid>&assetId=<uuid>&sortOrder=DESC&sortField=LAST_MODIFIED&typePublicIds=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attributes"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>. Cursor should be preferred over offset for better performance and stable results. It is forbidden to use both in the same request."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped. For cursor pagination this parameter is ignored and count is skipped."
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Cursor for the current page of results. To retrieve the first page with cursor pagination you need to pass this parameter with an empty value (must be non-null). For the next pages, the value must be taken from the response (<code>nextCursor</code> property)."
										},
										{
											"key": "typeIds",
											"value": "<uuid>",
											"description": "The list of IDs of the attribute types the found attributes should have, or null or empty if no type filtering should be applied."
										},
										{
											"key": "assetId",
											"value": "<uuid>",
											"description": "The ID of the asset to find the attributes in, or null if no asset filtering should be applied."
										},
										{
											"key": "sortOrder",
											"value": "DESC",
											"description": "The sorting order."
										},
										{
											"key": "sortField",
											"value": "LAST_MODIFIED",
											"description": "(Required) The field on which the results are sorted."
										},
										{
											"key": "typePublicIds",
											"value": "<string>",
											"description": "The list of public IDs of the attribute types the found attributes should have, or null or empty if no type filtering should be applied."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add attribute",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"assetId\": \"<uuid>\",\n  \"value\": {},\n  \"typeId\": \"<uuid>\",\n  \"typePublicId\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/attributes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"attributes"
							]
						},
						"description": "Adds a new attribute to an asset."
					},
					"response": [
						{
							"name": "Created - The request has been fulfilled and resulted in a new resource being created.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"assetId\": \"<uuid>\",\n  \"value\": {},\n  \"typeId\": \"<uuid>\",\n  \"typePublicId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/attributes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attributes"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"attributeDiscriminator\": \"<string>\",\n  \"asset\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Tag\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"value\": {},\n  \"type\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"NumericAttribute\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"resourceType\": \"User\",\n  \"createdBy\": \"<uuid>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"id\": \"<uuid>\"\n}"
						},
						{
							"name": "Bad Request - Request data is malformed or illegal. The request body will contain additional information.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"assetId\": \"<uuid>\",\n  \"value\": {},\n  \"typeId\": \"<uuid>\",\n  \"typePublicId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/attributes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attributes"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized - Authentication has failed or has not been provided.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"assetId\": \"<uuid>\",\n  \"value\": {},\n  \"typeId\": \"<uuid>\",\n  \"typePublicId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/attributes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attributes"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "License Problem - There was a problem related to the license.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"assetId\": \"<uuid>\",\n  \"value\": {},\n  \"typeId\": \"<uuid>\",\n  \"typePublicId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/attributes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attributes"
									]
								}
							},
							"status": "Payment Required",
							"code": 402,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden - Insufficient permissions to perform the requested operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"assetId\": \"<uuid>\",\n  \"value\": {},\n  \"typeId\": \"<uuid>\",\n  \"typePublicId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/attributes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attributes"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"assetId\": \"<uuid>\",\n  \"value\": {},\n  \"typeId\": \"<uuid>\",\n  \"typePublicId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/attributes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attributes"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "comments",
			"item": [
				{
					"name": "{commentId}",
					"item": [
						{
							"name": "Get comment.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/comments/:commentId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"comments",
										":commentId"
									],
									"variable": [
										{
											"key": "commentId",
											"value": "<uuid>",
											"description": "(Required) The ID of the comment."
										}
									]
								},
								"description": "Returns the comment with the specified ID."
							},
							"response": [
								{
									"name": "The response with found comment.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/comments/:commentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"comments",
												":commentId"
											],
											"variable": [
												{
													"key": "commentId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"baseResource\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Responsibility\",\n    \"resourceDiscriminator\": \"<string>\"\n  },\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"RelationType\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"content\": \"<string>\",\n  \"mentionedUsers\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Workflow\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"userName\": \"<string>\",\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"emailAddress\": \"<string>\",\n      \"gender\": \"MALE\",\n      \"language\": \"<string>\",\n      \"additionalEmailAddresses\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"JdbcDriver\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"emailAddress\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ViewAssignmentRule\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"emailAddress\": \"<string>\"\n        }\n      ],\n      \"phoneNumbers\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"AdvancedDataType\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"type\": \"FAX\",\n          \"phoneNumber\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"User\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"type\": \"PRIVATE\",\n          \"phoneNumber\": \"<string>\"\n        }\n      ],\n      \"instantMessagingAccounts\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Notification\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"account\": \"<string>\",\n          \"type\": \"LIVE_MESSENGER\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Role\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"account\": \"<string>\",\n          \"type\": \"AOL\"\n        }\n      ],\n      \"websites\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ComplexRelationType\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"url\": \"<string>\",\n          \"type\": \"WEBSITE\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Domain\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"url\": \"<string>\",\n          \"type\": \"TWITTER\"\n        }\n      ],\n      \"addresses\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Website\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"city\": \"<string>\",\n          \"street\": \"<string>\",\n          \"number\": \"<string>\",\n          \"state\": \"<string>\",\n          \"country\": \"<string>\",\n          \"postalCode\": \"<string>\",\n          \"type\": \"HOME\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ViewAssignmentRule\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"city\": \"<string>\",\n          \"street\": \"<string>\",\n          \"number\": \"<string>\",\n          \"state\": \"<string>\",\n          \"country\": \"<string>\",\n          \"postalCode\": \"<string>\",\n          \"type\": \"WORK\"\n        }\n      ],\n      \"activated\": \"<boolean>\",\n      \"enabled\": \"<boolean>\",\n      \"ldapUser\": \"<boolean>\",\n      \"userSource\": \"LDAP\",\n      \"guestUser\": \"<boolean>\",\n      \"apiUser\": \"<boolean>\",\n      \"licenseType\": \"CONSUMER\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ExcelIngestionProperties\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"userName\": \"<string>\",\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"emailAddress\": \"<string>\",\n      \"gender\": \"FEMALE\",\n      \"language\": \"<string>\",\n      \"additionalEmailAddresses\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"SingleValueListAttributeType\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"emailAddress\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ComplexRelation\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"emailAddress\": \"<string>\"\n        }\n      ],\n      \"phoneNumbers\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"DataQualityMetric\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"type\": \"MOBILE\",\n          \"phoneNumber\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"WorkflowInstance\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"type\": \"FAX\",\n          \"phoneNumber\": \"<string>\"\n        }\n      ],\n      \"instantMessagingAccounts\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"DiagramPictureSharingRule\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"account\": \"<string>\",\n          \"type\": \"GTALK\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ScriptAttribute\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"account\": \"<string>\",\n          \"type\": \"ICQ\"\n        }\n      ],\n      \"websites\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ComplexRelationLeg\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"url\": \"<string>\",\n          \"type\": \"MYSPACE\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"DiagramPictureSharingRule\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"url\": \"<string>\",\n          \"type\": \"FACEBOOK\"\n        }\n      ],\n      \"addresses\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Job\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"city\": \"<string>\",\n          \"street\": \"<string>\",\n          \"number\": \"<string>\",\n          \"state\": \"<string>\",\n          \"country\": \"<string>\",\n          \"postalCode\": \"<string>\",\n          \"type\": \"HOME\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"BaseDataType\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"city\": \"<string>\",\n          \"street\": \"<string>\",\n          \"number\": \"<string>\",\n          \"state\": \"<string>\",\n          \"country\": \"<string>\",\n          \"postalCode\": \"<string>\",\n          \"type\": \"HOME\"\n        }\n      ],\n      \"activated\": \"<boolean>\",\n      \"enabled\": \"<boolean>\",\n      \"ldapUser\": \"<boolean>\",\n      \"userSource\": \"INTERNAL\",\n      \"guestUser\": \"<boolean>\",\n      \"apiUser\": \"<boolean>\",\n      \"licenseType\": \"CONSUMER\"\n    }\n  ],\n  \"parent\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"NumericAttributeType\",\n    \"resourceDiscriminator\": \"<string>\"\n  }\n}"
								},
								{
									"name": "Comment not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/comments/:commentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"comments",
												":commentId"
											],
											"variable": [
												{
													"key": "commentId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Remove comment.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/comments/:commentId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"comments",
										":commentId"
									],
									"variable": [
										{
											"key": "commentId",
											"value": "<uuid>",
											"description": "(Required) The ID of the comment to be removed."
										}
									]
								},
								"description": "Removes the comment with the specified ID."
							},
							"response": [
								{
									"name": "Comment successfully removed.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/comments/:commentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"comments",
												":commentId"
											],
											"variable": [
												{
													"key": "commentId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Comment not found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/comments/:commentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"comments",
												":commentId"
											],
											"variable": [
												{
													"key": "commentId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Change comment.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/comments/:commentId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"comments",
										":commentId"
									],
									"variable": [
										{
											"key": "commentId",
											"value": "<uuid>",
											"description": "(Required) The ID of the comment to be changed."
										}
									]
								},
								"description": "<p>Modifies the comment with the specified ID.</p><p>Only properties that are specified in this request and have not <code>null</code> values are updated. All other properties are ignored.</p>"
							},
							"response": [
								{
									"name": "Comment successfully updated.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/comments/:commentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"comments",
												":commentId"
											],
											"variable": [
												{
													"key": "commentId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"baseResource\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Responsibility\",\n    \"resourceDiscriminator\": \"<string>\"\n  },\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"RelationType\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"content\": \"<string>\",\n  \"mentionedUsers\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Workflow\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"userName\": \"<string>\",\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"emailAddress\": \"<string>\",\n      \"gender\": \"MALE\",\n      \"language\": \"<string>\",\n      \"additionalEmailAddresses\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"JdbcDriver\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"emailAddress\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ViewAssignmentRule\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"emailAddress\": \"<string>\"\n        }\n      ],\n      \"phoneNumbers\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"AdvancedDataType\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"type\": \"FAX\",\n          \"phoneNumber\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"User\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"type\": \"PRIVATE\",\n          \"phoneNumber\": \"<string>\"\n        }\n      ],\n      \"instantMessagingAccounts\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Notification\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"account\": \"<string>\",\n          \"type\": \"LIVE_MESSENGER\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Role\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"account\": \"<string>\",\n          \"type\": \"AOL\"\n        }\n      ],\n      \"websites\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ComplexRelationType\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"url\": \"<string>\",\n          \"type\": \"WEBSITE\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Domain\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"url\": \"<string>\",\n          \"type\": \"TWITTER\"\n        }\n      ],\n      \"addresses\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Website\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"city\": \"<string>\",\n          \"street\": \"<string>\",\n          \"number\": \"<string>\",\n          \"state\": \"<string>\",\n          \"country\": \"<string>\",\n          \"postalCode\": \"<string>\",\n          \"type\": \"HOME\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ViewAssignmentRule\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"city\": \"<string>\",\n          \"street\": \"<string>\",\n          \"number\": \"<string>\",\n          \"state\": \"<string>\",\n          \"country\": \"<string>\",\n          \"postalCode\": \"<string>\",\n          \"type\": \"WORK\"\n        }\n      ],\n      \"activated\": \"<boolean>\",\n      \"enabled\": \"<boolean>\",\n      \"ldapUser\": \"<boolean>\",\n      \"userSource\": \"LDAP\",\n      \"guestUser\": \"<boolean>\",\n      \"apiUser\": \"<boolean>\",\n      \"licenseType\": \"CONSUMER\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ExcelIngestionProperties\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"userName\": \"<string>\",\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"emailAddress\": \"<string>\",\n      \"gender\": \"FEMALE\",\n      \"language\": \"<string>\",\n      \"additionalEmailAddresses\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"SingleValueListAttributeType\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"emailAddress\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ComplexRelation\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"emailAddress\": \"<string>\"\n        }\n      ],\n      \"phoneNumbers\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"DataQualityMetric\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"type\": \"MOBILE\",\n          \"phoneNumber\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"WorkflowInstance\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"type\": \"FAX\",\n          \"phoneNumber\": \"<string>\"\n        }\n      ],\n      \"instantMessagingAccounts\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"DiagramPictureSharingRule\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"account\": \"<string>\",\n          \"type\": \"GTALK\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ScriptAttribute\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"account\": \"<string>\",\n          \"type\": \"ICQ\"\n        }\n      ],\n      \"websites\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ComplexRelationLeg\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"url\": \"<string>\",\n          \"type\": \"MYSPACE\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"DiagramPictureSharingRule\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"url\": \"<string>\",\n          \"type\": \"FACEBOOK\"\n        }\n      ],\n      \"addresses\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Job\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"city\": \"<string>\",\n          \"street\": \"<string>\",\n          \"number\": \"<string>\",\n          \"state\": \"<string>\",\n          \"country\": \"<string>\",\n          \"postalCode\": \"<string>\",\n          \"type\": \"HOME\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"BaseDataType\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"city\": \"<string>\",\n          \"street\": \"<string>\",\n          \"number\": \"<string>\",\n          \"state\": \"<string>\",\n          \"country\": \"<string>\",\n          \"postalCode\": \"<string>\",\n          \"type\": \"HOME\"\n        }\n      ],\n      \"activated\": \"<boolean>\",\n      \"enabled\": \"<boolean>\",\n      \"ldapUser\": \"<boolean>\",\n      \"userSource\": \"INTERNAL\",\n      \"guestUser\": \"<boolean>\",\n      \"apiUser\": \"<boolean>\",\n      \"licenseType\": \"CONSUMER\"\n    }\n  ],\n  \"parent\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"NumericAttributeType\",\n    \"resourceDiscriminator\": \"<string>\"\n  }\n}"
								},
								{
									"name": "Comment not found.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/comments/:commentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"comments",
												":commentId"
											],
											"variable": [
												{
													"key": "commentId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Find comments.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/comments?offset=0&limit=0&countLimit=-1&parentId=<uuid>&userId=<uuid>&baseResourceId=<uuid>&rootComment=<boolean>&sortOrder=DESC",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"comments"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
								},
								{
									"key": "limit",
									"value": "0",
									"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
								},
								{
									"key": "countLimit",
									"value": "-1",
									"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
								},
								{
									"key": "parentId",
									"value": "<uuid>",
									"description": "The ID of the comment which the reply comments should be searched for"
								},
								{
									"key": "userId",
									"value": "<uuid>",
									"description": "The ID of the user who created the comment."
								},
								{
									"key": "baseResourceId",
									"value": "<uuid>",
									"description": "The ID of the resource which the searched comments refer to."
								},
								{
									"key": "rootComment",
									"value": "<boolean>",
									"description": "Whether the searched comments should be root comments (not reply comments)."
								},
								{
									"key": "sortOrder",
									"value": "DESC",
									"description": "The order of sorting on the date the comment was created."
								}
							]
						},
						"description": "<p>Returns comments matching the given search criteria.</p><p>Only parameters that are specified in this request and have not <code>null</code> values are used for filtering. All other parameters are ignored.</p><p>The returned comments satisfy all constraints that are specified in this search criteria.</p><p>By default, the result contains up to 1000 comments.</p>"
					},
					"response": [
						{
							"name": "The paged response with found comments.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/comments?offset=0&limit=0&countLimit=-1&parentId=<uuid>&userId=<uuid>&baseResourceId=<uuid>&rootComment=<boolean>&sortOrder=DESC",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"comments"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
										},
										{
											"key": "parentId",
											"value": "<uuid>",
											"description": "The ID of the comment which the reply comments should be searched for"
										},
										{
											"key": "userId",
											"value": "<uuid>",
											"description": "The ID of the user who created the comment."
										},
										{
											"key": "baseResourceId",
											"value": "<uuid>",
											"description": "The ID of the resource which the searched comments refer to."
										},
										{
											"key": "rootComment",
											"value": "<boolean>",
											"description": "Whether the searched comments should be root comments (not reply comments)."
										},
										{
											"key": "sortOrder",
											"value": "DESC",
											"description": "The order of sorting on the date the comment was created."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": \"<long>\",\n  \"offset\": \"<long>\",\n  \"limit\": \"<long>\",\n  \"results\": [\n    {\n      \"baseResource\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"JdbcDriverFile\",\n        \"resourceDiscriminator\": \"<string>\"\n      },\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Community\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"content\": \"<string>\",\n      \"mentionedUsers\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"BooleanAttribute\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"userName\": \"<string>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"emailAddress\": \"<string>\",\n          \"gender\": \"FEMALE\",\n          \"language\": \"<string>\",\n          \"additionalEmailAddresses\": [\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"ComplexRelationType\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"emailAddress\": \"<string>\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"NumericAttribute\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"emailAddress\": \"<string>\"\n            }\n          ],\n          \"phoneNumbers\": [\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"NumericAttributeType\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"type\": \"PRIVATE\",\n              \"phoneNumber\": \"<string>\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"NumericAttributeType\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"type\": \"PAGER\",\n              \"phoneNumber\": \"<string>\"\n            }\n          ],\n          \"instantMessagingAccounts\": [\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"NumericAttribute\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"account\": \"<string>\",\n              \"type\": \"YAHOO_MESSENGER\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"DateAttributeType\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"account\": \"<string>\",\n              \"type\": \"YAHOO_MESSENGER\"\n            }\n          ],\n          \"websites\": [\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"ValidationRule\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"url\": \"<string>\",\n              \"type\": \"MYSPACE\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"Relation\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"url\": \"<string>\",\n              \"type\": \"MYSPACE\"\n            }\n          ],\n          \"addresses\": [\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"RelationType\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"city\": \"<string>\",\n              \"street\": \"<string>\",\n              \"number\": \"<string>\",\n              \"state\": \"<string>\",\n              \"country\": \"<string>\",\n              \"postalCode\": \"<string>\",\n              \"type\": \"WORK\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"Role\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"city\": \"<string>\",\n              \"street\": \"<string>\",\n              \"number\": \"<string>\",\n              \"state\": \"<string>\",\n              \"country\": \"<string>\",\n              \"postalCode\": \"<string>\",\n              \"type\": \"WORK\"\n            }\n          ],\n          \"activated\": \"<boolean>\",\n          \"enabled\": \"<boolean>\",\n          \"ldapUser\": \"<boolean>\",\n          \"userSource\": \"LDAP\",\n          \"guestUser\": \"<boolean>\",\n          \"apiUser\": \"<boolean>\",\n          \"licenseType\": \"AUTHOR\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"WorkflowTask\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"userName\": \"<string>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"emailAddress\": \"<string>\",\n          \"gender\": \"UNKNOWN\",\n          \"language\": \"<string>\",\n          \"additionalEmailAddresses\": [\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"BooleanAttribute\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"emailAddress\": \"<string>\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"ActivityChange\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"emailAddress\": \"<string>\"\n            }\n          ],\n          \"phoneNumbers\": [\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"NumericAttribute\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"type\": \"FAX\",\n              \"phoneNumber\": \"<string>\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"Context\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"type\": \"MOBILE\",\n              \"phoneNumber\": \"<string>\"\n            }\n          ],\n          \"instantMessagingAccounts\": [\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"NumericAttribute\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"account\": \"<string>\",\n              \"type\": \"LIVE_MESSENGER\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"DiagramPictureAssignmentRule\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"account\": \"<string>\",\n              \"type\": \"YAHOO_MESSENGER\"\n            }\n          ],\n          \"websites\": [\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"Comment\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"url\": \"<string>\",\n              \"type\": \"FACEBOOK\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"BaseDataType\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"url\": \"<string>\",\n              \"type\": \"MYSPACE\"\n            }\n          ],\n          \"addresses\": [\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"Notification\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"city\": \"<string>\",\n              \"street\": \"<string>\",\n              \"number\": \"<string>\",\n              \"state\": \"<string>\",\n              \"country\": \"<string>\",\n              \"postalCode\": \"<string>\",\n              \"type\": \"HOME\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"Responsibility\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"city\": \"<string>\",\n              \"street\": \"<string>\",\n              \"number\": \"<string>\",\n              \"state\": \"<string>\",\n              \"country\": \"<string>\",\n              \"postalCode\": \"<string>\",\n              \"type\": \"WORK\"\n            }\n          ],\n          \"activated\": \"<boolean>\",\n          \"enabled\": \"<boolean>\",\n          \"ldapUser\": \"<boolean>\",\n          \"userSource\": \"INTERNAL\",\n          \"guestUser\": \"<boolean>\",\n          \"apiUser\": \"<boolean>\",\n          \"licenseType\": \"AUTHOR\"\n        }\n      ],\n      \"parent\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"DomainType\",\n        \"resourceDiscriminator\": \"<string>\"\n      }\n    },\n    {\n      \"baseResource\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"InstantMessagingAccount\",\n        \"resourceDiscriminator\": \"<string>\"\n      },\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"BooleanAttributeType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"content\": \"<string>\",\n      \"mentionedUsers\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ExcelIngestionProperties\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"userName\": \"<string>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"emailAddress\": \"<string>\",\n          \"gender\": \"MALE\",\n          \"language\": \"<string>\",\n          \"additionalEmailAddresses\": [\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"ScriptAttributeType\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"emailAddress\": \"<string>\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"Context\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"emailAddress\": \"<string>\"\n            }\n          ],\n          \"phoneNumbers\": [\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"ComplexRelation\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"type\": \"OTHER\",\n              \"phoneNumber\": \"<string>\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"MultiValueListAttribute\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"type\": \"OTHER\",\n              \"phoneNumber\": \"<string>\"\n            }\n          ],\n          \"instantMessagingAccounts\": [\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"StringAttributeType\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"account\": \"<string>\",\n              \"type\": \"ICQ\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"AttributeType\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"account\": \"<string>\",\n              \"type\": \"LIVE_MESSENGER\"\n            }\n          ],\n          \"websites\": [\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"Job\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"url\": \"<string>\",\n              \"type\": \"LINKEDIN\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"ArticulationRule\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"url\": \"<string>\",\n              \"type\": \"WEBSITE\"\n            }\n          ],\n          \"addresses\": [\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"StringAttributeType\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"city\": \"<string>\",\n              \"street\": \"<string>\",\n              \"number\": \"<string>\",\n              \"state\": \"<string>\",\n              \"country\": \"<string>\",\n              \"postalCode\": \"<string>\",\n              \"type\": \"HOME\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"ViewAssignmentRule\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"city\": \"<string>\",\n              \"street\": \"<string>\",\n              \"number\": \"<string>\",\n              \"state\": \"<string>\",\n              \"country\": \"<string>\",\n              \"postalCode\": \"<string>\",\n              \"type\": \"WORK\"\n            }\n          ],\n          \"activated\": \"<boolean>\",\n          \"enabled\": \"<boolean>\",\n          \"ldapUser\": \"<boolean>\",\n          \"userSource\": \"SSO\",\n          \"guestUser\": \"<boolean>\",\n          \"apiUser\": \"<boolean>\",\n          \"licenseType\": \"AUTHOR\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ComplexRelation\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"userName\": \"<string>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"emailAddress\": \"<string>\",\n          \"gender\": \"MALE\",\n          \"language\": \"<string>\",\n          \"additionalEmailAddresses\": [\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"WorkflowTask\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"emailAddress\": \"<string>\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"AssetType\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"emailAddress\": \"<string>\"\n            }\n          ],\n          \"phoneNumbers\": [\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"AssignedCharacteristicType\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"type\": \"MOBILE\",\n              \"phoneNumber\": \"<string>\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"Scope\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"type\": \"MOBILE\",\n              \"phoneNumber\": \"<string>\"\n            }\n          ],\n          \"instantMessagingAccounts\": [\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"CsvIngestionProperties\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"account\": \"<string>\",\n              \"type\": \"YAHOO_MESSENGER\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"AdvancedDataType\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"account\": \"<string>\",\n              \"type\": \"JABBER\"\n            }\n          ],\n          \"websites\": [\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"RelationTrace\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"url\": \"<string>\",\n              \"type\": \"FACEBOOK\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"Responsibility\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"url\": \"<string>\",\n              \"type\": \"TWITTER\"\n            }\n          ],\n          \"addresses\": [\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"Attribute\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"city\": \"<string>\",\n              \"street\": \"<string>\",\n              \"number\": \"<string>\",\n              \"state\": \"<string>\",\n              \"country\": \"<string>\",\n              \"postalCode\": \"<string>\",\n              \"type\": \"WORK\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"ArticulationRule\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"city\": \"<string>\",\n              \"street\": \"<string>\",\n              \"number\": \"<string>\",\n              \"state\": \"<string>\",\n              \"country\": \"<string>\",\n              \"postalCode\": \"<string>\",\n              \"type\": \"HOME\"\n            }\n          ],\n          \"activated\": \"<boolean>\",\n          \"enabled\": \"<boolean>\",\n          \"ldapUser\": \"<boolean>\",\n          \"userSource\": \"SSO\",\n          \"guestUser\": \"<boolean>\",\n          \"apiUser\": \"<boolean>\",\n          \"licenseType\": \"CONSUMER\"\n        }\n      ],\n      \"parent\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"PhysicalDataConnector\",\n        \"resourceDiscriminator\": \"<string>\"\n      }\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Add comment.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"baseResource\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"JdbcDriverFile\",\n    \"resourceDiscriminator\": \"<string>\"\n  },\n  \"content\": \"<string>\",\n  \"parentId\": \"<uuid>\",\n  \"baseResourceId\": \"<uuid>\",\n  \"baseResourceType\": \"Status\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"comments"
							]
						},
						"description": "Adds a new comment."
					},
					"response": [
						{
							"name": "Comment successfully added.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"baseResource\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"JdbcDriverFile\",\n    \"resourceDiscriminator\": \"<string>\"\n  },\n  \"content\": \"<string>\",\n  \"parentId\": \"<uuid>\",\n  \"baseResourceId\": \"<uuid>\",\n  \"baseResourceType\": \"Status\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"comments"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"baseResource\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Responsibility\",\n    \"resourceDiscriminator\": \"<string>\"\n  },\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"RelationType\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"content\": \"<string>\",\n  \"mentionedUsers\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Workflow\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"userName\": \"<string>\",\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"emailAddress\": \"<string>\",\n      \"gender\": \"MALE\",\n      \"language\": \"<string>\",\n      \"additionalEmailAddresses\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"JdbcDriver\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"emailAddress\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ViewAssignmentRule\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"emailAddress\": \"<string>\"\n        }\n      ],\n      \"phoneNumbers\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"AdvancedDataType\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"type\": \"FAX\",\n          \"phoneNumber\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"User\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"type\": \"PRIVATE\",\n          \"phoneNumber\": \"<string>\"\n        }\n      ],\n      \"instantMessagingAccounts\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Notification\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"account\": \"<string>\",\n          \"type\": \"LIVE_MESSENGER\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Role\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"account\": \"<string>\",\n          \"type\": \"AOL\"\n        }\n      ],\n      \"websites\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ComplexRelationType\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"url\": \"<string>\",\n          \"type\": \"WEBSITE\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Domain\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"url\": \"<string>\",\n          \"type\": \"TWITTER\"\n        }\n      ],\n      \"addresses\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Website\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"city\": \"<string>\",\n          \"street\": \"<string>\",\n          \"number\": \"<string>\",\n          \"state\": \"<string>\",\n          \"country\": \"<string>\",\n          \"postalCode\": \"<string>\",\n          \"type\": \"HOME\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ViewAssignmentRule\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"city\": \"<string>\",\n          \"street\": \"<string>\",\n          \"number\": \"<string>\",\n          \"state\": \"<string>\",\n          \"country\": \"<string>\",\n          \"postalCode\": \"<string>\",\n          \"type\": \"WORK\"\n        }\n      ],\n      \"activated\": \"<boolean>\",\n      \"enabled\": \"<boolean>\",\n      \"ldapUser\": \"<boolean>\",\n      \"userSource\": \"LDAP\",\n      \"guestUser\": \"<boolean>\",\n      \"apiUser\": \"<boolean>\",\n      \"licenseType\": \"CONSUMER\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ExcelIngestionProperties\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"userName\": \"<string>\",\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"emailAddress\": \"<string>\",\n      \"gender\": \"FEMALE\",\n      \"language\": \"<string>\",\n      \"additionalEmailAddresses\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"SingleValueListAttributeType\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"emailAddress\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ComplexRelation\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"emailAddress\": \"<string>\"\n        }\n      ],\n      \"phoneNumbers\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"DataQualityMetric\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"type\": \"MOBILE\",\n          \"phoneNumber\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"WorkflowInstance\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"type\": \"FAX\",\n          \"phoneNumber\": \"<string>\"\n        }\n      ],\n      \"instantMessagingAccounts\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"DiagramPictureSharingRule\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"account\": \"<string>\",\n          \"type\": \"GTALK\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ScriptAttribute\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"account\": \"<string>\",\n          \"type\": \"ICQ\"\n        }\n      ],\n      \"websites\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ComplexRelationLeg\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"url\": \"<string>\",\n          \"type\": \"MYSPACE\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"DiagramPictureSharingRule\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"url\": \"<string>\",\n          \"type\": \"FACEBOOK\"\n        }\n      ],\n      \"addresses\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Job\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"city\": \"<string>\",\n          \"street\": \"<string>\",\n          \"number\": \"<string>\",\n          \"state\": \"<string>\",\n          \"country\": \"<string>\",\n          \"postalCode\": \"<string>\",\n          \"type\": \"HOME\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"BaseDataType\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"city\": \"<string>\",\n          \"street\": \"<string>\",\n          \"number\": \"<string>\",\n          \"state\": \"<string>\",\n          \"country\": \"<string>\",\n          \"postalCode\": \"<string>\",\n          \"type\": \"HOME\"\n        }\n      ],\n      \"activated\": \"<boolean>\",\n      \"enabled\": \"<boolean>\",\n      \"ldapUser\": \"<boolean>\",\n      \"userSource\": \"INTERNAL\",\n      \"guestUser\": \"<boolean>\",\n      \"apiUser\": \"<boolean>\",\n      \"licenseType\": \"CONSUMER\"\n    }\n  ],\n  \"parent\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"NumericAttributeType\",\n    \"resourceDiscriminator\": \"<string>\"\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "communities",
			"item": [
				{
					"name": "bulk",
					"item": [
						{
							"name": "Add multiple communities",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"name\": \"<string>\",\n    \"parentId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"id\": \"<uuid>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"parentId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"id\": \"<uuid>\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/communities/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"bulk"
									]
								},
								"description": "Adds multiple communities with the given parameters"
							},
							"response": [
								{
									"name": "Created - The request has been fulfilled and resulted in a new resource being created.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"name\": \"<string>\",\n    \"parentId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"id\": \"<uuid>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"parentId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"id\": \"<uuid>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/communities/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												"bulk"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Role\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"parent\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"AssignedCharacteristicType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Relation\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"parent\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"PhysicalDataConnector\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  }\n]"
								},
								{
									"name": "Bad Request - Request data is malformed or illegal. The request body will contain additional information.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"name\": \"<string>\",\n    \"parentId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"id\": \"<uuid>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"parentId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"id\": \"<uuid>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/communities/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												"bulk"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized - Authentication has failed or has not been provided.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"name\": \"<string>\",\n    \"parentId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"id\": \"<uuid>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"parentId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"id\": \"<uuid>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/communities/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												"bulk"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "License Problem - There was a problem related to the license.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"name\": \"<string>\",\n    \"parentId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"id\": \"<uuid>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"parentId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"id\": \"<uuid>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/communities/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												"bulk"
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden - Insufficient permissions to perform the requested operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"name\": \"<string>\",\n    \"parentId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"id\": \"<uuid>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"parentId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"id\": \"<uuid>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/communities/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												"bulk"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"name\": \"<string>\",\n    \"parentId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"id\": \"<uuid>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"parentId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"id\": \"<uuid>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/communities/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												"bulk"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Remove multiple communities",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/communities/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"bulk"
									]
								},
								"description": "This endpoint will be removed in the future. Please use POST /communities/removalJobs."
							},
							"response": [
								{
									"name": "No Content - The server has fulfilled the request but does not need to return an entity-body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/communities/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												"bulk"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request - Request data is malformed or illegal. The request body will contain additional information.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/communities/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												"bulk"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized - Authentication has failed or has not been provided.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/communities/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												"bulk"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "License Problem - There was a problem related to the license.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/communities/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												"bulk"
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden - Insufficient permissions to perform the requested operation.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/communities/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												"bulk"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/communities/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												"bulk"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Change multiple communities",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"parentId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"removeScopeOverlapOnMove\": \"<boolean>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"parentId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"removeScopeOverlapOnMove\": \"<boolean>\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/communities/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"bulk"
									]
								},
								"description": "Changes multiple communities using the given request parameters"
							},
							"response": [
								{
									"name": "OK - The request has succeeded.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"parentId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"removeScopeOverlapOnMove\": \"<boolean>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"parentId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"removeScopeOverlapOnMove\": \"<boolean>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/communities/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												"bulk"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Role\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"parent\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"AssignedCharacteristicType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Relation\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"parent\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"PhysicalDataConnector\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  }\n]"
								},
								{
									"name": "Bad Request - Request data is malformed or illegal. The request body will contain additional information.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"parentId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"removeScopeOverlapOnMove\": \"<boolean>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"parentId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"removeScopeOverlapOnMove\": \"<boolean>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/communities/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												"bulk"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized - Authentication has failed or has not been provided.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"parentId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"removeScopeOverlapOnMove\": \"<boolean>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"parentId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"removeScopeOverlapOnMove\": \"<boolean>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/communities/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												"bulk"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "License Problem - There was a problem related to the license.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"parentId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"removeScopeOverlapOnMove\": \"<boolean>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"parentId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"removeScopeOverlapOnMove\": \"<boolean>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/communities/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												"bulk"
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden - Insufficient permissions to perform the requested operation.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"parentId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"removeScopeOverlapOnMove\": \"<boolean>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"parentId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"removeScopeOverlapOnMove\": \"<boolean>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/communities/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												"bulk"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"parentId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"removeScopeOverlapOnMove\": \"<boolean>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"parentId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"removeScopeOverlapOnMove\": \"<boolean>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/communities/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												"bulk"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"parentId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"removeScopeOverlapOnMove\": \"<boolean>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"parentId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"removeScopeOverlapOnMove\": \"<boolean>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/communities/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												"bulk"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "{communityId}",
					"item": [
						{
							"name": "root",
							"item": [
								{
									"name": "Change to root community",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/communities/:communityId/root",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												":communityId",
												"root"
											],
											"variable": [
												{
													"key": "communityId",
													"value": "<uuid>",
													"description": "(Required) The ID of the community that will be changed to a root community"
												}
											]
										},
										"description": "Changes the community with given ID to a root community."
									},
									"response": [
										{
											"name": "OK - The request has succeeded.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/communities/:communityId/root",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"communities",
														":communityId",
														"root"
													],
													"variable": [
														{
															"key": "communityId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"AssetType\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"parent\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"NumericAttribute\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  }\n}"
										},
										{
											"name": "Unauthorized - Authentication has failed or has not been provided.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/communities/:communityId/root",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"communities",
														":communityId",
														"root"
													],
													"variable": [
														{
															"key": "communityId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "License Problem - There was a problem related to the license.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/communities/:communityId/root",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"communities",
														":communityId",
														"root"
													],
													"variable": [
														{
															"key": "communityId"
														}
													]
												}
											},
											"status": "Payment Required",
											"code": 402,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden - Insufficient permissions to perform the requested operation.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/communities/:communityId/root",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"communities",
														":communityId",
														"root"
													],
													"variable": [
														{
															"key": "communityId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/communities/:communityId/root",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"communities",
														":communityId",
														"root"
													],
													"variable": [
														{
															"key": "communityId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/communities/:communityId/root",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"communities",
														":communityId",
														"root"
													],
													"variable": [
														{
															"key": "communityId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "breadcrumb",
							"item": [
								{
									"name": "Get community breadcrumb",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/communities/:communityId/breadcrumb",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												":communityId",
												"breadcrumb"
											],
											"variable": [
												{
													"key": "communityId",
													"value": "<string>",
													"description": "(Required) The ID of the community"
												}
											]
										},
										"description": "Returns the list of communities that lead to the community identified by the given ID."
									},
									"response": [
										{
											"name": "OK - The request has succeeded.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/communities/:communityId/breadcrumb",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"communities",
														":communityId",
														"breadcrumb"
													],
													"variable": [
														{
															"key": "communityId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"DateAttributeType\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"StringAttributeType\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  }\n]"
										},
										{
											"name": "Unauthorized - Authentication has failed or has not been provided.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/communities/:communityId/breadcrumb",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"communities",
														":communityId",
														"breadcrumb"
													],
													"variable": [
														{
															"key": "communityId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "License Problem - There was a problem related to the license.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/communities/:communityId/breadcrumb",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"communities",
														":communityId",
														"breadcrumb"
													],
													"variable": [
														{
															"key": "communityId"
														}
													]
												}
											},
											"status": "Payment Required",
											"code": 402,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden - Insufficient permissions to perform the requested operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/communities/:communityId/breadcrumb",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"communities",
														":communityId",
														"breadcrumb"
													],
													"variable": [
														{
															"key": "communityId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/communities/:communityId/breadcrumb",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"communities",
														":communityId",
														"breadcrumb"
													],
													"variable": [
														{
															"key": "communityId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/communities/:communityId/breadcrumb",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"communities",
														":communityId",
														"breadcrumb"
													],
													"variable": [
														{
															"key": "communityId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get community",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities/:communityId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										":communityId"
									],
									"variable": [
										{
											"key": "communityId",
											"value": "<uuid>",
											"description": "(Required) the ID of the community"
										}
									]
								},
								"description": "Returns the community with the given ID."
							},
							"response": [
								{
									"name": "OK - The request has succeeded.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/communities/:communityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												":communityId"
											],
											"variable": [
												{
													"key": "communityId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"AssetType\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"parent\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"NumericAttribute\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  }\n}"
								},
								{
									"name": "Unauthorized - Authentication has failed or has not been provided.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/communities/:communityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												":communityId"
											],
											"variable": [
												{
													"key": "communityId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "License Problem - There was a problem related to the license.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/communities/:communityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												":communityId"
											],
											"variable": [
												{
													"key": "communityId"
												}
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden - Insufficient permissions to perform the requested operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/communities/:communityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												":communityId"
											],
											"variable": [
												{
													"key": "communityId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/communities/:communityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												":communityId"
											],
											"variable": [
												{
													"key": "communityId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/communities/:communityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												":communityId"
											],
											"variable": [
												{
													"key": "communityId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Remove community",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/communities/:communityId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										":communityId"
									],
									"variable": [
										{
											"key": "communityId",
											"value": "<uuid>",
											"description": "(Required) the ID of the community to remove"
										}
									]
								},
								"description": "This endpoint will be removed in the future. Please use POST /communities/removalJobs"
							},
							"response": [
								{
									"name": "No Content - The server has fulfilled the request but does not need to return an entity-body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/communities/:communityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												":communityId"
											],
											"variable": [
												{
													"key": "communityId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized - Authentication has failed or has not been provided.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/communities/:communityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												":communityId"
											],
											"variable": [
												{
													"key": "communityId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "License Problem - There was a problem related to the license.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/communities/:communityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												":communityId"
											],
											"variable": [
												{
													"key": "communityId"
												}
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden - Insufficient permissions to perform the requested operation.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/communities/:communityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												":communityId"
											],
											"variable": [
												{
													"key": "communityId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/communities/:communityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												":communityId"
											],
											"variable": [
												{
													"key": "communityId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/communities/:communityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												":communityId"
											],
											"variable": [
												{
													"key": "communityId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Change community",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<uuid>\",\n  \"parentId\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"removeScopeOverlapOnMove\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/communities/:communityId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										":communityId"
									],
									"variable": [
										{
											"key": "communityId",
											"value": "<uuid>",
											"description": "(Required) the id of the community to be changed."
										}
									]
								},
								"description": "Changes the community with the information that is present in the request. Only properties that are specified in this request and have non-<code>null</code> values are updated. All other properties are ignored."
							},
							"response": [
								{
									"name": "OK - The request has succeeded.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"parentId\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"removeScopeOverlapOnMove\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/communities/:communityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												":communityId"
											],
											"variable": [
												{
													"key": "communityId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"AssetType\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"parent\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"NumericAttribute\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  }\n}"
								},
								{
									"name": "Bad Request - Request data is malformed or illegal. The request body will contain additional information.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"parentId\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"removeScopeOverlapOnMove\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/communities/:communityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												":communityId"
											],
											"variable": [
												{
													"key": "communityId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized - Authentication has failed or has not been provided.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"parentId\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"removeScopeOverlapOnMove\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/communities/:communityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												":communityId"
											],
											"variable": [
												{
													"key": "communityId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "License Problem - There was a problem related to the license.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"parentId\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"removeScopeOverlapOnMove\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/communities/:communityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												":communityId"
											],
											"variable": [
												{
													"key": "communityId"
												}
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden - Insufficient permissions to perform the requested operation.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"parentId\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"removeScopeOverlapOnMove\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/communities/:communityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												":communityId"
											],
											"variable": [
												{
													"key": "communityId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"parentId\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"removeScopeOverlapOnMove\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/communities/:communityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												":communityId"
											],
											"variable": [
												{
													"key": "communityId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"parentId\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"removeScopeOverlapOnMove\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/communities/:communityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												":communityId"
											],
											"variable": [
												{
													"key": "communityId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "removalJobs",
					"item": [
						{
							"name": "Remove multiple communities asynchronously",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/communities/removalJobs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities",
										"removalJobs"
									]
								},
								"description": "Removes multiple communities in a job."
							},
							"response": [
								{
									"name": "OK - The request has succeeded.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/communities/removalJobs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												"removalJobs"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Website\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"userId\": \"<uuid>\",\n  \"visibility\": \"<integer>\",\n  \"progressPercentage\": \"<double>\",\n  \"cancelable\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"state\": \"CANCELING\",\n  \"result\": \"NOT_SET\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Bad Request - Request data is malformed or illegal. The request body will contain additional information.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/communities/removalJobs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												"removalJobs"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized - Authentication has failed or has not been provided.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/communities/removalJobs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												"removalJobs"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "License Problem - There was a problem related to the license.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/communities/removalJobs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												"removalJobs"
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden - Insufficient permissions to perform the requested operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/communities/removalJobs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												"removalJobs"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/communities/removalJobs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"communities",
												"removalJobs"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Find communities",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/communities?offset=0&limit=0&countLimit=-1&cursor=<string>&name=<string>&nameMatchMode=ANYWHERE&parentId=<uuid>&excludeMeta=true&sortField=NAME&sortOrder=ASC",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"communities"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>. Cursor should be preferred over offset for better performance and stable results. It is forbidden to use both in the same request."
								},
								{
									"key": "limit",
									"value": "0",
									"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
								},
								{
									"key": "countLimit",
									"value": "-1",
									"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped. For cursor pagination this parameter is ignored and count is skipped."
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for the current page of results. To retrieve the first page with cursor pagination you need to pass this parameter with an empty value (must be non-null). For the next pages, the value must be taken from the response (<code>nextCursor</code> property)."
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "The name of the community to search for."
								},
								{
									"key": "nameMatchMode",
									"value": "ANYWHERE",
									"description": "The match mode used to compare <code>name</code>. If the match mode is <code>EXACT</code> the search is case-sensitive, otherwise the search is case-insensitive."
								},
								{
									"key": "parentId",
									"value": "<uuid>",
									"description": "The ID of the parent community to find the communities in."
								},
								{
									"key": "excludeMeta",
									"value": "true",
									"description": "The exclude meta flag. If this is set to true then the meta communities will not be returned (meta communities are i.e. communities not created manually by the user)."
								},
								{
									"key": "sortField",
									"value": "NAME",
									"description": "(Required) The field on which the results are sorted."
								},
								{
									"key": "sortOrder",
									"value": "ASC",
									"description": "The sorting order."
								}
							]
						},
						"description": "Returns communities matching the given search criteria. Only parameters that are specified in this request and have non-<code>null</code> values are used for filtering. All other parameters are ignored. By default a result containing 1000 communities is returned."
					},
					"response": [
						{
							"name": "OK - The request has succeeded.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities?offset=0&limit=0&countLimit=-1&cursor=<string>&name=<string>&nameMatchMode=ANYWHERE&parentId=<uuid>&excludeMeta=true&sortField=NAME&sortOrder=ASC",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>. Cursor should be preferred over offset for better performance and stable results. It is forbidden to use both in the same request."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped. For cursor pagination this parameter is ignored and count is skipped."
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Cursor for the current page of results. To retrieve the first page with cursor pagination you need to pass this parameter with an empty value (must be non-null). For the next pages, the value must be taken from the response (<code>nextCursor</code> property)."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "The name of the community to search for."
										},
										{
											"key": "nameMatchMode",
											"value": "ANYWHERE",
											"description": "The match mode used to compare <code>name</code>. If the match mode is <code>EXACT</code> the search is case-sensitive, otherwise the search is case-insensitive."
										},
										{
											"key": "parentId",
											"value": "<uuid>",
											"description": "The ID of the parent community to find the communities in."
										},
										{
											"key": "excludeMeta",
											"value": "true",
											"description": "The exclude meta flag. If this is set to true then the meta communities will not be returned (meta communities are i.e. communities not created manually by the user)."
										},
										{
											"key": "sortField",
											"value": "NAME",
											"description": "(Required) The field on which the results are sorted."
										},
										{
											"key": "sortOrder",
											"value": "ASC",
											"description": "The sorting order."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": \"<long>\",\n  \"offset\": \"<long>\",\n  \"limit\": \"<long>\",\n  \"results\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"PhysicalDataConnector\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"parent\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"AttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Activity\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"parent\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"DataQualityRule\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    }\n  ]\n}"
						},
						{
							"name": "Unauthorized - Authentication has failed or has not been provided.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities?offset=0&limit=0&countLimit=-1&cursor=<string>&name=<string>&nameMatchMode=ANYWHERE&parentId=<uuid>&excludeMeta=true&sortField=NAME&sortOrder=ASC",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>. Cursor should be preferred over offset for better performance and stable results. It is forbidden to use both in the same request."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped. For cursor pagination this parameter is ignored and count is skipped."
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Cursor for the current page of results. To retrieve the first page with cursor pagination you need to pass this parameter with an empty value (must be non-null). For the next pages, the value must be taken from the response (<code>nextCursor</code> property)."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "The name of the community to search for."
										},
										{
											"key": "nameMatchMode",
											"value": "ANYWHERE",
											"description": "The match mode used to compare <code>name</code>. If the match mode is <code>EXACT</code> the search is case-sensitive, otherwise the search is case-insensitive."
										},
										{
											"key": "parentId",
											"value": "<uuid>",
											"description": "The ID of the parent community to find the communities in."
										},
										{
											"key": "excludeMeta",
											"value": "true",
											"description": "The exclude meta flag. If this is set to true then the meta communities will not be returned (meta communities are i.e. communities not created manually by the user)."
										},
										{
											"key": "sortField",
											"value": "NAME",
											"description": "(Required) The field on which the results are sorted."
										},
										{
											"key": "sortOrder",
											"value": "ASC",
											"description": "The sorting order."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "License Problem - There was a problem related to the license.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities?offset=0&limit=0&countLimit=-1&cursor=<string>&name=<string>&nameMatchMode=ANYWHERE&parentId=<uuid>&excludeMeta=true&sortField=NAME&sortOrder=ASC",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>. Cursor should be preferred over offset for better performance and stable results. It is forbidden to use both in the same request."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped. For cursor pagination this parameter is ignored and count is skipped."
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Cursor for the current page of results. To retrieve the first page with cursor pagination you need to pass this parameter with an empty value (must be non-null). For the next pages, the value must be taken from the response (<code>nextCursor</code> property)."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "The name of the community to search for."
										},
										{
											"key": "nameMatchMode",
											"value": "ANYWHERE",
											"description": "The match mode used to compare <code>name</code>. If the match mode is <code>EXACT</code> the search is case-sensitive, otherwise the search is case-insensitive."
										},
										{
											"key": "parentId",
											"value": "<uuid>",
											"description": "The ID of the parent community to find the communities in."
										},
										{
											"key": "excludeMeta",
											"value": "true",
											"description": "The exclude meta flag. If this is set to true then the meta communities will not be returned (meta communities are i.e. communities not created manually by the user)."
										},
										{
											"key": "sortField",
											"value": "NAME",
											"description": "(Required) The field on which the results are sorted."
										},
										{
											"key": "sortOrder",
											"value": "ASC",
											"description": "The sorting order."
										}
									]
								}
							},
							"status": "Payment Required",
							"code": 402,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities?offset=0&limit=0&countLimit=-1&cursor=<string>&name=<string>&nameMatchMode=ANYWHERE&parentId=<uuid>&excludeMeta=true&sortField=NAME&sortOrder=ASC",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>. Cursor should be preferred over offset for better performance and stable results. It is forbidden to use both in the same request."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped. For cursor pagination this parameter is ignored and count is skipped."
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Cursor for the current page of results. To retrieve the first page with cursor pagination you need to pass this parameter with an empty value (must be non-null). For the next pages, the value must be taken from the response (<code>nextCursor</code> property)."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "The name of the community to search for."
										},
										{
											"key": "nameMatchMode",
											"value": "ANYWHERE",
											"description": "The match mode used to compare <code>name</code>. If the match mode is <code>EXACT</code> the search is case-sensitive, otherwise the search is case-insensitive."
										},
										{
											"key": "parentId",
											"value": "<uuid>",
											"description": "The ID of the parent community to find the communities in."
										},
										{
											"key": "excludeMeta",
											"value": "true",
											"description": "The exclude meta flag. If this is set to true then the meta communities will not be returned (meta communities are i.e. communities not created manually by the user)."
										},
										{
											"key": "sortField",
											"value": "NAME",
											"description": "(Required) The field on which the results are sorted."
										},
										{
											"key": "sortOrder",
											"value": "ASC",
											"description": "The sorting order."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/communities?offset=0&limit=0&countLimit=-1&cursor=<string>&name=<string>&nameMatchMode=ANYWHERE&parentId=<uuid>&excludeMeta=true&sortField=NAME&sortOrder=ASC",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>. Cursor should be preferred over offset for better performance and stable results. It is forbidden to use both in the same request."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped. For cursor pagination this parameter is ignored and count is skipped."
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Cursor for the current page of results. To retrieve the first page with cursor pagination you need to pass this parameter with an empty value (must be non-null). For the next pages, the value must be taken from the response (<code>nextCursor</code> property)."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "The name of the community to search for."
										},
										{
											"key": "nameMatchMode",
											"value": "ANYWHERE",
											"description": "The match mode used to compare <code>name</code>. If the match mode is <code>EXACT</code> the search is case-sensitive, otherwise the search is case-insensitive."
										},
										{
											"key": "parentId",
											"value": "<uuid>",
											"description": "The ID of the parent community to find the communities in."
										},
										{
											"key": "excludeMeta",
											"value": "true",
											"description": "The exclude meta flag. If this is set to true then the meta communities will not be returned (meta communities are i.e. communities not created manually by the user)."
										},
										{
											"key": "sortField",
											"value": "NAME",
											"description": "(Required) The field on which the results are sorted."
										},
										{
											"key": "sortOrder",
											"value": "ASC",
											"description": "The sorting order."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add community",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"parentId\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"id\": \"<uuid>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/communities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"communities"
							]
						},
						"description": "Adds a new community with the given parameters."
					},
					"response": [
						{
							"name": "Created - The request has been fulfilled and resulted in a new resource being created.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"parentId\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"id\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/communities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"AssetType\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"parent\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"NumericAttribute\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  }\n}"
						},
						{
							"name": "Bad Request - Request data is malformed or illegal. The request body will contain additional information.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"parentId\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"id\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/communities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized - Authentication has failed or has not been provided.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"parentId\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"id\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/communities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "License Problem - There was a problem related to the license.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"parentId\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"id\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/communities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities"
									]
								}
							},
							"status": "Payment Required",
							"code": 402,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden - Insufficient permissions to perform the requested operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"parentId\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"id\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/communities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"parentId\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"id\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/communities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"communities"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "complexRelations",
			"item": [
				{
					"name": "{complexRelationId}",
					"item": [
						{
							"name": "Returns a ComplexRelation identified by given id.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/complexRelations/:complexRelationId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"complexRelations",
										":complexRelationId"
									],
									"variable": [
										{
											"key": "complexRelationId",
											"value": "<uuid>",
											"description": "(Required) the id of the complex relation."
										}
									]
								},
								"description": "Returns a complex relation identified by given <code>id</code>."
							},
							"response": [
								{
									"name": "OK - The request has succeeded.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/complexRelations/:complexRelationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"complexRelations",
												":complexRelationId"
											],
											"variable": [
												{
													"key": "complexRelationId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"JdbcDriverFile\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"type\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"RelationTrace\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"publicId\": \"<string>\",\n    \"symbolData\": {\n      \"color\": \"<string>\",\n      \"symbolType\": \"ACRONYM_CODE\",\n      \"iconCode\": \"<string>\",\n      \"acronymCode\": \"<string>\"\n    },\n    \"attributeTypes\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"BooleanAttributeType\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"minimumOccurrences\": \"<integer>\",\n        \"maximumOccurrences\": \"<integer>\",\n        \"readOnly\": \"<boolean>\",\n        \"attributeType\": {\n          \"attributeTypeDiscriminator\": \"<string>\",\n          \"publicId\": \"<string>\",\n          \"description\": \"<string>\",\n          \"name\": \"<string>\",\n          \"resourceType\": \"Domain\",\n          \"createdBy\": \"<uuid>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"id\": \"<uuid>\"\n        }\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"RelationType\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"minimumOccurrences\": \"<integer>\",\n        \"maximumOccurrences\": \"<integer>\",\n        \"readOnly\": \"<boolean>\",\n        \"attributeType\": {\n          \"attributeTypeDiscriminator\": \"<string>\",\n          \"publicId\": \"<string>\",\n          \"description\": \"<string>\",\n          \"name\": \"<string>\",\n          \"resourceType\": \"AssignedCharacteristicType\",\n          \"createdBy\": \"<uuid>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"id\": \"<uuid>\"\n        }\n      }\n    ],\n    \"legTypes\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ArticulationRule\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"minimumOccurrences\": \"<integer>\",\n        \"maximumOccurrences\": \"<integer>\",\n        \"assetType\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Comment\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"role\": \"<string>\",\n        \"coRole\": \"<string>\",\n        \"relationTypeId\": \"<uuid>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Role\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"minimumOccurrences\": \"<integer>\",\n        \"maximumOccurrences\": \"<integer>\",\n        \"assetType\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Context\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"role\": \"<string>\",\n        \"coRole\": \"<string>\",\n        \"relationTypeId\": \"<uuid>\"\n      }\n    ]\n  },\n  \"legs\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"PhoneNumber\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"assetType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"StringAttribute\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"asset\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Classification\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"assetReference\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"JdbcDriver\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\",\n        \"displayName\": \"<string>\"\n      },\n      \"role\": \"<string>\",\n      \"coRole\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Domain\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"assetType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"MultiValueListAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"asset\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ClassificationMatch\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"assetReference\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ValidationRule\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\",\n        \"displayName\": \"<string>\"\n      },\n      \"role\": \"<string>\",\n      \"coRole\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"attributeDiscriminator\": \"<string>\",\n      \"asset\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Role\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"value\": {},\n      \"type\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"DataQualityMetric\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"resourceType\": \"ClassificationMatch\",\n      \"createdBy\": \"<uuid>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"id\": \"<uuid>\"\n    },\n    {\n      \"attributeDiscriminator\": \"<string>\",\n      \"asset\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ScriptAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"value\": {},\n      \"type\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"JdbcDriver\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"resourceType\": \"AdvancedDataType\",\n      \"createdBy\": \"<uuid>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"id\": \"<uuid>\"\n    }\n  ]\n}"
								},
								{
									"name": "Unauthorized - Authentication has failed or has not been provided.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/complexRelations/:complexRelationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"complexRelations",
												":complexRelationId"
											],
											"variable": [
												{
													"key": "complexRelationId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "License Problem - There was a problem related to the license.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/complexRelations/:complexRelationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"complexRelations",
												":complexRelationId"
											],
											"variable": [
												{
													"key": "complexRelationId"
												}
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden - Insufficient permissions to perform the requested operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/complexRelations/:complexRelationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"complexRelations",
												":complexRelationId"
											],
											"variable": [
												{
													"key": "complexRelationId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/complexRelations/:complexRelationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"complexRelations",
												":complexRelationId"
											],
											"variable": [
												{
													"key": "complexRelationId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/complexRelations/:complexRelationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"complexRelations",
												":complexRelationId"
											],
											"variable": [
												{
													"key": "complexRelationId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Removes complex relation identified by given id.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/complexRelations/:complexRelationId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"complexRelations",
										":complexRelationId"
									],
									"variable": [
										{
											"key": "complexRelationId",
											"value": "<uuid>",
											"description": "(Required) the id of the complex relation to be removed."
										}
									]
								},
								"description": "Removes complex relation identified by given id."
							},
							"response": [
								{
									"name": "No Content - The server has fulfilled the request but does not need to return an entity-body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/complexRelations/:complexRelationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"complexRelations",
												":complexRelationId"
											],
											"variable": [
												{
													"key": "complexRelationId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized - Authentication has failed or has not been provided.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/complexRelations/:complexRelationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"complexRelations",
												":complexRelationId"
											],
											"variable": [
												{
													"key": "complexRelationId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "License Problem - There was a problem related to the license.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/complexRelations/:complexRelationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"complexRelations",
												":complexRelationId"
											],
											"variable": [
												{
													"key": "complexRelationId"
												}
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden - Insufficient permissions to perform the requested operation.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/complexRelations/:complexRelationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"complexRelations",
												":complexRelationId"
											],
											"variable": [
												{
													"key": "complexRelationId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/complexRelations/:complexRelationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"complexRelations",
												":complexRelationId"
											],
											"variable": [
												{
													"key": "complexRelationId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/complexRelations/:complexRelationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"complexRelations",
												":complexRelationId"
											],
											"variable": [
												{
													"key": "complexRelationId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Change the complex relation with the information that is present in the request.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"legs\": [\n    {\n      \"assetId\": \"<uuid>\",\n      \"legTypeId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"relationTypePublicId\": \"<string>\"\n    },\n    {\n      \"assetId\": \"<uuid>\",\n      \"legTypeId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"relationTypePublicId\": \"<string>\"\n    }\n  ],\n  \"relations\": {\n    \"ut_b07\": [\n      {\n        \"id\": \"<uuid>\"\n      },\n      {\n        \"id\": \"<uuid>\"\n      }\n    ]\n  },\n  \"attributes\": {\n    \"adipisicingaee\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  },\n  \"attributesForTypePublicId\": {\n    \"amet_7\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/complexRelations/:complexRelationId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"complexRelations",
										":complexRelationId"
									],
									"variable": [
										{
											"key": "complexRelationId",
											"value": "<uuid>",
											"description": "(Required) the id of the complex relation to be modified."
										}
									]
								},
								"description": "Change the complex relation with the information that is present in the request.  Only properties that are specified in this request and have not <code>null</code> values are updated.  All other properties are ignored."
							},
							"response": [
								{
									"name": "OK - The request has succeeded.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"legs\": [\n    {\n      \"assetId\": \"<uuid>\",\n      \"legTypeId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"relationTypePublicId\": \"<string>\"\n    },\n    {\n      \"assetId\": \"<uuid>\",\n      \"legTypeId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"relationTypePublicId\": \"<string>\"\n    }\n  ],\n  \"relations\": {\n    \"ut_b07\": [\n      {\n        \"id\": \"<uuid>\"\n      },\n      {\n        \"id\": \"<uuid>\"\n      }\n    ]\n  },\n  \"attributes\": {\n    \"adipisicingaee\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  },\n  \"attributesForTypePublicId\": {\n    \"amet_7\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/complexRelations/:complexRelationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"complexRelations",
												":complexRelationId"
											],
											"variable": [
												{
													"key": "complexRelationId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"JdbcDriverFile\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"type\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"RelationTrace\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"publicId\": \"<string>\",\n    \"symbolData\": {\n      \"color\": \"<string>\",\n      \"symbolType\": \"ACRONYM_CODE\",\n      \"iconCode\": \"<string>\",\n      \"acronymCode\": \"<string>\"\n    },\n    \"attributeTypes\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"BooleanAttributeType\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"minimumOccurrences\": \"<integer>\",\n        \"maximumOccurrences\": \"<integer>\",\n        \"readOnly\": \"<boolean>\",\n        \"attributeType\": {\n          \"attributeTypeDiscriminator\": \"<string>\",\n          \"publicId\": \"<string>\",\n          \"description\": \"<string>\",\n          \"name\": \"<string>\",\n          \"resourceType\": \"Domain\",\n          \"createdBy\": \"<uuid>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"id\": \"<uuid>\"\n        }\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"RelationType\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"minimumOccurrences\": \"<integer>\",\n        \"maximumOccurrences\": \"<integer>\",\n        \"readOnly\": \"<boolean>\",\n        \"attributeType\": {\n          \"attributeTypeDiscriminator\": \"<string>\",\n          \"publicId\": \"<string>\",\n          \"description\": \"<string>\",\n          \"name\": \"<string>\",\n          \"resourceType\": \"AssignedCharacteristicType\",\n          \"createdBy\": \"<uuid>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"id\": \"<uuid>\"\n        }\n      }\n    ],\n    \"legTypes\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ArticulationRule\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"minimumOccurrences\": \"<integer>\",\n        \"maximumOccurrences\": \"<integer>\",\n        \"assetType\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Comment\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"role\": \"<string>\",\n        \"coRole\": \"<string>\",\n        \"relationTypeId\": \"<uuid>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Role\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"minimumOccurrences\": \"<integer>\",\n        \"maximumOccurrences\": \"<integer>\",\n        \"assetType\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Context\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"role\": \"<string>\",\n        \"coRole\": \"<string>\",\n        \"relationTypeId\": \"<uuid>\"\n      }\n    ]\n  },\n  \"legs\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"PhoneNumber\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"assetType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"StringAttribute\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"asset\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Classification\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"assetReference\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"JdbcDriver\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\",\n        \"displayName\": \"<string>\"\n      },\n      \"role\": \"<string>\",\n      \"coRole\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Domain\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"assetType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"MultiValueListAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"asset\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ClassificationMatch\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"assetReference\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ValidationRule\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\",\n        \"displayName\": \"<string>\"\n      },\n      \"role\": \"<string>\",\n      \"coRole\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"attributeDiscriminator\": \"<string>\",\n      \"asset\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Role\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"value\": {},\n      \"type\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"DataQualityMetric\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"resourceType\": \"ClassificationMatch\",\n      \"createdBy\": \"<uuid>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"id\": \"<uuid>\"\n    },\n    {\n      \"attributeDiscriminator\": \"<string>\",\n      \"asset\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ScriptAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"value\": {},\n      \"type\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"JdbcDriver\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"resourceType\": \"AdvancedDataType\",\n      \"createdBy\": \"<uuid>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"id\": \"<uuid>\"\n    }\n  ]\n}"
								},
								{
									"name": "Bad Request - Request data is malformed or illegal. The request body will contain additional information.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"legs\": [\n    {\n      \"assetId\": \"<uuid>\",\n      \"legTypeId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"relationTypePublicId\": \"<string>\"\n    },\n    {\n      \"assetId\": \"<uuid>\",\n      \"legTypeId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"relationTypePublicId\": \"<string>\"\n    }\n  ],\n  \"relations\": {\n    \"ut_b07\": [\n      {\n        \"id\": \"<uuid>\"\n      },\n      {\n        \"id\": \"<uuid>\"\n      }\n    ]\n  },\n  \"attributes\": {\n    \"adipisicingaee\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  },\n  \"attributesForTypePublicId\": {\n    \"amet_7\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/complexRelations/:complexRelationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"complexRelations",
												":complexRelationId"
											],
											"variable": [
												{
													"key": "complexRelationId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized - Authentication has failed or has not been provided.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"legs\": [\n    {\n      \"assetId\": \"<uuid>\",\n      \"legTypeId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"relationTypePublicId\": \"<string>\"\n    },\n    {\n      \"assetId\": \"<uuid>\",\n      \"legTypeId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"relationTypePublicId\": \"<string>\"\n    }\n  ],\n  \"relations\": {\n    \"ut_b07\": [\n      {\n        \"id\": \"<uuid>\"\n      },\n      {\n        \"id\": \"<uuid>\"\n      }\n    ]\n  },\n  \"attributes\": {\n    \"adipisicingaee\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  },\n  \"attributesForTypePublicId\": {\n    \"amet_7\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/complexRelations/:complexRelationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"complexRelations",
												":complexRelationId"
											],
											"variable": [
												{
													"key": "complexRelationId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "License Problem - There was a problem related to the license.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"legs\": [\n    {\n      \"assetId\": \"<uuid>\",\n      \"legTypeId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"relationTypePublicId\": \"<string>\"\n    },\n    {\n      \"assetId\": \"<uuid>\",\n      \"legTypeId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"relationTypePublicId\": \"<string>\"\n    }\n  ],\n  \"relations\": {\n    \"ut_b07\": [\n      {\n        \"id\": \"<uuid>\"\n      },\n      {\n        \"id\": \"<uuid>\"\n      }\n    ]\n  },\n  \"attributes\": {\n    \"adipisicingaee\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  },\n  \"attributesForTypePublicId\": {\n    \"amet_7\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/complexRelations/:complexRelationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"complexRelations",
												":complexRelationId"
											],
											"variable": [
												{
													"key": "complexRelationId"
												}
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden - Insufficient permissions to perform the requested operation.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"legs\": [\n    {\n      \"assetId\": \"<uuid>\",\n      \"legTypeId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"relationTypePublicId\": \"<string>\"\n    },\n    {\n      \"assetId\": \"<uuid>\",\n      \"legTypeId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"relationTypePublicId\": \"<string>\"\n    }\n  ],\n  \"relations\": {\n    \"ut_b07\": [\n      {\n        \"id\": \"<uuid>\"\n      },\n      {\n        \"id\": \"<uuid>\"\n      }\n    ]\n  },\n  \"attributes\": {\n    \"adipisicingaee\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  },\n  \"attributesForTypePublicId\": {\n    \"amet_7\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/complexRelations/:complexRelationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"complexRelations",
												":complexRelationId"
											],
											"variable": [
												{
													"key": "complexRelationId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"legs\": [\n    {\n      \"assetId\": \"<uuid>\",\n      \"legTypeId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"relationTypePublicId\": \"<string>\"\n    },\n    {\n      \"assetId\": \"<uuid>\",\n      \"legTypeId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"relationTypePublicId\": \"<string>\"\n    }\n  ],\n  \"relations\": {\n    \"ut_b07\": [\n      {\n        \"id\": \"<uuid>\"\n      },\n      {\n        \"id\": \"<uuid>\"\n      }\n    ]\n  },\n  \"attributes\": {\n    \"adipisicingaee\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  },\n  \"attributesForTypePublicId\": {\n    \"amet_7\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/complexRelations/:complexRelationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"complexRelations",
												":complexRelationId"
											],
											"variable": [
												{
													"key": "complexRelationId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"legs\": [\n    {\n      \"assetId\": \"<uuid>\",\n      \"legTypeId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"relationTypePublicId\": \"<string>\"\n    },\n    {\n      \"assetId\": \"<uuid>\",\n      \"legTypeId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"relationTypePublicId\": \"<string>\"\n    }\n  ],\n  \"relations\": {\n    \"ut_b07\": [\n      {\n        \"id\": \"<uuid>\"\n      },\n      {\n        \"id\": \"<uuid>\"\n      }\n    ]\n  },\n  \"attributes\": {\n    \"adipisicingaee\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  },\n  \"attributesForTypePublicId\": {\n    \"amet_7\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/complexRelations/:complexRelationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"complexRelations",
												":complexRelationId"
											],
											"variable": [
												{
													"key": "complexRelationId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "export",
					"item": [
						{
							"name": "csv-job",
							"item": [
								{
									"name": "Export complex relations of the given type to CSV.",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"complexRelationTypeId\": \"<uuid>\",\n  \"domainId\": \"<uuid>\",\n  \"storeAsAttachment\": \"<boolean>\",\n  \"fileName\": \"<string>\",\n  \"includeHeaderRow\": \"<boolean>\",\n  \"supportRoundtrip\": \"<boolean>\",\n  \"removeFormatting\": \"<boolean>\",\n  \"separator\": \"<string>\",\n  \"quote\": \"<string>\",\n  \"escape\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/complexRelations/export/csv-job",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"complexRelations",
												"export",
												"csv-job"
											]
										},
										"description": "Export complex relations of the given type to CSV."
									},
									"response": [
										{
											"name": "default response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"complexRelationTypeId\": \"<uuid>\",\n  \"domainId\": \"<uuid>\",\n  \"storeAsAttachment\": \"<boolean>\",\n  \"fileName\": \"<string>\",\n  \"includeHeaderRow\": \"<boolean>\",\n  \"supportRoundtrip\": \"<boolean>\",\n  \"removeFormatting\": \"<boolean>\",\n  \"separator\": \"<string>\",\n  \"quote\": \"<string>\",\n  \"escape\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/complexRelations/export/csv-job",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"complexRelations",
														"export",
														"csv-job"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Website\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"userId\": \"<uuid>\",\n  \"visibility\": \"<integer>\",\n  \"progressPercentage\": \"<double>\",\n  \"cancelable\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"state\": \"CANCELING\",\n  \"result\": \"NOT_SET\",\n  \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "csv",
							"item": [
								{
									"name": "Export all complex relations of the given type to CSV as a String.",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"complexRelationTypeId\": \"<uuid>\",\n  \"domainId\": \"<uuid>\",\n  \"storeAsAttachment\": \"<boolean>\",\n  \"fileName\": \"<string>\",\n  \"includeHeaderRow\": \"<boolean>\",\n  \"supportRoundtrip\": \"<boolean>\",\n  \"removeFormatting\": \"<boolean>\",\n  \"separator\": \"<string>\",\n  \"quote\": \"<string>\",\n  \"escape\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/complexRelations/export/csv",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"complexRelations",
												"export",
												"csv"
											]
										},
										"description": "Export all complex relations of the given type to CSV as a String."
									},
									"response": [
										{
											"name": "default response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"complexRelationTypeId\": \"<uuid>\",\n  \"domainId\": \"<uuid>\",\n  \"storeAsAttachment\": \"<boolean>\",\n  \"fileName\": \"<string>\",\n  \"includeHeaderRow\": \"<boolean>\",\n  \"supportRoundtrip\": \"<boolean>\",\n  \"removeFormatting\": \"<boolean>\",\n  \"separator\": \"<string>\",\n  \"quote\": \"<string>\",\n  \"escape\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/complexRelations/export/csv",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"complexRelations",
														"export",
														"csv"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "<string>"
										}
									]
								}
							]
						},
						{
							"name": "csv-file",
							"item": [
								{
									"name": "Export all complex relations of the given type to a CSV file.",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"complexRelationTypeId\": \"<uuid>\",\n  \"domainId\": \"<uuid>\",\n  \"storeAsAttachment\": \"<boolean>\",\n  \"fileName\": \"<string>\",\n  \"includeHeaderRow\": \"<boolean>\",\n  \"supportRoundtrip\": \"<boolean>\",\n  \"removeFormatting\": \"<boolean>\",\n  \"separator\": \"<string>\",\n  \"quote\": \"<string>\",\n  \"escape\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/complexRelations/export/csv-file",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"complexRelations",
												"export",
												"csv-file"
											]
										},
										"description": "Export all complex relations of the given type to a CSV file."
									},
									"response": [
										{
											"name": "default response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"complexRelationTypeId\": \"<uuid>\",\n  \"domainId\": \"<uuid>\",\n  \"storeAsAttachment\": \"<boolean>\",\n  \"fileName\": \"<string>\",\n  \"includeHeaderRow\": \"<boolean>\",\n  \"supportRoundtrip\": \"<boolean>\",\n  \"removeFormatting\": \"<boolean>\",\n  \"separator\": \"<string>\",\n  \"quote\": \"<string>\",\n  \"escape\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/complexRelations/export/csv-file",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"complexRelations",
														"export",
														"csv-file"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"contentType\": \"<string>\",\n  \"size\": \"<long>\",\n  \"extension\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "excel-job",
							"item": [
								{
									"name": "Export complex relations of the given type to Excel.",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"complexRelationTypeId\": \"<uuid>\",\n  \"domainId\": \"<uuid>\",\n  \"storeAsAttachment\": \"<boolean>\",\n  \"fileName\": \"<string>\",\n  \"includeHeaderRow\": \"<boolean>\",\n  \"supportRoundtrip\": \"<boolean>\",\n  \"removeFormatting\": \"<boolean>\",\n  \"sheetName\": \"<string>\",\n  \"xlsx\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/complexRelations/export/excel-job",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"complexRelations",
												"export",
												"excel-job"
											]
										},
										"description": "Export complex relations of the given type to Excel."
									},
									"response": [
										{
											"name": "default response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"complexRelationTypeId\": \"<uuid>\",\n  \"domainId\": \"<uuid>\",\n  \"storeAsAttachment\": \"<boolean>\",\n  \"fileName\": \"<string>\",\n  \"includeHeaderRow\": \"<boolean>\",\n  \"supportRoundtrip\": \"<boolean>\",\n  \"removeFormatting\": \"<boolean>\",\n  \"sheetName\": \"<string>\",\n  \"xlsx\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/complexRelations/export/excel-job",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"complexRelations",
														"export",
														"excel-job"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Website\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"userId\": \"<uuid>\",\n  \"visibility\": \"<integer>\",\n  \"progressPercentage\": \"<double>\",\n  \"cancelable\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"state\": \"CANCELING\",\n  \"result\": \"NOT_SET\",\n  \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "excel-file",
							"item": [
								{
									"name": "Export all complex relations of the given type to an Excel file.",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"complexRelationTypeId\": \"<uuid>\",\n  \"domainId\": \"<uuid>\",\n  \"storeAsAttachment\": \"<boolean>\",\n  \"fileName\": \"<string>\",\n  \"includeHeaderRow\": \"<boolean>\",\n  \"supportRoundtrip\": \"<boolean>\",\n  \"removeFormatting\": \"<boolean>\",\n  \"sheetName\": \"<string>\",\n  \"xlsx\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/complexRelations/export/excel-file",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"complexRelations",
												"export",
												"excel-file"
											]
										},
										"description": "Export all complex relations of the given type to an Excel file."
									},
									"response": [
										{
											"name": "default response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"complexRelationTypeId\": \"<uuid>\",\n  \"domainId\": \"<uuid>\",\n  \"storeAsAttachment\": \"<boolean>\",\n  \"fileName\": \"<string>\",\n  \"includeHeaderRow\": \"<boolean>\",\n  \"supportRoundtrip\": \"<boolean>\",\n  \"removeFormatting\": \"<boolean>\",\n  \"sheetName\": \"<string>\",\n  \"xlsx\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/complexRelations/export/excel-file",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"complexRelations",
														"export",
														"excel-file"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"contentType\": \"<string>\",\n  \"size\": \"<long>\",\n  \"extension\": \"<string>\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Returns complex relations matching the given search criteria.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/complexRelations?offset=0&limit=0&countLimit=-1&cursor=<string>&assetId=<uuid>&typeId=<uuid>&typePublicIds=<string>&typePublicIds=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"complexRelations"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>. Cursor should be preferred over offset for better performance and stable results. It is forbidden to use both in the same request."
								},
								{
									"key": "limit",
									"value": "0",
									"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
								},
								{
									"key": "countLimit",
									"value": "-1",
									"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped. For cursor pagination this parameter is ignored and count is skipped."
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for the current page of results. To retrieve the first page with cursor pagination you need to pass this parameter with an empty value (must be non-null). For the next pages, the value must be taken from the response (<code>nextCursor</code> property)."
								},
								{
									"key": "assetId",
									"value": "<uuid>",
									"description": "The ID of the asset for which complex relations should be found."
								},
								{
									"key": "typeId",
									"value": "<uuid>",
									"description": "The ID of the type of complex relations to search for.  Deprecated in favour of 'typePublicIds'."
								},
								{
									"key": "typePublicIds",
									"value": "<string>",
									"description": "The list of Public ID of the type of complex relations to search for."
								},
								{
									"key": "typePublicIds",
									"value": "<string>",
									"description": "The list of Public ID of the type of complex relations to search for."
								}
							]
						},
						"description": "Returns complex relations matching the given search criteria. Only parameters that are specified in this request and have not <code>null</code> values are used for filtering.  All other parameters are ignored.  The returned complex relations satisfy all constraints that are specified in this search criteria.  By default a result containing 1000 complex relations is returned."
					},
					"response": [
						{
							"name": "OK - The request has succeeded.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/complexRelations?offset=0&limit=0&countLimit=-1&cursor=<string>&assetId=<uuid>&typeId=<uuid>&typePublicIds=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"complexRelations"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>. Cursor should be preferred over offset for better performance and stable results. It is forbidden to use both in the same request."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped. For cursor pagination this parameter is ignored and count is skipped."
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Cursor for the current page of results. To retrieve the first page with cursor pagination you need to pass this parameter with an empty value (must be non-null). For the next pages, the value must be taken from the response (<code>nextCursor</code> property)."
										},
										{
											"key": "assetId",
											"value": "<uuid>",
											"description": "The ID of the asset for which complex relations should be found."
										},
										{
											"key": "typeId",
											"value": "<uuid>",
											"description": "The ID of the type of complex relations to search for.  Deprecated in favour of 'typePublicIds'."
										},
										{
											"key": "typePublicIds",
											"value": "<string>",
											"description": "The list of Public ID of the type of complex relations to search for."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": \"<long>\",\n  \"offset\": \"<long>\",\n  \"limit\": \"<long>\",\n  \"results\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"MultiValueListAttributeType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"type\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ClassificationMatch\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"publicId\": \"<string>\",\n        \"symbolData\": {\n          \"color\": \"<string>\",\n          \"symbolType\": \"ACRONYM_CODE\",\n          \"iconCode\": \"<string>\",\n          \"acronymCode\": \"<string>\"\n        },\n        \"attributeTypes\": [\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"CsvIngestionProperties\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"minimumOccurrences\": \"<integer>\",\n            \"maximumOccurrences\": \"<integer>\",\n            \"readOnly\": \"<boolean>\",\n            \"attributeType\": {\n              \"attributeTypeDiscriminator\": \"<string>\",\n              \"publicId\": \"<string>\",\n              \"description\": \"<string>\",\n              \"name\": \"<string>\",\n              \"resourceType\": \"Attachment\",\n              \"createdBy\": \"<uuid>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"id\": \"<uuid>\"\n            }\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"Activity\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"minimumOccurrences\": \"<integer>\",\n            \"maximumOccurrences\": \"<integer>\",\n            \"readOnly\": \"<boolean>\",\n            \"attributeType\": {\n              \"attributeTypeDiscriminator\": \"<string>\",\n              \"publicId\": \"<string>\",\n              \"description\": \"<string>\",\n              \"name\": \"<string>\",\n              \"resourceType\": \"Assignment\",\n              \"createdBy\": \"<uuid>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"id\": \"<uuid>\"\n            }\n          }\n        ],\n        \"legTypes\": [\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"Job\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"minimumOccurrences\": \"<integer>\",\n            \"maximumOccurrences\": \"<integer>\",\n            \"assetType\": {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"ArticulationRule\",\n              \"resourceDiscriminator\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"role\": \"<string>\",\n            \"coRole\": \"<string>\",\n            \"relationTypeId\": \"<uuid>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"ViewSharingRule\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"minimumOccurrences\": \"<integer>\",\n            \"maximumOccurrences\": \"<integer>\",\n            \"assetType\": {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"Context\",\n              \"resourceDiscriminator\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"role\": \"<string>\",\n            \"coRole\": \"<string>\",\n            \"relationTypeId\": \"<uuid>\"\n          }\n        ]\n      },\n      \"legs\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"DiagramPicture\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"assetType\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"UserGroup\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"asset\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"ArticulationRule\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"assetReference\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"AttributeType\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\",\n            \"displayName\": \"<string>\"\n          },\n          \"role\": \"<string>\",\n          \"coRole\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"DiagramPictureAssignmentRule\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"assetType\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"AssetType\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"asset\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"NumericAttributeType\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"assetReference\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"ViewSharingRule\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\",\n            \"displayName\": \"<string>\"\n          },\n          \"role\": \"<string>\",\n          \"coRole\": \"<string>\"\n        }\n      ],\n      \"attributes\": [\n        {\n          \"attributeDiscriminator\": \"<string>\",\n          \"asset\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"InstantMessagingAccount\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"value\": {},\n          \"type\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"ViewSharingRule\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"resourceType\": \"DomainType\",\n          \"createdBy\": \"<uuid>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"id\": \"<uuid>\"\n        },\n        {\n          \"attributeDiscriminator\": \"<string>\",\n          \"asset\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"ComplexRelationAttributeType\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"value\": {},\n          \"type\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"SingleValueListAttributeType\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"resourceType\": \"Comment\",\n          \"createdBy\": \"<uuid>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"id\": \"<uuid>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"StringAttributeType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"type\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"WorkflowTask\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"publicId\": \"<string>\",\n        \"symbolData\": {\n          \"color\": \"<string>\",\n          \"symbolType\": \"NONE\",\n          \"iconCode\": \"<string>\",\n          \"acronymCode\": \"<string>\"\n        },\n        \"attributeTypes\": [\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"NumericAttributeType\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"minimumOccurrences\": \"<integer>\",\n            \"maximumOccurrences\": \"<integer>\",\n            \"readOnly\": \"<boolean>\",\n            \"attributeType\": {\n              \"attributeTypeDiscriminator\": \"<string>\",\n              \"publicId\": \"<string>\",\n              \"description\": \"<string>\",\n              \"name\": \"<string>\",\n              \"resourceType\": \"Relation\",\n              \"createdBy\": \"<uuid>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"id\": \"<uuid>\"\n            }\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"RelationType\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"minimumOccurrences\": \"<integer>\",\n            \"maximumOccurrences\": \"<integer>\",\n            \"readOnly\": \"<boolean>\",\n            \"attributeType\": {\n              \"attributeTypeDiscriminator\": \"<string>\",\n              \"publicId\": \"<string>\",\n              \"description\": \"<string>\",\n              \"name\": \"<string>\",\n              \"resourceType\": \"Relation\",\n              \"createdBy\": \"<uuid>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"id\": \"<uuid>\"\n            }\n          }\n        ],\n        \"legTypes\": [\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"DateAttribute\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"minimumOccurrences\": \"<integer>\",\n            \"maximumOccurrences\": \"<integer>\",\n            \"assetType\": {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"ValidationRule\",\n              \"resourceDiscriminator\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"role\": \"<string>\",\n            \"coRole\": \"<string>\",\n            \"relationTypeId\": \"<uuid>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"RelationType\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"minimumOccurrences\": \"<integer>\",\n            \"maximumOccurrences\": \"<integer>\",\n            \"assetType\": {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"Website\",\n              \"resourceDiscriminator\": \"<string>\",\n              \"name\": \"<string>\"\n            },\n            \"role\": \"<string>\",\n            \"coRole\": \"<string>\",\n            \"relationTypeId\": \"<uuid>\"\n          }\n        ]\n      },\n      \"legs\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"DataQualityMetric\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"assetType\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"SingleValueListAttribute\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"asset\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"Activity\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"assetReference\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"ScriptAttributeType\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\",\n            \"displayName\": \"<string>\"\n          },\n          \"role\": \"<string>\",\n          \"coRole\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"AttributeType\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"assetType\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"DataQualityMetric\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"asset\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"JdbcDriver\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"assetReference\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"PhoneNumber\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\",\n            \"displayName\": \"<string>\"\n          },\n          \"role\": \"<string>\",\n          \"coRole\": \"<string>\"\n        }\n      ],\n      \"attributes\": [\n        {\n          \"attributeDiscriminator\": \"<string>\",\n          \"asset\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"Rating\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"value\": {},\n          \"type\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"Scope\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"resourceType\": \"BaseDataType\",\n          \"createdBy\": \"<uuid>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"id\": \"<uuid>\"\n        },\n        {\n          \"attributeDiscriminator\": \"<string>\",\n          \"asset\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"StringAttributeType\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"value\": {},\n          \"type\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"UserGroup\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"resourceType\": \"StringAttributeType\",\n          \"createdBy\": \"<uuid>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"id\": \"<uuid>\"\n        }\n      ]\n    }\n  ],\n  \"nextCursor\": \"<string>\"\n}"
						},
						{
							"name": "Unauthorized - Authentication has failed or has not been provided.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/complexRelations?offset=0&limit=0&countLimit=-1&cursor=<string>&assetId=<uuid>&typeId=<uuid>&typePublicIds=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"complexRelations"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>. Cursor should be preferred over offset for better performance and stable results. It is forbidden to use both in the same request."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped. For cursor pagination this parameter is ignored and count is skipped."
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Cursor for the current page of results. To retrieve the first page with cursor pagination you need to pass this parameter with an empty value (must be non-null). For the next pages, the value must be taken from the response (<code>nextCursor</code> property)."
										},
										{
											"key": "assetId",
											"value": "<uuid>",
											"description": "The ID of the asset for which complex relations should be found."
										},
										{
											"key": "typeId",
											"value": "<uuid>",
											"description": "The ID of the type of complex relations to search for.  Deprecated in favour of 'typePublicIds'."
										},
										{
											"key": "typePublicIds",
											"value": "<string>",
											"description": "The list of Public ID of the type of complex relations to search for."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "License Problem - There was a problem related to the license.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/complexRelations?offset=0&limit=0&countLimit=-1&cursor=<string>&assetId=<uuid>&typeId=<uuid>&typePublicIds=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"complexRelations"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>. Cursor should be preferred over offset for better performance and stable results. It is forbidden to use both in the same request."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped. For cursor pagination this parameter is ignored and count is skipped."
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Cursor for the current page of results. To retrieve the first page with cursor pagination you need to pass this parameter with an empty value (must be non-null). For the next pages, the value must be taken from the response (<code>nextCursor</code> property)."
										},
										{
											"key": "assetId",
											"value": "<uuid>",
											"description": "The ID of the asset for which complex relations should be found."
										},
										{
											"key": "typeId",
											"value": "<uuid>",
											"description": "The ID of the type of complex relations to search for.  Deprecated in favour of 'typePublicIds'."
										},
										{
											"key": "typePublicIds",
											"value": "<string>",
											"description": "The list of Public ID of the type of complex relations to search for."
										}
									]
								}
							},
							"status": "Payment Required",
							"code": 402,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/complexRelations?offset=0&limit=0&countLimit=-1&cursor=<string>&assetId=<uuid>&typeId=<uuid>&typePublicIds=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"complexRelations"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>. Cursor should be preferred over offset for better performance and stable results. It is forbidden to use both in the same request."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped. For cursor pagination this parameter is ignored and count is skipped."
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Cursor for the current page of results. To retrieve the first page with cursor pagination you need to pass this parameter with an empty value (must be non-null). For the next pages, the value must be taken from the response (<code>nextCursor</code> property)."
										},
										{
											"key": "assetId",
											"value": "<uuid>",
											"description": "The ID of the asset for which complex relations should be found."
										},
										{
											"key": "typeId",
											"value": "<uuid>",
											"description": "The ID of the type of complex relations to search for.  Deprecated in favour of 'typePublicIds'."
										},
										{
											"key": "typePublicIds",
											"value": "<string>",
											"description": "The list of Public ID of the type of complex relations to search for."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/complexRelations?offset=0&limit=0&countLimit=-1&cursor=<string>&assetId=<uuid>&typeId=<uuid>&typePublicIds=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"complexRelations"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>. Cursor should be preferred over offset for better performance and stable results. It is forbidden to use both in the same request."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped. For cursor pagination this parameter is ignored and count is skipped."
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Cursor for the current page of results. To retrieve the first page with cursor pagination you need to pass this parameter with an empty value (must be non-null). For the next pages, the value must be taken from the response (<code>nextCursor</code> property)."
										},
										{
											"key": "assetId",
											"value": "<uuid>",
											"description": "The ID of the asset for which complex relations should be found."
										},
										{
											"key": "typeId",
											"value": "<uuid>",
											"description": "The ID of the type of complex relations to search for.  Deprecated in favour of 'typePublicIds'."
										},
										{
											"key": "typePublicIds",
											"value": "<string>",
											"description": "The list of Public ID of the type of complex relations to search for."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Adds new complex relation.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"<uuid>\",\n  \"complexRelationTypeId\": \"<uuid>\",\n  \"complexRelationTypePublicId\": \"<string>\",\n  \"legs\": [\n    {\n      \"assetId\": \"<uuid>\",\n      \"legTypeId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"relationTypePublicId\": \"<string>\"\n    },\n    {\n      \"assetId\": \"<uuid>\",\n      \"legTypeId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"relationTypePublicId\": \"<string>\"\n    }\n  ],\n  \"attributes\": {\n    \"culpa_f\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ],\n    \"anim_50\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  },\n  \"attributesForTypePublicId\": {\n    \"adipisicing_2ea\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ],\n    \"incididunt_065\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ],\n    \"commodo_34a\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/complexRelations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"complexRelations"
							]
						},
						"description": "Adds new complex relation."
					},
					"response": [
						{
							"name": "Created - The request has been fulfilled and resulted in a new resource being created.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<uuid>\",\n  \"complexRelationTypeId\": \"<uuid>\",\n  \"complexRelationTypePublicId\": \"<string>\",\n  \"legs\": [\n    {\n      \"assetId\": \"<uuid>\",\n      \"legTypeId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"relationTypePublicId\": \"<string>\"\n    },\n    {\n      \"assetId\": \"<uuid>\",\n      \"legTypeId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"relationTypePublicId\": \"<string>\"\n    }\n  ],\n  \"attributes\": {\n    \"culpa_f\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ],\n    \"anim_50\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  },\n  \"attributesForTypePublicId\": {\n    \"adipisicing_2ea\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ],\n    \"incididunt_065\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ],\n    \"commodo_34a\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/complexRelations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"complexRelations"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"JdbcDriverFile\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"type\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"RelationTrace\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"publicId\": \"<string>\",\n    \"symbolData\": {\n      \"color\": \"<string>\",\n      \"symbolType\": \"ACRONYM_CODE\",\n      \"iconCode\": \"<string>\",\n      \"acronymCode\": \"<string>\"\n    },\n    \"attributeTypes\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"BooleanAttributeType\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"minimumOccurrences\": \"<integer>\",\n        \"maximumOccurrences\": \"<integer>\",\n        \"readOnly\": \"<boolean>\",\n        \"attributeType\": {\n          \"attributeTypeDiscriminator\": \"<string>\",\n          \"publicId\": \"<string>\",\n          \"description\": \"<string>\",\n          \"name\": \"<string>\",\n          \"resourceType\": \"Domain\",\n          \"createdBy\": \"<uuid>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"id\": \"<uuid>\"\n        }\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"RelationType\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"minimumOccurrences\": \"<integer>\",\n        \"maximumOccurrences\": \"<integer>\",\n        \"readOnly\": \"<boolean>\",\n        \"attributeType\": {\n          \"attributeTypeDiscriminator\": \"<string>\",\n          \"publicId\": \"<string>\",\n          \"description\": \"<string>\",\n          \"name\": \"<string>\",\n          \"resourceType\": \"AssignedCharacteristicType\",\n          \"createdBy\": \"<uuid>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"id\": \"<uuid>\"\n        }\n      }\n    ],\n    \"legTypes\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ArticulationRule\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"minimumOccurrences\": \"<integer>\",\n        \"maximumOccurrences\": \"<integer>\",\n        \"assetType\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Comment\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"role\": \"<string>\",\n        \"coRole\": \"<string>\",\n        \"relationTypeId\": \"<uuid>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Role\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"minimumOccurrences\": \"<integer>\",\n        \"maximumOccurrences\": \"<integer>\",\n        \"assetType\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Context\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"role\": \"<string>\",\n        \"coRole\": \"<string>\",\n        \"relationTypeId\": \"<uuid>\"\n      }\n    ]\n  },\n  \"legs\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"PhoneNumber\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"assetType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"StringAttribute\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"asset\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Classification\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"assetReference\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"JdbcDriver\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\",\n        \"displayName\": \"<string>\"\n      },\n      \"role\": \"<string>\",\n      \"coRole\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Domain\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"assetType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"MultiValueListAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"asset\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ClassificationMatch\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"assetReference\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ValidationRule\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\",\n        \"displayName\": \"<string>\"\n      },\n      \"role\": \"<string>\",\n      \"coRole\": \"<string>\"\n    }\n  ],\n  \"attributes\": [\n    {\n      \"attributeDiscriminator\": \"<string>\",\n      \"asset\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Role\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"value\": {},\n      \"type\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"DataQualityMetric\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"resourceType\": \"ClassificationMatch\",\n      \"createdBy\": \"<uuid>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"id\": \"<uuid>\"\n    },\n    {\n      \"attributeDiscriminator\": \"<string>\",\n      \"asset\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ScriptAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"value\": {},\n      \"type\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"JdbcDriver\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"resourceType\": \"AdvancedDataType\",\n      \"createdBy\": \"<uuid>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"id\": \"<uuid>\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request - Request data is malformed or illegal. The request body will contain additional information.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<uuid>\",\n  \"complexRelationTypeId\": \"<uuid>\",\n  \"complexRelationTypePublicId\": \"<string>\",\n  \"legs\": [\n    {\n      \"assetId\": \"<uuid>\",\n      \"legTypeId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"relationTypePublicId\": \"<string>\"\n    },\n    {\n      \"assetId\": \"<uuid>\",\n      \"legTypeId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"relationTypePublicId\": \"<string>\"\n    }\n  ],\n  \"attributes\": {\n    \"culpa_f\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ],\n    \"anim_50\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  },\n  \"attributesForTypePublicId\": {\n    \"adipisicing_2ea\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ],\n    \"incididunt_065\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ],\n    \"commodo_34a\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/complexRelations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"complexRelations"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized - Authentication has failed or has not been provided.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<uuid>\",\n  \"complexRelationTypeId\": \"<uuid>\",\n  \"complexRelationTypePublicId\": \"<string>\",\n  \"legs\": [\n    {\n      \"assetId\": \"<uuid>\",\n      \"legTypeId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"relationTypePublicId\": \"<string>\"\n    },\n    {\n      \"assetId\": \"<uuid>\",\n      \"legTypeId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"relationTypePublicId\": \"<string>\"\n    }\n  ],\n  \"attributes\": {\n    \"culpa_f\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ],\n    \"anim_50\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  },\n  \"attributesForTypePublicId\": {\n    \"adipisicing_2ea\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ],\n    \"incididunt_065\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ],\n    \"commodo_34a\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/complexRelations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"complexRelations"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "License Problem - There was a problem related to the license.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<uuid>\",\n  \"complexRelationTypeId\": \"<uuid>\",\n  \"complexRelationTypePublicId\": \"<string>\",\n  \"legs\": [\n    {\n      \"assetId\": \"<uuid>\",\n      \"legTypeId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"relationTypePublicId\": \"<string>\"\n    },\n    {\n      \"assetId\": \"<uuid>\",\n      \"legTypeId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"relationTypePublicId\": \"<string>\"\n    }\n  ],\n  \"attributes\": {\n    \"culpa_f\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ],\n    \"anim_50\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  },\n  \"attributesForTypePublicId\": {\n    \"adipisicing_2ea\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ],\n    \"incididunt_065\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ],\n    \"commodo_34a\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/complexRelations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"complexRelations"
									]
								}
							},
							"status": "Payment Required",
							"code": 402,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden - Insufficient permissions to perform the requested operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<uuid>\",\n  \"complexRelationTypeId\": \"<uuid>\",\n  \"complexRelationTypePublicId\": \"<string>\",\n  \"legs\": [\n    {\n      \"assetId\": \"<uuid>\",\n      \"legTypeId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"relationTypePublicId\": \"<string>\"\n    },\n    {\n      \"assetId\": \"<uuid>\",\n      \"legTypeId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"relationTypePublicId\": \"<string>\"\n    }\n  ],\n  \"attributes\": {\n    \"culpa_f\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ],\n    \"anim_50\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  },\n  \"attributesForTypePublicId\": {\n    \"adipisicing_2ea\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ],\n    \"incididunt_065\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ],\n    \"commodo_34a\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/complexRelations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"complexRelations"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<uuid>\",\n  \"complexRelationTypeId\": \"<uuid>\",\n  \"complexRelationTypePublicId\": \"<string>\",\n  \"legs\": [\n    {\n      \"assetId\": \"<uuid>\",\n      \"legTypeId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"relationTypePublicId\": \"<string>\"\n    },\n    {\n      \"assetId\": \"<uuid>\",\n      \"legTypeId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"relationTypePublicId\": \"<string>\"\n    }\n  ],\n  \"attributes\": {\n    \"culpa_f\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ],\n    \"anim_50\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  },\n  \"attributesForTypePublicId\": {\n    \"adipisicing_2ea\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ],\n    \"incididunt_065\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ],\n    \"commodo_34a\": [\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      {\n        \"value\": \"<string>\",\n        \"values\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/complexRelations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"complexRelations"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "domains",
			"item": [
				{
					"name": "bulk",
					"item": [
						{
							"name": "Add multiple domains",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"communityId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"communityId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/domains/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										"bulk"
									]
								},
								"description": "Adds multiple domains using the given parameters"
							},
							"response": [
								{
									"name": "Created - The request has been fulfilled and resulted in a new resource being created.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"communityId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"communityId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/domains/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												"bulk"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"community\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DataQualityMetric\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Attribute\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"type\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DateAttributeType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"excludedFromAutoHyperlinking\": \"<boolean>\"\n  },\n  {\n    \"community\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Address\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"AssetType\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"type\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ViewSharingRule\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"excludedFromAutoHyperlinking\": \"<boolean>\"\n  }\n]"
								},
								{
									"name": "Bad Request - Request data is malformed or illegal. The request body will contain additional information.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"communityId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"communityId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/domains/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												"bulk"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized - Authentication has failed or has not been provided.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"communityId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"communityId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/domains/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												"bulk"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "License Problem - There was a problem related to the license.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"communityId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"communityId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/domains/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												"bulk"
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden - Insufficient permissions to perform the requested operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"communityId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"communityId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/domains/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												"bulk"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"communityId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"communityId\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"typeId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/domains/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												"bulk"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Remove multiple domains",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/domains/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										"bulk"
									]
								},
								"description": "This endpoint will be removed in the future. Please use POST /domains/removalJobs."
							},
							"response": [
								{
									"name": "No Content - The server has fulfilled the request but does not need to return an entity-body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/domains/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												"bulk"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request - Request data is malformed or illegal. The request body will contain additional information.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/domains/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												"bulk"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized - Authentication has failed or has not been provided.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/domains/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												"bulk"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "License Problem - There was a problem related to the license.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/domains/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												"bulk"
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden - Insufficient permissions to perform the requested operation.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/domains/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												"bulk"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/domains/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												"bulk"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Change multiple domains",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"communityId\": \"<uuid>\",\n    \"typeId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"removeScopeOverlapOnMove\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"communityId\": \"<uuid>\",\n    \"typeId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"removeScopeOverlapOnMove\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/domains/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										"bulk"
									]
								},
								"description": "Changes multiple domains using the given parameters"
							},
							"response": [
								{
									"name": "OK - The request has succeeded.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"communityId\": \"<uuid>\",\n    \"typeId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"removeScopeOverlapOnMove\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"communityId\": \"<uuid>\",\n    \"typeId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"removeScopeOverlapOnMove\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/domains/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												"bulk"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"community\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DataQualityMetric\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Attribute\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"type\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DateAttributeType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"excludedFromAutoHyperlinking\": \"<boolean>\"\n  },\n  {\n    \"community\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Address\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"AssetType\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"type\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ViewSharingRule\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"excludedFromAutoHyperlinking\": \"<boolean>\"\n  }\n]"
								},
								{
									"name": "Bad Request - Request data is malformed or illegal. The request body will contain additional information.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"communityId\": \"<uuid>\",\n    \"typeId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"removeScopeOverlapOnMove\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"communityId\": \"<uuid>\",\n    \"typeId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"removeScopeOverlapOnMove\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/domains/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												"bulk"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized - Authentication has failed or has not been provided.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"communityId\": \"<uuid>\",\n    \"typeId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"removeScopeOverlapOnMove\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"communityId\": \"<uuid>\",\n    \"typeId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"removeScopeOverlapOnMove\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/domains/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												"bulk"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "License Problem - There was a problem related to the license.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"communityId\": \"<uuid>\",\n    \"typeId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"removeScopeOverlapOnMove\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"communityId\": \"<uuid>\",\n    \"typeId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"removeScopeOverlapOnMove\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/domains/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												"bulk"
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden - Insufficient permissions to perform the requested operation.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"communityId\": \"<uuid>\",\n    \"typeId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"removeScopeOverlapOnMove\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"communityId\": \"<uuid>\",\n    \"typeId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"removeScopeOverlapOnMove\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/domains/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												"bulk"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"communityId\": \"<uuid>\",\n    \"typeId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"removeScopeOverlapOnMove\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"communityId\": \"<uuid>\",\n    \"typeId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"removeScopeOverlapOnMove\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/domains/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												"bulk"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"communityId\": \"<uuid>\",\n    \"typeId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"removeScopeOverlapOnMove\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"communityId\": \"<uuid>\",\n    \"typeId\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"excludedFromAutoHyperlinking\": \"<boolean>\",\n    \"removeScopeOverlapOnMove\": \"<boolean>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/domains/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												"bulk"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "{domainId}",
					"item": [
						{
							"name": "breadcrumb",
							"item": [
								{
									"name": "Get domain breadcrumb",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/domains/:domainId/breadcrumb",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												":domainId",
												"breadcrumb"
											],
											"variable": [
												{
													"key": "domainId",
													"value": "<string>",
													"description": "(Required) The ID of the domain"
												}
											]
										},
										"description": "Returns the list of resources that lead to the domain identified by the given ID."
									},
									"response": [
										{
											"name": "OK - The request has succeeded.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/domains/:domainId/breadcrumb",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"domains",
														":domainId",
														"breadcrumb"
													],
													"variable": [
														{
															"key": "domainId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"DateAttributeType\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"StringAttributeType\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  }\n]"
										},
										{
											"name": "Unauthorized - Authentication has failed or has not been provided.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/domains/:domainId/breadcrumb",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"domains",
														":domainId",
														"breadcrumb"
													],
													"variable": [
														{
															"key": "domainId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "License Problem - There was a problem related to the license.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/domains/:domainId/breadcrumb",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"domains",
														":domainId",
														"breadcrumb"
													],
													"variable": [
														{
															"key": "domainId"
														}
													]
												}
											},
											"status": "Payment Required",
											"code": 402,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden - Insufficient permissions to perform the requested operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/domains/:domainId/breadcrumb",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"domains",
														":domainId",
														"breadcrumb"
													],
													"variable": [
														{
															"key": "domainId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/domains/:domainId/breadcrumb",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"domains",
														":domainId",
														"breadcrumb"
													],
													"variable": [
														{
															"key": "domainId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/domains/:domainId/breadcrumb",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"domains",
														":domainId",
														"breadcrumb"
													],
													"variable": [
														{
															"key": "domainId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get domain",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains/:domainId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":domainId"
									],
									"variable": [
										{
											"key": "domainId",
											"value": "<uuid>",
											"description": "(Required) the ID of the domain"
										}
									]
								},
								"description": "Returns the domain with the given ID"
							},
							"response": [
								{
									"name": "OK - The request has succeeded.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/domains/:domainId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												":domainId"
											],
											"variable": [
												{
													"key": "domainId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"community\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Email\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"AssetType\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"type\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"ComplexRelationLeg\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"excludedFromAutoHyperlinking\": \"<boolean>\"\n}"
								},
								{
									"name": "Unauthorized - Authentication has failed or has not been provided.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/domains/:domainId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												":domainId"
											],
											"variable": [
												{
													"key": "domainId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "License Problem - There was a problem related to the license.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/domains/:domainId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												":domainId"
											],
											"variable": [
												{
													"key": "domainId"
												}
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden - Insufficient permissions to perform the requested operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/domains/:domainId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												":domainId"
											],
											"variable": [
												{
													"key": "domainId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/domains/:domainId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												":domainId"
											],
											"variable": [
												{
													"key": "domainId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/domains/:domainId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												":domainId"
											],
											"variable": [
												{
													"key": "domainId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Remove domain",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/domains/:domainId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":domainId"
									],
									"variable": [
										{
											"key": "domainId",
											"value": "<uuid>",
											"description": "(Required) the ID of the domain to remove"
										}
									]
								},
								"description": "This endpoint will be removed in the future. Please use POST /domains/removalJobs."
							},
							"response": [
								{
									"name": "No Content - The server has fulfilled the request but does not need to return an entity-body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/domains/:domainId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												":domainId"
											],
											"variable": [
												{
													"key": "domainId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized - Authentication has failed or has not been provided.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/domains/:domainId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												":domainId"
											],
											"variable": [
												{
													"key": "domainId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "License Problem - There was a problem related to the license.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/domains/:domainId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												":domainId"
											],
											"variable": [
												{
													"key": "domainId"
												}
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden - Insufficient permissions to perform the requested operation.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/domains/:domainId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												":domainId"
											],
											"variable": [
												{
													"key": "domainId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/domains/:domainId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												":domainId"
											],
											"variable": [
												{
													"key": "domainId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/domains/:domainId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												":domainId"
											],
											"variable": [
												{
													"key": "domainId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Change domain",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"communityId\": \"<uuid>\",\n  \"typeId\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"excludedFromAutoHyperlinking\": \"<boolean>\",\n  \"removeScopeOverlapOnMove\": \"<boolean>\",\n  \"typePublicId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/domains/:domainId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":domainId"
									],
									"variable": [
										{
											"key": "domainId",
											"value": "<uuid>",
											"description": "(Required) the ID of the domain to be changed."
										}
									]
								},
								"description": "Changes the domain with the information that is present in the request. Only properties that are specified in this request and have not <code>null</code> values are updated. All other properties are ignored."
							},
							"response": [
								{
									"name": "OK - The request has succeeded.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"communityId\": \"<uuid>\",\n  \"typeId\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"excludedFromAutoHyperlinking\": \"<boolean>\",\n  \"removeScopeOverlapOnMove\": \"<boolean>\",\n  \"typePublicId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/domains/:domainId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												":domainId"
											],
											"variable": [
												{
													"key": "domainId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"community\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Email\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"AssetType\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"type\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"ComplexRelationLeg\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"excludedFromAutoHyperlinking\": \"<boolean>\"\n}"
								},
								{
									"name": "Bad Request - Request data is malformed or illegal. The request body will contain additional information.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"communityId\": \"<uuid>\",\n  \"typeId\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"excludedFromAutoHyperlinking\": \"<boolean>\",\n  \"removeScopeOverlapOnMove\": \"<boolean>\",\n  \"typePublicId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/domains/:domainId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												":domainId"
											],
											"variable": [
												{
													"key": "domainId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized - Authentication has failed or has not been provided.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"communityId\": \"<uuid>\",\n  \"typeId\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"excludedFromAutoHyperlinking\": \"<boolean>\",\n  \"removeScopeOverlapOnMove\": \"<boolean>\",\n  \"typePublicId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/domains/:domainId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												":domainId"
											],
											"variable": [
												{
													"key": "domainId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "License Problem - There was a problem related to the license.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"communityId\": \"<uuid>\",\n  \"typeId\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"excludedFromAutoHyperlinking\": \"<boolean>\",\n  \"removeScopeOverlapOnMove\": \"<boolean>\",\n  \"typePublicId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/domains/:domainId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												":domainId"
											],
											"variable": [
												{
													"key": "domainId"
												}
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden - Insufficient permissions to perform the requested operation.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"communityId\": \"<uuid>\",\n  \"typeId\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"excludedFromAutoHyperlinking\": \"<boolean>\",\n  \"removeScopeOverlapOnMove\": \"<boolean>\",\n  \"typePublicId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/domains/:domainId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												":domainId"
											],
											"variable": [
												{
													"key": "domainId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"communityId\": \"<uuid>\",\n  \"typeId\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"excludedFromAutoHyperlinking\": \"<boolean>\",\n  \"removeScopeOverlapOnMove\": \"<boolean>\",\n  \"typePublicId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/domains/:domainId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												":domainId"
											],
											"variable": [
												{
													"key": "domainId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"communityId\": \"<uuid>\",\n  \"typeId\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"excludedFromAutoHyperlinking\": \"<boolean>\",\n  \"removeScopeOverlapOnMove\": \"<boolean>\",\n  \"typePublicId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/domains/:domainId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												":domainId"
											],
											"variable": [
												{
													"key": "domainId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "removalJobs",
					"item": [
						{
							"name": "Remove multiple domains asynchronously",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/domains/removalJobs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										"removalJobs"
									]
								},
								"description": "Removes multiple domains with the given IDs in a job."
							},
							"response": [
								{
									"name": "OK - The request has succeeded.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/domains/removalJobs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												"removalJobs"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Website\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"userId\": \"<uuid>\",\n  \"visibility\": \"<integer>\",\n  \"progressPercentage\": \"<double>\",\n  \"cancelable\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"state\": \"CANCELING\",\n  \"result\": \"NOT_SET\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Bad Request - Request data is malformed or illegal. The request body will contain additional information.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/domains/removalJobs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												"removalJobs"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized - Authentication has failed or has not been provided.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/domains/removalJobs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												"removalJobs"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "License Problem - There was a problem related to the license.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/domains/removalJobs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												"removalJobs"
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden - Insufficient permissions to perform the requested operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/domains/removalJobs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												"removalJobs"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/domains/removalJobs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												"removalJobs"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Search domains",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/domains?offset=0&limit=0&countLimit=-1&cursor=<string>&name=<string>&nameMatchMode=ANYWHERE&excludeMeta=true&communityId=<uuid>&typeId=<uuid>&typePublicId=<string>&includeSubCommunities=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"domains"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>. Cursor should be preferred over offset for better performance and stable results. It is forbidden to use both in the same request."
								},
								{
									"key": "limit",
									"value": "0",
									"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
								},
								{
									"key": "countLimit",
									"value": "-1",
									"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped. For cursor pagination this parameter is ignored and count is skipped."
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for the current page of results. To retrieve the first page with cursor pagination you need to pass this parameter with an empty value (must be non-null). For the next pages, the value must be taken from the response (<code>nextCursor</code> property)."
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "The name of the domain to search for"
								},
								{
									"key": "nameMatchMode",
									"value": "ANYWHERE",
									"description": "The match mode used to compare <code>name</code>. If the match mode is <code>EXACT</code> the search is case-sensitive, otherwise the search is case-insensitive."
								},
								{
									"key": "excludeMeta",
									"value": "true",
									"description": "The exclude meta flag. If this is set to true then the meta domains will not be returned (meta domains are i.e. domains not created manually by the user)."
								},
								{
									"key": "communityId",
									"value": "<uuid>",
									"description": "The ID of the community to find the domains in"
								},
								{
									"key": "typeId",
									"value": "<uuid>",
									"description": "The ID of the domain type to search for. Returned domains are of this type"
								},
								{
									"key": "typePublicId",
									"value": "<string>",
									"description": "The public ID of the domain type to search for. Returned domains are of this type"
								},
								{
									"key": "includeSubCommunities",
									"value": "false",
									"description": "The include sub-communities flag. When set to true, sub-communities (of the community indicated via the <code>communityId</code> parameter) will be searched in."
								}
							]
						},
						"description": "Finds the domains that match the given search criteria. Only parameters that are specified in this request and have not <code>null</code> values are used for filtering. All other parameters are ignored. By default a result containing 1000 domains is returned."
					},
					"response": [
						{
							"name": "OK - The request has succeeded.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains?offset=0&limit=0&countLimit=-1&cursor=<string>&name=<string>&nameMatchMode=ANYWHERE&excludeMeta=true&communityId=<uuid>&typeId=<uuid>&typePublicId=<string>&includeSubCommunities=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>. Cursor should be preferred over offset for better performance and stable results. It is forbidden to use both in the same request."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped. For cursor pagination this parameter is ignored and count is skipped."
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Cursor for the current page of results. To retrieve the first page with cursor pagination you need to pass this parameter with an empty value (must be non-null). For the next pages, the value must be taken from the response (<code>nextCursor</code> property)."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "The name of the domain to search for"
										},
										{
											"key": "nameMatchMode",
											"value": "ANYWHERE",
											"description": "The match mode used to compare <code>name</code>. If the match mode is <code>EXACT</code> the search is case-sensitive, otherwise the search is case-insensitive."
										},
										{
											"key": "excludeMeta",
											"value": "true",
											"description": "The exclude meta flag. If this is set to true then the meta domains will not be returned (meta domains are i.e. domains not created manually by the user)."
										},
										{
											"key": "communityId",
											"value": "<uuid>",
											"description": "The ID of the community to find the domains in"
										},
										{
											"key": "typeId",
											"value": "<uuid>",
											"description": "The ID of the domain type to search for. Returned domains are of this type"
										},
										{
											"key": "typePublicId",
											"value": "<string>",
											"description": "The public ID of the domain type to search for. Returned domains are of this type"
										},
										{
											"key": "includeSubCommunities",
											"value": "false",
											"description": "The include sub-communities flag. When set to true, sub-communities (of the community indicated via the <code>communityId</code> parameter) will be searched in."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": \"<long>\",\n  \"offset\": \"<long>\",\n  \"limit\": \"<long>\",\n  \"results\": [\n    {\n      \"community\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"StringAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Website\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"type\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ActivityChange\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"excludedFromAutoHyperlinking\": \"<boolean>\"\n    },\n    {\n      \"community\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"NumericAttribute\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ArticulationRule\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"type\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"JdbcIngestionProperties\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"excludedFromAutoHyperlinking\": \"<boolean>\"\n    }\n  ]\n}"
						},
						{
							"name": "Unauthorized - Authentication has failed or has not been provided.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains?offset=0&limit=0&countLimit=-1&cursor=<string>&name=<string>&nameMatchMode=ANYWHERE&excludeMeta=true&communityId=<uuid>&typeId=<uuid>&typePublicId=<string>&includeSubCommunities=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>. Cursor should be preferred over offset for better performance and stable results. It is forbidden to use both in the same request."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped. For cursor pagination this parameter is ignored and count is skipped."
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Cursor for the current page of results. To retrieve the first page with cursor pagination you need to pass this parameter with an empty value (must be non-null). For the next pages, the value must be taken from the response (<code>nextCursor</code> property)."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "The name of the domain to search for"
										},
										{
											"key": "nameMatchMode",
											"value": "ANYWHERE",
											"description": "The match mode used to compare <code>name</code>. If the match mode is <code>EXACT</code> the search is case-sensitive, otherwise the search is case-insensitive."
										},
										{
											"key": "excludeMeta",
											"value": "true",
											"description": "The exclude meta flag. If this is set to true then the meta domains will not be returned (meta domains are i.e. domains not created manually by the user)."
										},
										{
											"key": "communityId",
											"value": "<uuid>",
											"description": "The ID of the community to find the domains in"
										},
										{
											"key": "typeId",
											"value": "<uuid>",
											"description": "The ID of the domain type to search for. Returned domains are of this type"
										},
										{
											"key": "typePublicId",
											"value": "<string>",
											"description": "The public ID of the domain type to search for. Returned domains are of this type"
										},
										{
											"key": "includeSubCommunities",
											"value": "false",
											"description": "The include sub-communities flag. When set to true, sub-communities (of the community indicated via the <code>communityId</code> parameter) will be searched in."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "License Problem - There was a problem related to the license.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains?offset=0&limit=0&countLimit=-1&cursor=<string>&name=<string>&nameMatchMode=ANYWHERE&excludeMeta=true&communityId=<uuid>&typeId=<uuid>&typePublicId=<string>&includeSubCommunities=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>. Cursor should be preferred over offset for better performance and stable results. It is forbidden to use both in the same request."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped. For cursor pagination this parameter is ignored and count is skipped."
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Cursor for the current page of results. To retrieve the first page with cursor pagination you need to pass this parameter with an empty value (must be non-null). For the next pages, the value must be taken from the response (<code>nextCursor</code> property)."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "The name of the domain to search for"
										},
										{
											"key": "nameMatchMode",
											"value": "ANYWHERE",
											"description": "The match mode used to compare <code>name</code>. If the match mode is <code>EXACT</code> the search is case-sensitive, otherwise the search is case-insensitive."
										},
										{
											"key": "excludeMeta",
											"value": "true",
											"description": "The exclude meta flag. If this is set to true then the meta domains will not be returned (meta domains are i.e. domains not created manually by the user)."
										},
										{
											"key": "communityId",
											"value": "<uuid>",
											"description": "The ID of the community to find the domains in"
										},
										{
											"key": "typeId",
											"value": "<uuid>",
											"description": "The ID of the domain type to search for. Returned domains are of this type"
										},
										{
											"key": "typePublicId",
											"value": "<string>",
											"description": "The public ID of the domain type to search for. Returned domains are of this type"
										},
										{
											"key": "includeSubCommunities",
											"value": "false",
											"description": "The include sub-communities flag. When set to true, sub-communities (of the community indicated via the <code>communityId</code> parameter) will be searched in."
										}
									]
								}
							},
							"status": "Payment Required",
							"code": 402,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains?offset=0&limit=0&countLimit=-1&cursor=<string>&name=<string>&nameMatchMode=ANYWHERE&excludeMeta=true&communityId=<uuid>&typeId=<uuid>&typePublicId=<string>&includeSubCommunities=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>. Cursor should be preferred over offset for better performance and stable results. It is forbidden to use both in the same request."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped. For cursor pagination this parameter is ignored and count is skipped."
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Cursor for the current page of results. To retrieve the first page with cursor pagination you need to pass this parameter with an empty value (must be non-null). For the next pages, the value must be taken from the response (<code>nextCursor</code> property)."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "The name of the domain to search for"
										},
										{
											"key": "nameMatchMode",
											"value": "ANYWHERE",
											"description": "The match mode used to compare <code>name</code>. If the match mode is <code>EXACT</code> the search is case-sensitive, otherwise the search is case-insensitive."
										},
										{
											"key": "excludeMeta",
											"value": "true",
											"description": "The exclude meta flag. If this is set to true then the meta domains will not be returned (meta domains are i.e. domains not created manually by the user)."
										},
										{
											"key": "communityId",
											"value": "<uuid>",
											"description": "The ID of the community to find the domains in"
										},
										{
											"key": "typeId",
											"value": "<uuid>",
											"description": "The ID of the domain type to search for. Returned domains are of this type"
										},
										{
											"key": "typePublicId",
											"value": "<string>",
											"description": "The public ID of the domain type to search for. Returned domains are of this type"
										},
										{
											"key": "includeSubCommunities",
											"value": "false",
											"description": "The include sub-communities flag. When set to true, sub-communities (of the community indicated via the <code>communityId</code> parameter) will be searched in."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains?offset=0&limit=0&countLimit=-1&cursor=<string>&name=<string>&nameMatchMode=ANYWHERE&excludeMeta=true&communityId=<uuid>&typeId=<uuid>&typePublicId=<string>&includeSubCommunities=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>. Cursor should be preferred over offset for better performance and stable results. It is forbidden to use both in the same request."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped. For cursor pagination this parameter is ignored and count is skipped."
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Cursor for the current page of results. To retrieve the first page with cursor pagination you need to pass this parameter with an empty value (must be non-null). For the next pages, the value must be taken from the response (<code>nextCursor</code> property)."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "The name of the domain to search for"
										},
										{
											"key": "nameMatchMode",
											"value": "ANYWHERE",
											"description": "The match mode used to compare <code>name</code>. If the match mode is <code>EXACT</code> the search is case-sensitive, otherwise the search is case-insensitive."
										},
										{
											"key": "excludeMeta",
											"value": "true",
											"description": "The exclude meta flag. If this is set to true then the meta domains will not be returned (meta domains are i.e. domains not created manually by the user)."
										},
										{
											"key": "communityId",
											"value": "<uuid>",
											"description": "The ID of the community to find the domains in"
										},
										{
											"key": "typeId",
											"value": "<uuid>",
											"description": "The ID of the domain type to search for. Returned domains are of this type"
										},
										{
											"key": "typePublicId",
											"value": "<string>",
											"description": "The public ID of the domain type to search for. Returned domains are of this type"
										},
										{
											"key": "includeSubCommunities",
											"value": "false",
											"description": "The include sub-communities flag. When set to true, sub-communities (of the community indicated via the <code>communityId</code> parameter) will be searched in."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add domain",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"communityId\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"typeId\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"excludedFromAutoHyperlinking\": \"<boolean>\",\n  \"typePublicId\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/domains",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"domains"
							]
						},
						"description": "Adds a new domain with given data into a community."
					},
					"response": [
						{
							"name": "Created - The request has been fulfilled and resulted in a new resource being created.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"communityId\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"typeId\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"excludedFromAutoHyperlinking\": \"<boolean>\",\n  \"typePublicId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/domains",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"community\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Email\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"AssetType\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"type\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"ComplexRelationLeg\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"excludedFromAutoHyperlinking\": \"<boolean>\"\n}"
						},
						{
							"name": "Bad Request - Request data is malformed or illegal. The request body will contain additional information.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"communityId\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"typeId\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"excludedFromAutoHyperlinking\": \"<boolean>\",\n  \"typePublicId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/domains",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized - Authentication has failed or has not been provided.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"communityId\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"typeId\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"excludedFromAutoHyperlinking\": \"<boolean>\",\n  \"typePublicId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/domains",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "License Problem - There was a problem related to the license.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"communityId\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"typeId\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"excludedFromAutoHyperlinking\": \"<boolean>\",\n  \"typePublicId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/domains",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains"
									]
								}
							},
							"status": "Payment Required",
							"code": 402,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden - Insufficient permissions to perform the requested operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"communityId\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"typeId\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"excludedFromAutoHyperlinking\": \"<boolean>\",\n  \"typePublicId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/domains",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"communityId\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"typeId\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"excludedFromAutoHyperlinking\": \"<boolean>\",\n  \"typePublicId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/domains",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "issues",
			"item": [
				{
					"name": "{issueId}",
					"item": [
						{
							"name": "community",
							"item": [
								{
									"name": "{communityId}",
									"item": [
										{
											"name": "Moves an issue to another community.",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/issues/:issueId/community/:communityId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"issues",
														":issueId",
														"community",
														":communityId"
													],
													"variable": [
														{
															"key": "issueId",
															"value": "<uuid>",
															"description": "(Required) ID of the issue to be moved"
														},
														{
															"key": "communityId",
															"value": "<uuid>",
															"description": "(Required) ID of the community to move the issue to"
														}
													]
												},
												"description": "Moves an issue to another community."
											},
											"response": [
												{
													"name": "OK - The request has succeeded.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/issues/:issueId/community/:communityId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"issues",
																":issueId",
																"community",
																":communityId"
															],
															"variable": [
																{
																	"key": "issueId"
																},
																{
																	"key": "communityId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Tag\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"displayName\": \"<string>\",\n  \"articulationScore\": \"<double>\",\n  \"excludedFromAutoHyperlinking\": \"<boolean>\",\n  \"domain\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"DiagramPictureAssignmentRule\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"type\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"DateAttribute\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"status\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"DateAttribute\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"avgRating\": \"<double>\",\n  \"ratingsCount\": \"<integer>\"\n}"
												},
												{
													"name": "Unauthorized - Authentication has failed or has not been provided.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/issues/:issueId/community/:communityId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"issues",
																":issueId",
																"community",
																":communityId"
															],
															"variable": [
																{
																	"key": "issueId"
																},
																{
																	"key": "communityId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "License Problem - There was a problem related to the license.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/issues/:issueId/community/:communityId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"issues",
																":issueId",
																"community",
																":communityId"
															],
															"variable": [
																{
																	"key": "issueId"
																},
																{
																	"key": "communityId"
																}
															]
														}
													},
													"status": "Payment Required",
													"code": 402,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden - Insufficient permissions to perform the requested operation.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/issues/:issueId/community/:communityId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"issues",
																":issueId",
																"community",
																":communityId"
															],
															"variable": [
																{
																	"key": "issueId"
																},
																{
																	"key": "communityId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/issues/:issueId/community/:communityId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"issues",
																":issueId",
																"community",
																":communityId"
															],
															"variable": [
																{
																	"key": "issueId"
																},
																{
																	"key": "communityId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/issues/:issueId/community/:communityId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"issues",
																":issueId",
																"community",
																":communityId"
															],
															"variable": [
																{
																	"key": "issueId"
																},
																{
																	"key": "communityId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Returns issues matching the given search criteria.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/issues?offset=0&limit=0&countLimit=-1&sortOrder=ASC&sortField=NAME&onlyOpenIssues=true&userRelation=ALL",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"issues"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
								},
								{
									"key": "limit",
									"value": "0",
									"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
								},
								{
									"key": "countLimit",
									"value": "-1",
									"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
								},
								{
									"key": "sortOrder",
									"value": "ASC",
									"description": "The sorting order of the results."
								},
								{
									"key": "sortField",
									"value": "NAME",
									"description": "The field on which the results are sorted. Default is NAME."
								},
								{
									"key": "onlyOpenIssues",
									"value": "true",
									"description": "Whether only open issues should be returned."
								},
								{
									"key": "userRelation",
									"value": "ALL",
									"description": "The relation of the user with the issues to be returned. By default all issues for the current user will be returned."
								}
							]
						},
						"description": "Returns issues matching the given search criteria. Only parameters that are specified in this request and have not <code>null</code> values are used for filtering. All other parameters are ignored. The returned issues satisfy all constraints that are specified in this search criteria. By default a result containing 1000 issues is returned."
					},
					"response": [
						{
							"name": "OK - The request has succeeded.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/issues?offset=0&limit=0&countLimit=-1&sortOrder=ASC&sortField=NAME&onlyOpenIssues=true&userRelation=ALL",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"issues"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
										},
										{
											"key": "sortOrder",
											"value": "ASC",
											"description": "The sorting order of the results."
										},
										{
											"key": "sortField",
											"value": "NAME",
											"description": "The field on which the results are sorted. Default is NAME."
										},
										{
											"key": "onlyOpenIssues",
											"value": "true",
											"description": "Whether only open issues should be returned."
										},
										{
											"key": "userRelation",
											"value": "ALL",
											"description": "The relation of the user with the issues to be returned. By default all issues for the current user will be returned."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": \"<long>\",\n  \"offset\": \"<long>\",\n  \"limit\": \"<long>\",\n  \"results\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Notification\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"articulationScore\": \"<double>\",\n      \"excludedFromAutoHyperlinking\": \"<boolean>\",\n      \"domain\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ExcelIngestionProperties\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"type\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"WorkflowInstance\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"status\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ComplexRelationAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"avgRating\": \"<double>\",\n      \"ratingsCount\": \"<integer>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Community\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"articulationScore\": \"<double>\",\n      \"excludedFromAutoHyperlinking\": \"<boolean>\",\n      \"domain\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ClassificationMatch\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"type\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"SingleValueListAttribute\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"status\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"StringAttribute\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"avgRating\": \"<double>\",\n      \"ratingsCount\": \"<integer>\"\n    }\n  ]\n}"
						},
						{
							"name": "Unauthorized - Authentication has failed or has not been provided.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/issues?offset=0&limit=0&countLimit=-1&sortOrder=ASC&sortField=NAME&onlyOpenIssues=true&userRelation=ALL",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"issues"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
										},
										{
											"key": "sortOrder",
											"value": "ASC",
											"description": "The sorting order of the results."
										},
										{
											"key": "sortField",
											"value": "NAME",
											"description": "The field on which the results are sorted. Default is NAME."
										},
										{
											"key": "onlyOpenIssues",
											"value": "true",
											"description": "Whether only open issues should be returned."
										},
										{
											"key": "userRelation",
											"value": "ALL",
											"description": "The relation of the user with the issues to be returned. By default all issues for the current user will be returned."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "License Problem - There was a problem related to the license.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/issues?offset=0&limit=0&countLimit=-1&sortOrder=ASC&sortField=NAME&onlyOpenIssues=true&userRelation=ALL",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"issues"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
										},
										{
											"key": "sortOrder",
											"value": "ASC",
											"description": "The sorting order of the results."
										},
										{
											"key": "sortField",
											"value": "NAME",
											"description": "The field on which the results are sorted. Default is NAME."
										},
										{
											"key": "onlyOpenIssues",
											"value": "true",
											"description": "Whether only open issues should be returned."
										},
										{
											"key": "userRelation",
											"value": "ALL",
											"description": "The relation of the user with the issues to be returned. By default all issues for the current user will be returned."
										}
									]
								}
							},
							"status": "Payment Required",
							"code": 402,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/issues?offset=0&limit=0&countLimit=-1&sortOrder=ASC&sortField=NAME&onlyOpenIssues=true&userRelation=ALL",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"issues"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
										},
										{
											"key": "sortOrder",
											"value": "ASC",
											"description": "The sorting order of the results."
										},
										{
											"key": "sortField",
											"value": "NAME",
											"description": "The field on which the results are sorted. Default is NAME."
										},
										{
											"key": "onlyOpenIssues",
											"value": "true",
											"description": "Whether only open issues should be returned."
										},
										{
											"key": "userRelation",
											"value": "ALL",
											"description": "The relation of the user with the issues to be returned. By default all issues for the current user will be returned."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/issues?offset=0&limit=0&countLimit=-1&sortOrder=ASC&sortField=NAME&onlyOpenIssues=true&userRelation=ALL",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"issues"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
										},
										{
											"key": "sortOrder",
											"value": "ASC",
											"description": "The sorting order of the results."
										},
										{
											"key": "sortField",
											"value": "NAME",
											"description": "The field on which the results are sorted. Default is NAME."
										},
										{
											"key": "onlyOpenIssues",
											"value": "true",
											"description": "Whether only open issues should be returned."
										},
										{
											"key": "userRelation",
											"value": "ALL",
											"description": "The relation of the user with the issues to be returned. By default all issues for the current user will be returned."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Adds a new issue.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"typeId\": \"<uuid>\",\n  \"responsibleCommunityId\": \"<uuid>\",\n  \"priority\": \"<string>\",\n  \"requesterId\": \"<uuid>\",\n  \"relatedAssets\": [\n    {\n      \"assetId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"direction\": \"<boolean>\"\n    },\n    {\n      \"assetId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"direction\": \"<boolean>\"\n    }\n  ],\n  \"categoryIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/issues",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"issues"
							]
						},
						"description": "Adds a new issue with the given parameters."
					},
					"response": [
						{
							"name": "Created - The request has been fulfilled and resulted in a new resource being created.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"typeId\": \"<uuid>\",\n  \"responsibleCommunityId\": \"<uuid>\",\n  \"priority\": \"<string>\",\n  \"requesterId\": \"<uuid>\",\n  \"relatedAssets\": [\n    {\n      \"assetId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"direction\": \"<boolean>\"\n    },\n    {\n      \"assetId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"direction\": \"<boolean>\"\n    }\n  ],\n  \"categoryIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/issues",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"issues"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Tag\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"displayName\": \"<string>\",\n  \"articulationScore\": \"<double>\",\n  \"excludedFromAutoHyperlinking\": \"<boolean>\",\n  \"domain\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"DiagramPictureAssignmentRule\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"type\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"DateAttribute\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"status\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"DateAttribute\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"avgRating\": \"<double>\",\n  \"ratingsCount\": \"<integer>\"\n}"
						},
						{
							"name": "Bad Request - Request data is malformed or illegal. The request body will contain additional information.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"typeId\": \"<uuid>\",\n  \"responsibleCommunityId\": \"<uuid>\",\n  \"priority\": \"<string>\",\n  \"requesterId\": \"<uuid>\",\n  \"relatedAssets\": [\n    {\n      \"assetId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"direction\": \"<boolean>\"\n    },\n    {\n      \"assetId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"direction\": \"<boolean>\"\n    }\n  ],\n  \"categoryIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/issues",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"issues"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized - Authentication has failed or has not been provided.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"typeId\": \"<uuid>\",\n  \"responsibleCommunityId\": \"<uuid>\",\n  \"priority\": \"<string>\",\n  \"requesterId\": \"<uuid>\",\n  \"relatedAssets\": [\n    {\n      \"assetId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"direction\": \"<boolean>\"\n    },\n    {\n      \"assetId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"direction\": \"<boolean>\"\n    }\n  ],\n  \"categoryIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/issues",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"issues"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "License Problem - There was a problem related to the license.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"typeId\": \"<uuid>\",\n  \"responsibleCommunityId\": \"<uuid>\",\n  \"priority\": \"<string>\",\n  \"requesterId\": \"<uuid>\",\n  \"relatedAssets\": [\n    {\n      \"assetId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"direction\": \"<boolean>\"\n    },\n    {\n      \"assetId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"direction\": \"<boolean>\"\n    }\n  ],\n  \"categoryIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/issues",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"issues"
									]
								}
							},
							"status": "Payment Required",
							"code": 402,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden - Insufficient permissions to perform the requested operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"typeId\": \"<uuid>\",\n  \"responsibleCommunityId\": \"<uuid>\",\n  \"priority\": \"<string>\",\n  \"requesterId\": \"<uuid>\",\n  \"relatedAssets\": [\n    {\n      \"assetId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"direction\": \"<boolean>\"\n    },\n    {\n      \"assetId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"direction\": \"<boolean>\"\n    }\n  ],\n  \"categoryIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/issues",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"issues"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"typeId\": \"<uuid>\",\n  \"responsibleCommunityId\": \"<uuid>\",\n  \"priority\": \"<string>\",\n  \"requesterId\": \"<uuid>\",\n  \"relatedAssets\": [\n    {\n      \"assetId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"direction\": \"<boolean>\"\n    },\n    {\n      \"assetId\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\",\n      \"direction\": \"<boolean>\"\n    }\n  ],\n  \"categoryIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/issues",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"issues"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "jdbc",
			"item": [
				{
					"name": "Find JDBC Drivers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/jdbc?offset=0&limit=0&countLimit=-1&databaseName=<string>&databaseVersion=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"jdbc"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
								},
								{
									"key": "limit",
									"value": "0",
									"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
								},
								{
									"key": "countLimit",
									"value": "-1",
									"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
								},
								{
									"key": "databaseName",
									"value": "<string>"
								},
								{
									"key": "databaseVersion",
									"value": "<string>"
								}
							]
						},
						"description": "Finds JDBC drivers that match the given search criteria. By default a result containing 1000 JDBC drivers are returned.<br />This operation is deprecated and it will be removed in the future."
					},
					"response": [
						{
							"name": "JDBC drivers searched",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/jdbc?offset=0&limit=0&countLimit=-1&databaseName=<string>&databaseVersion=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"jdbc"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
										},
										{
											"key": "databaseName",
											"value": "<string>"
										},
										{
											"key": "databaseVersion",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": \"<long>\",\n  \"offset\": \"<long>\",\n  \"limit\": \"<long>\",\n  \"results\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationLegType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"databaseName\": \"<string>\",\n      \"databaseVersion\": \"<string>\",\n      \"driver\": \"<string>\",\n      \"connectionString\": \"<string>\",\n      \"jdbcDriverFiles\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ComplexRelationLeg\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"fileName\": \"<string>\",\n          \"fileType\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ComplexRelationType\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"fileName\": \"<string>\",\n          \"fileType\": \"<string>\"\n        }\n      ],\n      \"connectionStringParameters\": [\n        {\n          \"id\": \"<uuid>\",\n          \"label\": \"<string>\",\n          \"parameter\": \"<string>\",\n          \"required\": \"<boolean>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"label\": \"<string>\",\n          \"parameter\": \"<string>\",\n          \"required\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"JdbcDriverFile\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"databaseName\": \"<string>\",\n      \"databaseVersion\": \"<string>\",\n      \"driver\": \"<string>\",\n      \"connectionString\": \"<string>\",\n      \"jdbcDriverFiles\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"RelationTrace\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"fileName\": \"<string>\",\n          \"fileType\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Address\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"fileName\": \"<string>\",\n          \"fileType\": \"<string>\"\n        }\n      ],\n      \"connectionStringParameters\": [\n        {\n          \"id\": \"<uuid>\",\n          \"label\": \"<string>\",\n          \"parameter\": \"<string>\",\n          \"required\": \"<boolean>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"label\": \"<string>\",\n          \"parameter\": \"<string>\",\n          \"required\": \"<boolean>\"\n        }\n      ]\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "ratings",
			"item": [
				{
					"name": "{ratingId}",
					"item": [
						{
							"name": "Get rating.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ratings/:ratingId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ratings",
										":ratingId"
									],
									"variable": [
										{
											"key": "ratingId",
											"value": "<uuid>",
											"description": "(Required) The ID of the rating."
										}
									]
								},
								"description": "Returns the rating with the specified ID."
							},
							"response": [
								{
									"name": "Rating found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ratings/:ratingId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ratings",
												":ratingId"
											],
											"variable": [
												{
													"key": "ratingId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"asset\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"BaseDataType\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"id\": \"<uuid>\",\n  \"rating\": \"<double>\",\n  \"resourceType\": \"ScriptAttribute\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"review\": \"<string>\"\n}"
								},
								{
									"name": "Rating with given ID could not be found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ratings/:ratingId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ratings",
												":ratingId"
											],
											"variable": [
												{
													"key": "ratingId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Remove rating.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ratings/:ratingId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ratings",
										":ratingId"
									],
									"variable": [
										{
											"key": "ratingId",
											"value": "<uuid>",
											"description": "(Required) The ID of the rating to be removed."
										}
									]
								},
								"description": "Removes the rating with the specified ID."
							},
							"response": [
								{
									"name": "Rating successfully removed.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ratings/:ratingId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ratings",
												":ratingId"
											],
											"variable": [
												{
													"key": "ratingId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Rating with given ID could not be found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ratings/:ratingId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ratings",
												":ratingId"
											],
											"variable": [
												{
													"key": "ratingId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Change rating.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"rating\": \"<double>\",\n  \"review\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ratings/:ratingId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ratings",
										":ratingId"
									],
									"variable": [
										{
											"key": "ratingId",
											"value": "<uuid>",
											"description": "(Required) The ID of the rating to be changed."
										}
									]
								},
								"description": "Modifies the rating with the specified ID.<p>Only properties that are specified in these requests and have not <code>null</code> values are updated. All other properties are ignored.</p>"
							},
							"response": [
								{
									"name": "Rating successfully changed.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"rating\": \"<double>\",\n  \"review\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ratings/:ratingId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ratings",
												":ratingId"
											],
											"variable": [
												{
													"key": "ratingId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"asset\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"BaseDataType\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"id\": \"<uuid>\",\n  \"rating\": \"<double>\",\n  \"resourceType\": \"ScriptAttribute\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"review\": \"<string>\"\n}"
								},
								{
									"name": "Rating with given ID could not be found.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"rating\": \"<double>\",\n  \"review\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ratings/:ratingId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ratings",
												":ratingId"
											],
											"variable": [
												{
													"key": "ratingId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Find ratings.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ratings?offset=0&limit=0&countLimit=-1&sortOrder=DESC&assetId=<uuid>&userId=<uuid>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ratings"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
								},
								{
									"key": "limit",
									"value": "0",
									"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
								},
								{
									"key": "countLimit",
									"value": "-1",
									"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
								},
								{
									"key": "sortOrder",
									"value": "DESC",
									"description": "The order of sorting (on creation date) the found ratings."
								},
								{
									"key": "assetId",
									"value": "<uuid>",
									"description": "The ID of the asset the rating belongs to."
								},
								{
									"key": "userId",
									"value": "<uuid>",
									"description": "The ID of the rating author."
								}
							]
						},
						"description": "Returns ratings matching the given search criteria.<p>Only parameters that are specified in this request and have not <code>null</code> values are used for filtering. All other parameters are ignored.</p><p>The returned ratings satisfy all constraints that are specified in this search criteria. By default, the result contains up to 1000 ratings.</p>"
					},
					"response": [
						{
							"name": "The paged response with found ratings.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ratings?offset=0&limit=0&countLimit=-1&sortOrder=DESC&assetId=<uuid>&userId=<uuid>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ratings"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
										},
										{
											"key": "sortOrder",
											"value": "DESC",
											"description": "The order of sorting (on creation date) the found ratings."
										},
										{
											"key": "assetId",
											"value": "<uuid>",
											"description": "The ID of the asset the rating belongs to."
										},
										{
											"key": "userId",
											"value": "<uuid>",
											"description": "The ID of the rating author."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": \"<long>\",\n  \"offset\": \"<long>\",\n  \"limit\": \"<long>\",\n  \"results\": [\n    {\n      \"asset\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"JdbcIngestionProperties\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"id\": \"<uuid>\",\n      \"rating\": \"<double>\",\n      \"resourceType\": \"StringAttribute\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"review\": \"<string>\"\n    },\n    {\n      \"asset\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Tag\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"id\": \"<uuid>\",\n      \"rating\": \"<double>\",\n      \"resourceType\": \"WorkflowInstance\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"review\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Add rating.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"assetId\": \"<uuid>\",\n  \"rating\": \"<double>\",\n  \"review\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/ratings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ratings"
							]
						},
						"description": "Adds a new rating."
					},
					"response": [
						{
							"name": "Rating successfully added.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"assetId\": \"<uuid>\",\n  \"rating\": \"<double>\",\n  \"review\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ratings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ratings"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"asset\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"BaseDataType\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"id\": \"<uuid>\",\n  \"rating\": \"<double>\",\n  \"resourceType\": \"ScriptAttribute\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"review\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "relations",
			"item": [
				{
					"name": "bulk",
					"item": [
						{
							"name": "Adds multiple relations in one go.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"sourceId\": \"<uuid>\",\n    \"targetId\": \"<uuid>\",\n    \"typeId\": \"<uuid>\",\n    \"startingDate\": \"<long>\",\n    \"endingDate\": \"<long>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"sourceId\": \"<uuid>\",\n    \"targetId\": \"<uuid>\",\n    \"typeId\": \"<uuid>\",\n    \"startingDate\": \"<long>\",\n    \"endingDate\": \"<long>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/relations/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"relations",
										"bulk"
									]
								},
								"description": "Adds multiple relations in one gos."
							},
							"response": [
								{
									"name": "Created - The request has been fulfilled and resulted in a new resource being created.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"sourceId\": \"<uuid>\",\n    \"targetId\": \"<uuid>\",\n    \"typeId\": \"<uuid>\",\n    \"startingDate\": \"<long>\",\n    \"endingDate\": \"<long>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"sourceId\": \"<uuid>\",\n    \"targetId\": \"<uuid>\",\n    \"typeId\": \"<uuid>\",\n    \"startingDate\": \"<long>\",\n    \"endingDate\": \"<long>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/relations/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relations",
												"bulk"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Role\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"source\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DiagramPicture\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"target\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"JdbcDriver\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"type\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ViewSharingRule\",\n      \"resourceDiscriminator\": \"<string>\"\n    },\n    \"startingDate\": \"<long>\",\n    \"endingDate\": \"<long>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Asset\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"source\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Responsibility\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"target\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"MultiValueListAttributeType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"type\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"BooleanAttribute\",\n      \"resourceDiscriminator\": \"<string>\"\n    },\n    \"startingDate\": \"<long>\",\n    \"endingDate\": \"<long>\"\n  }\n]"
								},
								{
									"name": "Bad Request - Request data is malformed or illegal. The request body will contain additional information.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"sourceId\": \"<uuid>\",\n    \"targetId\": \"<uuid>\",\n    \"typeId\": \"<uuid>\",\n    \"startingDate\": \"<long>\",\n    \"endingDate\": \"<long>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"sourceId\": \"<uuid>\",\n    \"targetId\": \"<uuid>\",\n    \"typeId\": \"<uuid>\",\n    \"startingDate\": \"<long>\",\n    \"endingDate\": \"<long>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/relations/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relations",
												"bulk"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized - Authentication has failed or has not been provided.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"sourceId\": \"<uuid>\",\n    \"targetId\": \"<uuid>\",\n    \"typeId\": \"<uuid>\",\n    \"startingDate\": \"<long>\",\n    \"endingDate\": \"<long>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"sourceId\": \"<uuid>\",\n    \"targetId\": \"<uuid>\",\n    \"typeId\": \"<uuid>\",\n    \"startingDate\": \"<long>\",\n    \"endingDate\": \"<long>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/relations/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relations",
												"bulk"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "License Problem - There was a problem related to the license.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"sourceId\": \"<uuid>\",\n    \"targetId\": \"<uuid>\",\n    \"typeId\": \"<uuid>\",\n    \"startingDate\": \"<long>\",\n    \"endingDate\": \"<long>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"sourceId\": \"<uuid>\",\n    \"targetId\": \"<uuid>\",\n    \"typeId\": \"<uuid>\",\n    \"startingDate\": \"<long>\",\n    \"endingDate\": \"<long>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/relations/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relations",
												"bulk"
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden - Insufficient permissions to perform the requested operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"sourceId\": \"<uuid>\",\n    \"targetId\": \"<uuid>\",\n    \"typeId\": \"<uuid>\",\n    \"startingDate\": \"<long>\",\n    \"endingDate\": \"<long>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"sourceId\": \"<uuid>\",\n    \"targetId\": \"<uuid>\",\n    \"typeId\": \"<uuid>\",\n    \"startingDate\": \"<long>\",\n    \"endingDate\": \"<long>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/relations/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relations",
												"bulk"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"sourceId\": \"<uuid>\",\n    \"targetId\": \"<uuid>\",\n    \"typeId\": \"<uuid>\",\n    \"startingDate\": \"<long>\",\n    \"endingDate\": \"<long>\",\n    \"typePublicId\": \"<string>\"\n  },\n  {\n    \"sourceId\": \"<uuid>\",\n    \"targetId\": \"<uuid>\",\n    \"typeId\": \"<uuid>\",\n    \"startingDate\": \"<long>\",\n    \"endingDate\": \"<long>\",\n    \"typePublicId\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/relations/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relations",
												"bulk"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Removes multiple relations.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/relations/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"relations",
										"bulk"
									]
								},
								"description": "Removes multiple relations."
							},
							"response": [
								{
									"name": "No Content - The server has fulfilled the request but does not need to return an entity-body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/relations/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relations",
												"bulk"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request - Request data is malformed or illegal. The request body will contain additional information.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/relations/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relations",
												"bulk"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized - Authentication has failed or has not been provided.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/relations/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relations",
												"bulk"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "License Problem - There was a problem related to the license.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/relations/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relations",
												"bulk"
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden - Insufficient permissions to perform the requested operation.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/relations/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relations",
												"bulk"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/relations/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relations",
												"bulk"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Changes multiple relations.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"sourceId\": \"<uuid>\",\n    \"targetId\": \"<uuid>\",\n    \"startingDate\": \"<long>\",\n    \"endingDate\": \"<long>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"sourceId\": \"<uuid>\",\n    \"targetId\": \"<uuid>\",\n    \"startingDate\": \"<long>\",\n    \"endingDate\": \"<long>\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/relations/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"relations",
										"bulk"
									]
								},
								"description": "Changes multiple relations."
							},
							"response": [
								{
									"name": "OK - The request has succeeded.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"sourceId\": \"<uuid>\",\n    \"targetId\": \"<uuid>\",\n    \"startingDate\": \"<long>\",\n    \"endingDate\": \"<long>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"sourceId\": \"<uuid>\",\n    \"targetId\": \"<uuid>\",\n    \"startingDate\": \"<long>\",\n    \"endingDate\": \"<long>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/relations/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relations",
												"bulk"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Role\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"source\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DiagramPicture\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"target\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"JdbcDriver\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"type\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ViewSharingRule\",\n      \"resourceDiscriminator\": \"<string>\"\n    },\n    \"startingDate\": \"<long>\",\n    \"endingDate\": \"<long>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Asset\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"source\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Responsibility\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"target\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"MultiValueListAttributeType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"type\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"BooleanAttribute\",\n      \"resourceDiscriminator\": \"<string>\"\n    },\n    \"startingDate\": \"<long>\",\n    \"endingDate\": \"<long>\"\n  }\n]"
								},
								{
									"name": "Bad Request - Request data is malformed or illegal. The request body will contain additional information.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"sourceId\": \"<uuid>\",\n    \"targetId\": \"<uuid>\",\n    \"startingDate\": \"<long>\",\n    \"endingDate\": \"<long>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"sourceId\": \"<uuid>\",\n    \"targetId\": \"<uuid>\",\n    \"startingDate\": \"<long>\",\n    \"endingDate\": \"<long>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/relations/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relations",
												"bulk"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized - Authentication has failed or has not been provided.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"sourceId\": \"<uuid>\",\n    \"targetId\": \"<uuid>\",\n    \"startingDate\": \"<long>\",\n    \"endingDate\": \"<long>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"sourceId\": \"<uuid>\",\n    \"targetId\": \"<uuid>\",\n    \"startingDate\": \"<long>\",\n    \"endingDate\": \"<long>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/relations/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relations",
												"bulk"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "License Problem - There was a problem related to the license.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"sourceId\": \"<uuid>\",\n    \"targetId\": \"<uuid>\",\n    \"startingDate\": \"<long>\",\n    \"endingDate\": \"<long>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"sourceId\": \"<uuid>\",\n    \"targetId\": \"<uuid>\",\n    \"startingDate\": \"<long>\",\n    \"endingDate\": \"<long>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/relations/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relations",
												"bulk"
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden - Insufficient permissions to perform the requested operation.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"sourceId\": \"<uuid>\",\n    \"targetId\": \"<uuid>\",\n    \"startingDate\": \"<long>\",\n    \"endingDate\": \"<long>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"sourceId\": \"<uuid>\",\n    \"targetId\": \"<uuid>\",\n    \"startingDate\": \"<long>\",\n    \"endingDate\": \"<long>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/relations/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relations",
												"bulk"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"sourceId\": \"<uuid>\",\n    \"targetId\": \"<uuid>\",\n    \"startingDate\": \"<long>\",\n    \"endingDate\": \"<long>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"sourceId\": \"<uuid>\",\n    \"targetId\": \"<uuid>\",\n    \"startingDate\": \"<long>\",\n    \"endingDate\": \"<long>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/relations/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relations",
												"bulk"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"sourceId\": \"<uuid>\",\n    \"targetId\": \"<uuid>\",\n    \"startingDate\": \"<long>\",\n    \"endingDate\": \"<long>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"sourceId\": \"<uuid>\",\n    \"targetId\": \"<uuid>\",\n    \"startingDate\": \"<long>\",\n    \"endingDate\": \"<long>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/relations/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relations",
												"bulk"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "{relationId}",
					"item": [
						{
							"name": "Returns a relation identified by given id.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/relations/:relationId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"relations",
										":relationId"
									],
									"variable": [
										{
											"key": "relationId",
											"value": "<uuid>",
											"description": "(Required) the ID of the relation"
										}
									]
								},
								"description": "Returns a relation identified by given id."
							},
							"response": [
								{
									"name": "OK - The request has succeeded.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/relations/:relationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relations",
												":relationId"
											],
											"variable": [
												{
													"key": "relationId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Assignment\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"source\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"DiagramPictureSharingRule\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"target\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Assignment\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"type\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"DateAttributeType\",\n    \"resourceDiscriminator\": \"<string>\"\n  },\n  \"startingDate\": \"<long>\",\n  \"endingDate\": \"<long>\"\n}"
								},
								{
									"name": "Unauthorized - Authentication has failed or has not been provided.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/relations/:relationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relations",
												":relationId"
											],
											"variable": [
												{
													"key": "relationId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "License Problem - There was a problem related to the license.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/relations/:relationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relations",
												":relationId"
											],
											"variable": [
												{
													"key": "relationId"
												}
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden - Insufficient permissions to perform the requested operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/relations/:relationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relations",
												":relationId"
											],
											"variable": [
												{
													"key": "relationId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/relations/:relationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relations",
												":relationId"
											],
											"variable": [
												{
													"key": "relationId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/relations/:relationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relations",
												":relationId"
											],
											"variable": [
												{
													"key": "relationId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Removes a relation identified by given id.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/relations/:relationId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"relations",
										":relationId"
									],
									"variable": [
										{
											"key": "relationId",
											"value": "<uuid>",
											"description": "(Required) the ID of the relation to remove"
										}
									]
								},
								"description": "Removes a relation identified by given id."
							},
							"response": [
								{
									"name": "No Content - The server has fulfilled the request but does not need to return an entity-body.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/relations/:relationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relations",
												":relationId"
											],
											"variable": [
												{
													"key": "relationId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized - Authentication has failed or has not been provided.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/relations/:relationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relations",
												":relationId"
											],
											"variable": [
												{
													"key": "relationId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "License Problem - There was a problem related to the license.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/relations/:relationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relations",
												":relationId"
											],
											"variable": [
												{
													"key": "relationId"
												}
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden - Insufficient permissions to perform the requested operation.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/relations/:relationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relations",
												":relationId"
											],
											"variable": [
												{
													"key": "relationId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/relations/:relationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relations",
												":relationId"
											],
											"variable": [
												{
													"key": "relationId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/relations/:relationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relations",
												":relationId"
											],
											"variable": [
												{
													"key": "relationId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Changes the relation with the information that is present in the request.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<uuid>\",\n  \"sourceId\": \"<uuid>\",\n  \"targetId\": \"<uuid>\",\n  \"startingDate\": \"<long>\",\n  \"endingDate\": \"<long>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/relations/:relationId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"relations",
										":relationId"
									],
									"variable": [
										{
											"key": "relationId",
											"value": "<uuid>",
											"description": "(Required) The ID of the relation to be changed."
										}
									]
								},
								"description": "Changes the relation with the information that is present in the request. Only properties that are specified in this request and have not <code>null</code> values are updated. All other properties are ignored."
							},
							"response": [
								{
									"name": "OK - The request has succeeded.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"sourceId\": \"<uuid>\",\n  \"targetId\": \"<uuid>\",\n  \"startingDate\": \"<long>\",\n  \"endingDate\": \"<long>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/relations/:relationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relations",
												":relationId"
											],
											"variable": [
												{
													"key": "relationId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Assignment\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"source\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"DiagramPictureSharingRule\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"target\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Assignment\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"type\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"DateAttributeType\",\n    \"resourceDiscriminator\": \"<string>\"\n  },\n  \"startingDate\": \"<long>\",\n  \"endingDate\": \"<long>\"\n}"
								},
								{
									"name": "Bad Request - Request data is malformed or illegal. The request body will contain additional information.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"sourceId\": \"<uuid>\",\n  \"targetId\": \"<uuid>\",\n  \"startingDate\": \"<long>\",\n  \"endingDate\": \"<long>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/relations/:relationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relations",
												":relationId"
											],
											"variable": [
												{
													"key": "relationId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized - Authentication has failed or has not been provided.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"sourceId\": \"<uuid>\",\n  \"targetId\": \"<uuid>\",\n  \"startingDate\": \"<long>\",\n  \"endingDate\": \"<long>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/relations/:relationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relations",
												":relationId"
											],
											"variable": [
												{
													"key": "relationId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "License Problem - There was a problem related to the license.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"sourceId\": \"<uuid>\",\n  \"targetId\": \"<uuid>\",\n  \"startingDate\": \"<long>\",\n  \"endingDate\": \"<long>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/relations/:relationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relations",
												":relationId"
											],
											"variable": [
												{
													"key": "relationId"
												}
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden - Insufficient permissions to perform the requested operation.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"sourceId\": \"<uuid>\",\n  \"targetId\": \"<uuid>\",\n  \"startingDate\": \"<long>\",\n  \"endingDate\": \"<long>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/relations/:relationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relations",
												":relationId"
											],
											"variable": [
												{
													"key": "relationId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"sourceId\": \"<uuid>\",\n  \"targetId\": \"<uuid>\",\n  \"startingDate\": \"<long>\",\n  \"endingDate\": \"<long>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/relations/:relationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relations",
												":relationId"
											],
											"variable": [
												{
													"key": "relationId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"sourceId\": \"<uuid>\",\n  \"targetId\": \"<uuid>\",\n  \"startingDate\": \"<long>\",\n  \"endingDate\": \"<long>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/relations/:relationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relations",
												":relationId"
											],
											"variable": [
												{
													"key": "relationId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Returns relations matching the given search criteria.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/relations?offset=0&limit=0&countLimit=-1&cursor=<string>&relationTypeId=<uuid>&sourceId=<uuid>&targetId=<uuid>&sourceTargetLogicalOperator=AND&typePublicId=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"relations"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>. Cursor should be preferred over offset for better performance and stable results. It is forbidden to use both in the same request."
								},
								{
									"key": "limit",
									"value": "0",
									"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
								},
								{
									"key": "countLimit",
									"value": "-1",
									"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped. For cursor pagination this parameter is ignored and count is skipped."
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Cursor for the current page of results. To retrieve the first page with cursor pagination you need to pass this parameter with an empty value (must be non-null). For the next pages, the value must be taken from the response (<code>nextCursor</code> property)."
								},
								{
									"key": "relationTypeId",
									"value": "<uuid>",
									"description": "The ID of the type of relations to search for."
								},
								{
									"key": "sourceId",
									"value": "<uuid>",
									"description": "The ID of the source of relations to search for."
								},
								{
									"key": "targetId",
									"value": "<uuid>",
									"description": "The ID of the target of relations to search for."
								},
								{
									"key": "sourceTargetLogicalOperator",
									"value": "AND",
									"description": "The logical operator determining how to combine the source and target criteria: AND or OR."
								},
								{
									"key": "typePublicId",
									"value": "<string>",
									"description": "The public ID of the type of relations to search for."
								}
							]
						},
						"description": "Returns relations matching the given search criteria. Only parameters that are specified in this request and have not <code>null</code> values are used for filtering. All other parameters are ignored. The returned relations satisfy all constraints that are specified in this search criteria. By default a result containing 1000 relations is returned."
					},
					"response": [
						{
							"name": "OK - The request has succeeded.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/relations?offset=0&limit=0&countLimit=-1&cursor=<string>&relationTypeId=<uuid>&sourceId=<uuid>&targetId=<uuid>&sourceTargetLogicalOperator=AND&typePublicId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"relations"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>. Cursor should be preferred over offset for better performance and stable results. It is forbidden to use both in the same request."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped. For cursor pagination this parameter is ignored and count is skipped."
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Cursor for the current page of results. To retrieve the first page with cursor pagination you need to pass this parameter with an empty value (must be non-null). For the next pages, the value must be taken from the response (<code>nextCursor</code> property)."
										},
										{
											"key": "relationTypeId",
											"value": "<uuid>",
											"description": "The ID of the type of relations to search for."
										},
										{
											"key": "sourceId",
											"value": "<uuid>",
											"description": "The ID of the source of relations to search for."
										},
										{
											"key": "targetId",
											"value": "<uuid>",
											"description": "The ID of the target of relations to search for."
										},
										{
											"key": "sourceTargetLogicalOperator",
											"value": "AND",
											"description": "The logical operator determining how to combine the source and target criteria: AND or OR."
										},
										{
											"key": "typePublicId",
											"value": "<string>",
											"description": "The public ID of the type of relations to search for."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": \"<long>\",\n  \"offset\": \"<long>\",\n  \"limit\": \"<long>\",\n  \"results\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DiagramPicture\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"source\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"User\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"target\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Workflow\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"type\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"MultiValueListAttribute\",\n        \"resourceDiscriminator\": \"<string>\"\n      },\n      \"startingDate\": \"<long>\",\n      \"endingDate\": \"<long>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"JdbcIngestionProperties\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"source\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ComplexRelationLeg\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"target\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"User\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"type\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ComplexRelationAttributeType\",\n        \"resourceDiscriminator\": \"<string>\"\n      },\n      \"startingDate\": \"<long>\",\n      \"endingDate\": \"<long>\"\n    }\n  ],\n  \"nextCursor\": \"<string>\"\n}"
						},
						{
							"name": "Unauthorized - Authentication has failed or has not been provided.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/relations?offset=0&limit=0&countLimit=-1&cursor=<string>&relationTypeId=<uuid>&sourceId=<uuid>&targetId=<uuid>&sourceTargetLogicalOperator=AND&typePublicId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"relations"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>. Cursor should be preferred over offset for better performance and stable results. It is forbidden to use both in the same request."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped. For cursor pagination this parameter is ignored and count is skipped."
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Cursor for the current page of results. To retrieve the first page with cursor pagination you need to pass this parameter with an empty value (must be non-null). For the next pages, the value must be taken from the response (<code>nextCursor</code> property)."
										},
										{
											"key": "relationTypeId",
											"value": "<uuid>",
											"description": "The ID of the type of relations to search for."
										},
										{
											"key": "sourceId",
											"value": "<uuid>",
											"description": "The ID of the source of relations to search for."
										},
										{
											"key": "targetId",
											"value": "<uuid>",
											"description": "The ID of the target of relations to search for."
										},
										{
											"key": "sourceTargetLogicalOperator",
											"value": "AND",
											"description": "The logical operator determining how to combine the source and target criteria: AND or OR."
										},
										{
											"key": "typePublicId",
											"value": "<string>",
											"description": "The public ID of the type of relations to search for."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "License Problem - There was a problem related to the license.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/relations?offset=0&limit=0&countLimit=-1&cursor=<string>&relationTypeId=<uuid>&sourceId=<uuid>&targetId=<uuid>&sourceTargetLogicalOperator=AND&typePublicId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"relations"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>. Cursor should be preferred over offset for better performance and stable results. It is forbidden to use both in the same request."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped. For cursor pagination this parameter is ignored and count is skipped."
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Cursor for the current page of results. To retrieve the first page with cursor pagination you need to pass this parameter with an empty value (must be non-null). For the next pages, the value must be taken from the response (<code>nextCursor</code> property)."
										},
										{
											"key": "relationTypeId",
											"value": "<uuid>",
											"description": "The ID of the type of relations to search for."
										},
										{
											"key": "sourceId",
											"value": "<uuid>",
											"description": "The ID of the source of relations to search for."
										},
										{
											"key": "targetId",
											"value": "<uuid>",
											"description": "The ID of the target of relations to search for."
										},
										{
											"key": "sourceTargetLogicalOperator",
											"value": "AND",
											"description": "The logical operator determining how to combine the source and target criteria: AND or OR."
										},
										{
											"key": "typePublicId",
											"value": "<string>",
											"description": "The public ID of the type of relations to search for."
										}
									]
								}
							},
							"status": "Payment Required",
							"code": 402,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found - One of the requested resources could not be found or the requested URI is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/relations?offset=0&limit=0&countLimit=-1&cursor=<string>&relationTypeId=<uuid>&sourceId=<uuid>&targetId=<uuid>&sourceTargetLogicalOperator=AND&typePublicId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"relations"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>. Cursor should be preferred over offset for better performance and stable results. It is forbidden to use both in the same request."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped. For cursor pagination this parameter is ignored and count is skipped."
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Cursor for the current page of results. To retrieve the first page with cursor pagination you need to pass this parameter with an empty value (must be non-null). For the next pages, the value must be taken from the response (<code>nextCursor</code> property)."
										},
										{
											"key": "relationTypeId",
											"value": "<uuid>",
											"description": "The ID of the type of relations to search for."
										},
										{
											"key": "sourceId",
											"value": "<uuid>",
											"description": "The ID of the source of relations to search for."
										},
										{
											"key": "targetId",
											"value": "<uuid>",
											"description": "The ID of the target of relations to search for."
										},
										{
											"key": "sourceTargetLogicalOperator",
											"value": "AND",
											"description": "The logical operator determining how to combine the source and target criteria: AND or OR."
										},
										{
											"key": "typePublicId",
											"value": "<string>",
											"description": "The public ID of the type of relations to search for."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/relations?offset=0&limit=0&countLimit=-1&cursor=<string>&relationTypeId=<uuid>&sourceId=<uuid>&targetId=<uuid>&sourceTargetLogicalOperator=AND&typePublicId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"relations"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>. Cursor should be preferred over offset for better performance and stable results. It is forbidden to use both in the same request."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped. For cursor pagination this parameter is ignored and count is skipped."
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Cursor for the current page of results. To retrieve the first page with cursor pagination you need to pass this parameter with an empty value (must be non-null). For the next pages, the value must be taken from the response (<code>nextCursor</code> property)."
										},
										{
											"key": "relationTypeId",
											"value": "<uuid>",
											"description": "The ID of the type of relations to search for."
										},
										{
											"key": "sourceId",
											"value": "<uuid>",
											"description": "The ID of the source of relations to search for."
										},
										{
											"key": "targetId",
											"value": "<uuid>",
											"description": "The ID of the target of relations to search for."
										},
										{
											"key": "sourceTargetLogicalOperator",
											"value": "AND",
											"description": "The logical operator determining how to combine the source and target criteria: AND or OR."
										},
										{
											"key": "typePublicId",
											"value": "<string>",
											"description": "The public ID of the type of relations to search for."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Adds a new relation.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"sourceId\": \"<uuid>\",\n  \"targetId\": \"<uuid>\",\n  \"typeId\": \"<uuid>\",\n  \"startingDate\": \"<long>\",\n  \"endingDate\": \"<long>\",\n  \"typePublicId\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/relations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"relations"
							]
						},
						"description": "Adds a new relation."
					},
					"response": [
						{
							"name": "Created - The request has been fulfilled and resulted in a new resource being created.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"sourceId\": \"<uuid>\",\n  \"targetId\": \"<uuid>\",\n  \"typeId\": \"<uuid>\",\n  \"startingDate\": \"<long>\",\n  \"endingDate\": \"<long>\",\n  \"typePublicId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/relations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"relations"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Assignment\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"source\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"DiagramPictureSharingRule\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"target\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Assignment\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"type\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"DateAttributeType\",\n    \"resourceDiscriminator\": \"<string>\"\n  },\n  \"startingDate\": \"<long>\",\n  \"endingDate\": \"<long>\"\n}"
						},
						{
							"name": "Bad Request - Request data is malformed or illegal. The request body will contain additional information.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"sourceId\": \"<uuid>\",\n  \"targetId\": \"<uuid>\",\n  \"typeId\": \"<uuid>\",\n  \"startingDate\": \"<long>\",\n  \"endingDate\": \"<long>\",\n  \"typePublicId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/relations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"relations"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized - Authentication has failed or has not been provided.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"sourceId\": \"<uuid>\",\n  \"targetId\": \"<uuid>\",\n  \"typeId\": \"<uuid>\",\n  \"startingDate\": \"<long>\",\n  \"endingDate\": \"<long>\",\n  \"typePublicId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/relations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"relations"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "License Problem - There was a problem related to the license.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"sourceId\": \"<uuid>\",\n  \"targetId\": \"<uuid>\",\n  \"typeId\": \"<uuid>\",\n  \"startingDate\": \"<long>\",\n  \"endingDate\": \"<long>\",\n  \"typePublicId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/relations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"relations"
									]
								}
							},
							"status": "Payment Required",
							"code": 402,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden - Insufficient permissions to perform the requested operation.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"sourceId\": \"<uuid>\",\n  \"targetId\": \"<uuid>\",\n  \"typeId\": \"<uuid>\",\n  \"startingDate\": \"<long>\",\n  \"endingDate\": \"<long>\",\n  \"typePublicId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/relations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"relations"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request. Please report a problem as this situation should not occur.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"sourceId\": \"<uuid>\",\n  \"targetId\": \"<uuid>\",\n  \"typeId\": \"<uuid>\",\n  \"startingDate\": \"<long>\",\n  \"endingDate\": \"<long>\",\n  \"typePublicId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/relations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"relations"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "responsibilities",
			"item": [
				{
					"name": "bulk",
					"item": [
						{
							"name": "Adds multiple responsibilities in one go.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"ownerId\": \"<uuid>\",\n    \"roleId\": \"<uuid>\",\n    \"resourceId\": \"<uuid>\",\n    \"resourceType\": \"ConnectionStringParameter\"\n  },\n  {\n    \"ownerId\": \"<uuid>\",\n    \"roleId\": \"<uuid>\",\n    \"resourceId\": \"<uuid>\",\n    \"resourceType\": \"ScriptAttribute\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/responsibilities/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"responsibilities",
										"bulk"
									]
								},
								"description": "Adds multiple responsibilities in one go. Assigns the given users to the resources with the given roles."
							},
							"response": [
								{
									"name": "Responsibilities successfully added.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"ownerId\": \"<uuid>\",\n    \"roleId\": \"<uuid>\",\n    \"resourceId\": \"<uuid>\",\n    \"resourceType\": \"ConnectionStringParameter\"\n  },\n  {\n    \"ownerId\": \"<uuid>\",\n    \"roleId\": \"<uuid>\",\n    \"resourceId\": \"<uuid>\",\n    \"resourceType\": \"ScriptAttribute\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/responsibilities/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"responsibilities",
												"bulk"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"ComplexRelationLeg\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"role\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ConnectionStringParameter\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"baseResource\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Notification\",\n      \"resourceDiscriminator\": \"<string>\"\n    },\n    \"owner\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ScriptAttributeType\",\n      \"resourceDiscriminator\": \"<string>\"\n    }\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Scope\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"role\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"JdbcDriver\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"baseResource\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationLegType\",\n      \"resourceDiscriminator\": \"<string>\"\n    },\n    \"owner\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"AssignedCharacteristicType\",\n      \"resourceDiscriminator\": \"<string>\"\n    }\n  }\n]"
								}
							]
						},
						{
							"name": "Removes multiple responsibilities in one go.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/responsibilities/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"responsibilities",
										"bulk"
									]
								},
								"description": "Removes multiple responsibilities in one go identified by given ids."
							},
							"response": [
								{
									"name": "default response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/responsibilities/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"responsibilities",
												"bulk"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "{responsibilityId}",
					"item": [
						{
							"name": "Returns the responsibility identified by the given id.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/responsibilities/:responsibilityId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"responsibilities",
										":responsibilityId"
									],
									"variable": [
										{
											"key": "responsibilityId",
											"value": "<uuid>",
											"description": "(Required) The unique identifier of the responsibility."
										}
									]
								},
								"description": "Returns the responsibility identified by the given id."
							},
							"response": [
								{
									"name": "default response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/responsibilities/:responsibilityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"responsibilities",
												":responsibilityId"
											],
											"variable": [
												{
													"key": "responsibilityId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"DomainType\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"role\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"DataQualityRule\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"baseResource\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Comment\",\n    \"resourceDiscriminator\": \"<string>\"\n  },\n  \"owner\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"WorkflowTask\",\n    \"resourceDiscriminator\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Removes the responsibility identified by the given id.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/responsibilities/:responsibilityId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"responsibilities",
										":responsibilityId"
									],
									"variable": [
										{
											"key": "responsibilityId",
											"value": "<uuid>",
											"description": "(Required) The unique identifier of the responsibility."
										}
									]
								},
								"description": "Removes the responsibility identified by the given id."
							},
							"response": [
								{
									"name": "default response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/responsibilities/:responsibilityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"responsibilities",
												":responsibilityId"
											],
											"variable": [
												{
													"key": "responsibilityId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Finds responsibilities.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/responsibilities?offset=0&limit=0&countLimit=-1&resourceIds=<uuid>&resourceIds=<uuid>&ownerIds=<uuid>&ownerIds=<uuid>&roleIds=<uuid>&roleIds=<uuid>&includeInherited=true&globalOnly=<boolean>&excludeEmptyGroups=<boolean>&sortField=LAST_MODIFIED&sortOrder=DESC&type=GLOBAL",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"responsibilities"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
								},
								{
									"key": "limit",
									"value": "0",
									"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
								},
								{
									"key": "countLimit",
									"value": "-1",
									"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
								},
								{
									"key": "resourceIds",
									"value": "<uuid>",
									"description": "The list of IDs of the resources for which the responsibilities should be found."
								},
								{
									"key": "resourceIds",
									"value": "<uuid>",
									"description": "The list of IDs of the resources for which the responsibilities should be found."
								},
								{
									"key": "ownerIds",
									"value": "<uuid>",
									"description": "The list of IDs of the owners for which the responsibilities should be found."
								},
								{
									"key": "ownerIds",
									"value": "<uuid>",
									"description": "The list of IDs of the owners for which the responsibilities should be found."
								},
								{
									"key": "roleIds",
									"value": "<uuid>",
									"description": "The list of IDs of the roles for which the responsibilities should be found."
								},
								{
									"key": "roleIds",
									"value": "<uuid>",
									"description": "The list of IDs of the roles for which the responsibilities should be found."
								},
								{
									"key": "includeInherited",
									"value": "true",
									"description": "Whether inherited responsibilities should be included in the search results."
								},
								{
									"key": "globalOnly",
									"value": "<boolean>",
									"description": "Whether only global responsibilities should be searched."
								},
								{
									"key": "excludeEmptyGroups",
									"value": "<boolean>",
									"description": "Whether responsibilities that are only assigned to empty groups should be excluded."
								},
								{
									"key": "sortField",
									"value": "LAST_MODIFIED",
									"description": "The field that should be used as reference for sorting."
								},
								{
									"key": "sortOrder",
									"value": "DESC",
									"description": "The order of sorting."
								},
								{
									"key": "type",
									"value": "GLOBAL",
									"description": "Indicates which type of responsibilities should be searched for. Usage is mutually exclusive with the deprecated globalOnly flag."
								}
							]
						},
						"description": "Returns responsibilities matching the given search criteria.  Only parameters that are specified in this request and have not <code>null</code> values are used for filtering.  All other parameters are ignored.  The returned responsibilities satisfy all constraints that are specified in this search criteria.  By default a result containing 1000 responsibilities is returned."
					},
					"response": [
						{
							"name": "default response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/responsibilities?offset=0&limit=0&countLimit=-1&resourceIds=<uuid>&ownerIds=<uuid>&roleIds=<uuid>&includeInherited=true&globalOnly=<boolean>&excludeEmptyGroups=<boolean>&sortField=LAST_MODIFIED&sortOrder=DESC&type=GLOBAL",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"responsibilities"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
										},
										{
											"key": "resourceIds",
											"value": "<uuid>",
											"description": "The list of IDs of the resources for which the responsibilities should be found."
										},
										{
											"key": "ownerIds",
											"value": "<uuid>",
											"description": "The list of IDs of the owners for which the responsibilities should be found."
										},
										{
											"key": "roleIds",
											"value": "<uuid>",
											"description": "The list of IDs of the roles for which the responsibilities should be found."
										},
										{
											"key": "includeInherited",
											"value": "true",
											"description": "Whether inherited responsibilities should be included in the search results."
										},
										{
											"key": "globalOnly",
											"value": "<boolean>",
											"description": "Whether only global responsibilities should be searched."
										},
										{
											"key": "excludeEmptyGroups",
											"value": "<boolean>",
											"description": "Whether responsibilities that are only assigned to empty groups should be excluded."
										},
										{
											"key": "sortField",
											"value": "LAST_MODIFIED",
											"description": "The field that should be used as reference for sorting."
										},
										{
											"key": "sortOrder",
											"value": "DESC",
											"description": "The order of sorting."
										},
										{
											"key": "type",
											"value": "GLOBAL",
											"description": "Indicates which type of responsibilities should be searched for. Usage is mutually exclusive with the deprecated globalOnly flag."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": \"<long>\",\n  \"offset\": \"<long>\",\n  \"limit\": \"<long>\",\n  \"results\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DateAttribute\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"role\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Job\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"baseResource\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ViewAssignmentRule\",\n        \"resourceDiscriminator\": \"<string>\"\n      },\n      \"owner\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"DateAttributeType\",\n        \"resourceDiscriminator\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Status\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"role\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"NumericAttribute\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"baseResource\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"NumericAttributeType\",\n        \"resourceDiscriminator\": \"<string>\"\n      },\n      \"owner\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ScriptAttribute\",\n        \"resourceDiscriminator\": \"<string>\"\n      }\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Adds a new responsibility.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ownerId\": \"<uuid>\",\n  \"roleId\": \"<uuid>\",\n  \"resourceId\": \"<uuid>\",\n  \"resourceType\": \"InstantMessagingAccount\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/responsibilities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"responsibilities"
							]
						},
						"description": "Adds new responsibility. Assigns given user to resource with given role."
					},
					"response": [
						{
							"name": "Responsibility successfully added.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ownerId\": \"<uuid>\",\n  \"roleId\": \"<uuid>\",\n  \"resourceId\": \"<uuid>\",\n  \"resourceType\": \"InstantMessagingAccount\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/responsibilities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"responsibilities"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"DomainType\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"role\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"DataQualityRule\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"baseResource\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Comment\",\n    \"resourceDiscriminator\": \"<string>\"\n  },\n  \"owner\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"WorkflowTask\",\n    \"resourceDiscriminator\": \"<string>\"\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "tags",
			"item": [
				{
					"name": "{tagId}",
					"item": [
						{
							"name": "Get tag.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tags/:tagId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags",
										":tagId"
									],
									"variable": [
										{
											"key": "tagId",
											"value": "<uuid>",
											"description": "(Required) The ID of the tag."
										}
									]
								},
								"description": "Returns the tag with the specified ID."
							},
							"response": [
								{
									"name": "Tag successfully found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tags/:tagId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												":tagId"
											],
											"variable": [
												{
													"key": "tagId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Assignment\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"assetsCount\": \"<integer>\"\n}"
								},
								{
									"name": "Tag could not be found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tags/:tagId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												":tagId"
											],
											"variable": [
												{
													"key": "tagId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Remove tag.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tags/:tagId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags",
										":tagId"
									],
									"variable": [
										{
											"key": "tagId",
											"value": "<uuid>",
											"description": "(Required) The ID of the tag."
										}
									]
								},
								"description": "Removes the tag with the specified ID."
							},
							"response": [
								{
									"name": "Tag successfully removed.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tags/:tagId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												":tagId"
											],
											"variable": [
												{
													"key": "tagId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Tag with given ID could not be found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tags/:tagId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												":tagId"
											],
											"variable": [
												{
													"key": "tagId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Change tag.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/tags/:tagId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags",
										":tagId"
									],
									"variable": [
										{
											"key": "tagId",
											"value": "<uuid>",
											"description": "(Required) The ID of the tag to be changed."
										}
									]
								},
								"description": "Modifies the tag with the specified ID."
							},
							"response": [
								{
									"name": "Tag successfully changed.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tags/:tagId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												":tagId"
											],
											"variable": [
												{
													"key": "tagId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Assignment\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"assetsCount\": \"<integer>\"\n}"
								},
								{
									"name": "Tag could not be found.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tags/:tagId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												":tagId"
											],
											"variable": [
												{
													"key": "tagId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "exists",
					"item": [
						{
							"name": "{tagName}",
							"item": [
								{
									"name": "Check tag name.",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tags/exists/:tagName?encoded=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												"exists",
												":tagName"
											],
											"query": [
												{
													"key": "encoded",
													"value": "false",
													"description": "Whether the tag name is encoded using URL and Filename safe type base64 encoding scheme."
												}
											],
											"variable": [
												{
													"key": "tagName",
													"value": "<string>",
													"description": "(Required) The name of the tag."
												}
											]
										},
										"description": "Checks whether a tag with given name exists. Returns <code>true</code> if a tag with given name exists, <code>false</code> otherwise."
									},
									"response": [
										{
											"name": "true if a tag exists, false otherwise.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tags/exists/:tagName?encoded=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tags",
														"exists",
														":tagName"
													],
													"query": [
														{
															"key": "encoded",
															"value": "false",
															"description": "Whether the tag name is encoded using URL and Filename safe type base64 encoding scheme."
														}
													],
													"variable": [
														{
															"key": "tagName"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "<boolean>"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "asset",
					"item": [
						{
							"name": "{assetId}",
							"item": [
								{
									"name": "Get asset tags.",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tags/asset/:assetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												"asset",
												":assetId"
											],
											"variable": [
												{
													"key": "assetId",
													"value": "<uuid>",
													"description": "(Required) The ID of the asset."
												}
											]
										},
										"description": "Returns all the tags of the asset with the specified ID."
									},
									"response": [
										{
											"name": "Tags of given asset.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tags/asset/:assetId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tags",
														"asset",
														":assetId"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"DomainType\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"assetsCount\": \"<integer>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Email\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"assetsCount\": \"<integer>\"\n  }\n]"
										},
										{
											"name": "No tags found for asset.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tags/asset/:assetId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tags",
														"asset",
														":assetId"
													],
													"variable": [
														{
															"key": "assetId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "merge",
					"item": [
						{
							"name": "Merge tags.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fromId\": \"<uuid>\",\n  \"toId\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/tags/merge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags",
										"merge"
									]
								},
								"description": "Merges two tags into one. All assets tagged with the fromId tag receive the toId tag and the fromId tag is removed."
							},
							"response": [
								{
									"name": "Tags successfully merged.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"fromId\": \"<uuid>\",\n  \"toId\": \"<uuid>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tags/merge",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												"merge"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Tag with ID fromId or toId could not be found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"fromId\": \"<uuid>\",\n  \"toId\": \"<uuid>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tags/merge",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												"merge"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "bulk",
					"item": [
						{
							"name": "Remove tags.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/tags/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags",
										"bulk"
									]
								},
								"description": "Removes multiple tags with the specified IDs."
							},
							"response": [
								{
									"name": "All tags successfully removed.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tags/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												"bulk"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Any tag with given ID could not be found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tags/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												"bulk"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Find tags.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tags?offset=0&limit=0&countLimit=-1&name=<string>&nameMatchMode=ANYWHERE",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
								},
								{
									"key": "limit",
									"value": "0",
									"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
								},
								{
									"key": "countLimit",
									"value": "-1",
									"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "The name of the tag to search for."
								},
								{
									"key": "nameMatchMode",
									"value": "ANYWHERE",
									"description": "The match mode used to compare <code>name</code>. If the match mode is <code>EXACT</code> the search is case-sensitive, otherwise the search is case-insensitive."
								}
							]
						},
						"description": "Returns tags matching the given search criteria.The returned tags satisfy all constraints that are specified in this search criteria. By default, the result contains 1000 tags."
					},
					"response": [
						{
							"name": "The paged response with found tags.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tags?offset=0&limit=0&countLimit=-1&name=<string>&nameMatchMode=ANYWHERE",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "The name of the tag to search for."
										},
										{
											"key": "nameMatchMode",
											"value": "ANYWHERE",
											"description": "The match mode used to compare <code>name</code>. If the match mode is <code>EXACT</code> the search is case-sensitive, otherwise the search is case-insensitive."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": \"<long>\",\n  \"offset\": \"<long>\",\n  \"limit\": \"<long>\",\n  \"results\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ExcelIngestionProperties\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"assetsCount\": \"<integer>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"AttributeType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"assetsCount\": \"<integer>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "jobs",
			"item": [
				{
					"name": "{jobId}",
					"item": [
						{
							"name": "canceled",
							"item": [
								{
									"name": "Cancels given Job.",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"message\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/jobs/:jobId/canceled",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"jobs",
												":jobId",
												"canceled"
											],
											"variable": [
												{
													"key": "jobId",
													"value": "<uuid>",
													"description": "(Required) The unique identifier of the Job."
												}
											]
										},
										"description": "Calling this endpoint will return immediately and not wait until the Job is actually stopped."
									},
									"response": [
										{
											"name": "Job cancellation accepted.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"message\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/jobs/:jobId/canceled",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"jobs",
														":jobId",
														"canceled"
													],
													"variable": [
														{
															"key": "jobId"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Returns the Job identified by the given UUID.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/jobs/:jobId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"jobs",
										":jobId"
									],
									"variable": [
										{
											"key": "jobId",
											"value": "<uuid>",
											"description": "(Required) The ID of the job."
										}
									]
								},
								"description": "Returns the Job identified by the given UUID."
							},
							"response": [
								{
									"name": "Job found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/jobs/:jobId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"jobs",
												":jobId"
											],
											"variable": [
												{
													"key": "jobId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Website\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"userId\": \"<uuid>\",\n  \"visibility\": \"<integer>\",\n  \"progressPercentage\": \"<double>\",\n  \"cancelable\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"state\": \"CANCELING\",\n  \"result\": \"NOT_SET\",\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Job not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/jobs/:jobId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"jobs",
												":jobId"
											],
											"variable": [
												{
													"key": "jobId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Find jobs",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/jobs?offset=0&limit=0&countLimit=-1&createdBy=<uuid>&name=<string>&nameMatchMode=ANYWHERE&states=CANCELED&states=CANCELING&results=NOT_SET&results=FAILURE&types=<string>&types=<string>&maxVisibility=2147483647&visible=<boolean>&sortOrder=DESC&sortField=CREATED_ON",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"jobs"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
								},
								{
									"key": "limit",
									"value": "0",
									"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
								},
								{
									"key": "countLimit",
									"value": "-1",
									"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
								},
								{
									"key": "createdBy",
									"value": "<uuid>",
									"description": "The ID of the user who created the searched job."
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "The name of the job to search for."
								},
								{
									"key": "nameMatchMode",
									"value": "ANYWHERE",
									"description": "The match mode used to compare <code>name</code>. If the match mode is <code>EXACT</code> the search is case-sensitive, otherwise the search is case-insensitive."
								},
								{
									"key": "states",
									"value": "CANCELED",
									"description": "The list of states which the jobs should be searched for."
								},
								{
									"key": "states",
									"value": "CANCELING",
									"description": "The list of states which the jobs should be searched for."
								},
								{
									"key": "results",
									"value": "NOT_SET",
									"description": "The list of results which the jobs should be searched for."
								},
								{
									"key": "results",
									"value": "FAILURE",
									"description": "The list of results which the jobs should be searched for."
								},
								{
									"key": "types",
									"value": "<string>",
									"description": "The list of types of the jobs."
								},
								{
									"key": "types",
									"value": "<string>",
									"description": "The list of types of the jobs."
								},
								{
									"key": "maxVisibility",
									"value": "2147483647",
									"description": "The maximum visibility of the job. Ignored, use visible instead"
								},
								{
									"key": "visible",
									"value": "<boolean>",
									"description": "The visibility of the jobs. Defaults to all jobs (both visible and non-visible)."
								},
								{
									"key": "sortOrder",
									"value": "DESC",
									"description": "The order of sorting."
								},
								{
									"key": "sortField",
									"value": "CREATED_ON",
									"description": "The field that should be used as reference for sorting."
								}
							]
						},
						"description": "Returns jobs matching the given search criteria. Only parameters that are specified in this request and have not <code>null</code> values are used for filtering. All other parameters are ignored."
					},
					"response": [
						{
							"name": "The paged response with jobs matching filter criteria",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/jobs?offset=0&limit=0&countLimit=-1&createdBy=<uuid>&name=<string>&nameMatchMode=ANYWHERE&states=CANCELING&results=FAILURE&types=<string>&maxVisibility=2147483647&visible=<boolean>&sortOrder=DESC&sortField=CREATED_ON",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"jobs"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
										},
										{
											"key": "createdBy",
											"value": "<uuid>",
											"description": "The ID of the user who created the searched job."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "The name of the job to search for."
										},
										{
											"key": "nameMatchMode",
											"value": "ANYWHERE",
											"description": "The match mode used to compare <code>name</code>. If the match mode is <code>EXACT</code> the search is case-sensitive, otherwise the search is case-insensitive."
										},
										{
											"key": "states",
											"value": "CANCELING",
											"description": "The list of states which the jobs should be searched for."
										},
										{
											"key": "results",
											"value": "FAILURE",
											"description": "The list of results which the jobs should be searched for."
										},
										{
											"key": "types",
											"value": "<string>",
											"description": "The list of types of the jobs."
										},
										{
											"key": "maxVisibility",
											"value": "2147483647",
											"description": "The maximum visibility of the job. Ignored, use visible instead"
										},
										{
											"key": "visible",
											"value": "<boolean>",
											"description": "The visibility of the jobs. Defaults to all jobs (both visible and non-visible)."
										},
										{
											"key": "sortOrder",
											"value": "DESC",
											"description": "The order of sorting."
										},
										{
											"key": "sortField",
											"value": "CREATED_ON",
											"description": "The field that should be used as reference for sorting."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": \"<long>\",\n  \"offset\": \"<long>\",\n  \"limit\": \"<long>\",\n  \"results\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Scope\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"userId\": \"<uuid>\",\n      \"visibility\": \"<integer>\",\n      \"progressPercentage\": \"<double>\",\n      \"cancelable\": \"<boolean>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\",\n      \"state\": \"CANCELED\",\n      \"result\": \"COMPLETED_WITH_ERROR\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"View\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"userId\": \"<uuid>\",\n      \"visibility\": \"<integer>\",\n      \"progressPercentage\": \"<double>\",\n      \"cancelable\": \"<boolean>\",\n      \"startDate\": \"<long>\",\n      \"endDate\": \"<long>\",\n      \"state\": \"ERROR\",\n      \"result\": \"FAILURE\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "license",
			"item": [
				{
					"name": "capabilities",
					"item": [
						{
							"name": "Check capabilities status",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/license/capabilities?name=<string>&name=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"license",
										"capabilities"
									],
									"query": [
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "name",
											"value": "<string>"
										}
									]
								},
								"description": "Checks whether the specified capabilities are enabled based on a list of capability names."
							},
							"response": [
								{
									"name": "A map of capability names to their status indicating whether they are enabled.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/license/capabilities?name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"license",
												"capabilities"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"examples\": {\n    \"example\": {\n      \"description\": \"example\",\n      \"value\": {\n        \"HELPDESK\": {\n          \"enabled\": true\n        }\n      }\n    }\n  }\n}"
								},
								{
									"name": "One or more specified capabilities were not found.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/license/capabilities?name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"license",
												"capabilities"
											],
											"query": [
												{
													"key": "name",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "mappings",
			"item": [
				{
					"name": "bulk",
					"item": [
						{
							"name": "Adds new mappings.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"externalEntityId\": \"<string>\",\n    \"externalSystemId\": \"<string>\",\n    \"mappedResourceId\": \"<uuid>\",\n    \"id\": \"<uuid>\",\n    \"externalEntityUrl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"lastSyncDate\": \"<long>\",\n    \"syncAction\": \"UPDATE\"\n  },\n  {\n    \"externalEntityId\": \"<string>\",\n    \"externalSystemId\": \"<string>\",\n    \"mappedResourceId\": \"<uuid>\",\n    \"id\": \"<uuid>\",\n    \"externalEntityUrl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"lastSyncDate\": \"<long>\",\n    \"syncAction\": \"ADD\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/mappings/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mappings",
										"bulk"
									]
								},
								"description": "Adds new mappings."
							},
							"response": [
								{
									"name": "Mappings successfully added.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"externalEntityId\": \"<string>\",\n    \"externalSystemId\": \"<string>\",\n    \"mappedResourceId\": \"<uuid>\",\n    \"id\": \"<uuid>\",\n    \"externalEntityUrl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"lastSyncDate\": \"<long>\",\n    \"syncAction\": \"UPDATE\"\n  },\n  {\n    \"externalEntityId\": \"<string>\",\n    \"externalSystemId\": \"<string>\",\n    \"mappedResourceId\": \"<uuid>\",\n    \"id\": \"<uuid>\",\n    \"externalEntityUrl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"lastSyncDate\": \"<long>\",\n    \"syncAction\": \"ADD\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/mappings/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												"bulk"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Role\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"externalSystemId\": \"<string>\",\n    \"externalEntityId\": \"<string>\",\n    \"externalEntityUrl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mappedResource\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DateTimeAttributeType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"lastSyncDate\": \"<long>\",\n    \"syncAction\": \"ADD, UPDATE, REMOVE\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"WorkflowTask\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"externalSystemId\": \"<string>\",\n    \"externalEntityId\": \"<string>\",\n    \"externalEntityUrl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mappedResource\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ExcelIngestionProperties\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"lastSyncDate\": \"<long>\",\n    \"syncAction\": \"REMOVE\"\n  }\n]"
								}
							]
						},
						{
							"name": "Changes multiple mappings identified by their ids.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"externalSystemId\": \"<string>\",\n    \"externalEntityId\": \"<string>\",\n    \"externalEntityUrl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mappedResourceId\": \"<uuid>\",\n    \"lastSyncDate\": \"<long>\",\n    \"syncAction\": \"ADD\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"externalSystemId\": \"<string>\",\n    \"externalEntityId\": \"<string>\",\n    \"externalEntityUrl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mappedResourceId\": \"<uuid>\",\n    \"lastSyncDate\": \"<long>\",\n    \"syncAction\": \"UPDATE\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/mappings/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mappings",
										"bulk"
									]
								},
								"description": "<p>Change the mappings identified by its <code>id</code>s with the information that is present in the requests. Only properties that are specified in these requests and have not <code>null</code> values are updated. All other properties are ignored.</p>"
							},
							"response": [
								{
									"name": "Mappings successfully changed.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"externalSystemId\": \"<string>\",\n    \"externalEntityId\": \"<string>\",\n    \"externalEntityUrl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mappedResourceId\": \"<uuid>\",\n    \"lastSyncDate\": \"<long>\",\n    \"syncAction\": \"ADD\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"externalSystemId\": \"<string>\",\n    \"externalEntityId\": \"<string>\",\n    \"externalEntityUrl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mappedResourceId\": \"<uuid>\",\n    \"lastSyncDate\": \"<long>\",\n    \"syncAction\": \"UPDATE\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/mappings/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												"bulk"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Role\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"externalSystemId\": \"<string>\",\n    \"externalEntityId\": \"<string>\",\n    \"externalEntityUrl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mappedResource\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DateTimeAttributeType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"lastSyncDate\": \"<long>\",\n    \"syncAction\": \"ADD, UPDATE, REMOVE\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"WorkflowTask\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"externalSystemId\": \"<string>\",\n    \"externalEntityId\": \"<string>\",\n    \"externalEntityUrl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mappedResource\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ExcelIngestionProperties\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"lastSyncDate\": \"<long>\",\n    \"syncAction\": \"REMOVE\"\n  }\n]"
								},
								{
									"name": "One of the mappings could not be found.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"externalSystemId\": \"<string>\",\n    \"externalEntityId\": \"<string>\",\n    \"externalEntityUrl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mappedResourceId\": \"<uuid>\",\n    \"lastSyncDate\": \"<long>\",\n    \"syncAction\": \"ADD\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"externalSystemId\": \"<string>\",\n    \"externalEntityId\": \"<string>\",\n    \"externalEntityUrl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mappedResourceId\": \"<uuid>\",\n    \"lastSyncDate\": \"<long>\",\n    \"syncAction\": \"UPDATE\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/mappings/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												"bulk"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "{mappingId}",
					"item": [
						{
							"name": "Returns a mapping identified by given id.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/mappings/:mappingId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mappings",
										":mappingId"
									],
									"variable": [
										{
											"key": "mappingId",
											"value": "<uuid>",
											"description": "(Required) The id of the mapping."
										}
									]
								},
								"description": "Returns a mapping identified by given <code>id</code>."
							},
							"response": [
								{
									"name": "Mapping successfully found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mappings/:mappingId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												":mappingId"
											],
											"variable": [
												{
													"key": "mappingId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"User\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"externalSystemId\": \"<string>\",\n  \"externalEntityId\": \"<string>\",\n  \"externalEntityUrl\": \"<string>\",\n  \"description\": \"<string>\",\n  \"mappedResource\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Address\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"lastSyncDate\": \"<long>\",\n  \"syncAction\": \"ADD, UPDATE, REMOVE\"\n}"
								},
								{
									"name": "Mapping could not be found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mappings/:mappingId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												":mappingId"
											],
											"variable": [
												{
													"key": "mappingId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Removes the mapping identified by its id.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/mappings/:mappingId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mappings",
										":mappingId"
									],
									"variable": [
										{
											"key": "mappingId",
											"value": "<uuid>",
											"description": "(Required) The id of the mapping."
										}
									]
								},
								"description": "Removes the mapping identified by its <code>id</code>.<p>If the mapping does not exist, an exception is NOT thrown."
							},
							"response": [
								{
									"name": "Mapping successfully removed.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/mappings/:mappingId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												":mappingId"
											],
											"variable": [
												{
													"key": "mappingId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Changes the mapping identified by its id.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<uuid>\",\n  \"externalSystemId\": \"<string>\",\n  \"externalEntityId\": \"<string>\",\n  \"externalEntityUrl\": \"<string>\",\n  \"description\": \"<string>\",\n  \"mappedResourceId\": \"<uuid>\",\n  \"lastSyncDate\": \"<long>\",\n  \"syncAction\": \"UPDATE\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/mappings/:mappingId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mappings",
										":mappingId"
									],
									"variable": [
										{
											"key": "mappingId",
											"value": "<uuid>",
											"description": "(Required) The ID of the mapping to be changed."
										}
									]
								},
								"description": "<p>Change the mapping identified by its <code>id</code> with the information that is present in the request. Only properties that are specified in this request and have not <code>null</code> values are updated. All other properties are ignored.</p>"
							},
							"response": [
								{
									"name": "Mapping successfully changed.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"externalSystemId\": \"<string>\",\n  \"externalEntityId\": \"<string>\",\n  \"externalEntityUrl\": \"<string>\",\n  \"description\": \"<string>\",\n  \"mappedResourceId\": \"<uuid>\",\n  \"lastSyncDate\": \"<long>\",\n  \"syncAction\": \"UPDATE\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/mappings/:mappingId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												":mappingId"
											],
											"variable": [
												{
													"key": "mappingId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"User\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"externalSystemId\": \"<string>\",\n  \"externalEntityId\": \"<string>\",\n  \"externalEntityUrl\": \"<string>\",\n  \"description\": \"<string>\",\n  \"mappedResource\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Address\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"lastSyncDate\": \"<long>\",\n  \"syncAction\": \"ADD, UPDATE, REMOVE\"\n}"
								},
								{
									"name": "Mapping could not be found.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"externalSystemId\": \"<string>\",\n  \"externalEntityId\": \"<string>\",\n  \"externalEntityUrl\": \"<string>\",\n  \"description\": \"<string>\",\n  \"mappedResourceId\": \"<uuid>\",\n  \"lastSyncDate\": \"<long>\",\n  \"syncAction\": \"UPDATE\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/mappings/:mappingId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												":mappingId"
											],
											"variable": [
												{
													"key": "mappingId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "externalSystem",
					"item": [
						{
							"name": "{externalSystemId}",
							"item": [
								{
									"name": "externalEntity",
									"item": [
										{
											"name": "{externalEntityId}",
											"item": [
												{
													"name": "Returns a mapping identified by its external ids.",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/mappings/externalSystem/:externalSystemId/externalEntity/:externalEntityId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"mappings",
																"externalSystem",
																":externalSystemId",
																"externalEntity",
																":externalEntityId"
															],
															"variable": [
																{
																	"key": "externalSystemId",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "externalEntityId",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														},
														"description": "Returns a mapping identified by its external <code>id</code>s."
													},
													"response": [
														{
															"name": "Mapping successfully found.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/mappings/externalSystem/:externalSystemId/externalEntity/:externalEntityId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"mappings",
																		"externalSystem",
																		":externalSystemId",
																		"externalEntity",
																		":externalEntityId"
																	],
																	"variable": [
																		{
																			"key": "externalSystemId"
																		},
																		{
																			"key": "externalEntityId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"User\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"externalSystemId\": \"<string>\",\n  \"externalEntityId\": \"<string>\",\n  \"externalEntityUrl\": \"<string>\",\n  \"description\": \"<string>\",\n  \"mappedResource\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Address\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"lastSyncDate\": \"<long>\",\n  \"syncAction\": \"ADD, UPDATE, REMOVE\"\n}"
														},
														{
															"name": "Mapping could not be found.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/mappings/externalSystem/:externalSystemId/externalEntity/:externalEntityId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"mappings",
																		"externalSystem",
																		":externalSystemId",
																		"externalEntity",
																		":externalEntityId"
																	],
																	"variable": [
																		{
																			"key": "externalSystemId"
																		},
																		{
																			"key": "externalEntityId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Removes the mapping identified by its external ids.",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/mappings/externalSystem/:externalSystemId/externalEntity/:externalEntityId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"mappings",
																"externalSystem",
																":externalSystemId",
																"externalEntity",
																":externalEntityId"
															],
															"variable": [
																{
																	"key": "externalSystemId",
																	"value": "<string>",
																	"description": "(Required) The external system id of the mapping to be removed."
																},
																{
																	"key": "externalEntityId",
																	"value": "<string>",
																	"description": "(Required) The external entity id of the mapping to be removed."
																}
															]
														},
														"description": "Removes the mapping identified by its external <code>id</code>s.<p>If the mapping does not exist, an exception is NOT thrown."
													},
													"response": [
														{
															"name": "Mapping successfully removed.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/mappings/externalSystem/:externalSystemId/externalEntity/:externalEntityId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"mappings",
																		"externalSystem",
																		":externalSystemId",
																		"externalEntity",
																		":externalEntityId"
																	],
																	"variable": [
																		{
																			"key": "externalSystemId"
																		},
																		{
																			"key": "externalEntityId"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Changes the mapping identified by its external ids.",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"externalEntityId\": \"<string>\",\n  \"externalSystemId\": \"<string>\",\n  \"externalEntityUrl\": \"<string>\",\n  \"description\": \"<string>\",\n  \"mappedResourceId\": \"<uuid>\",\n  \"lastSyncDate\": \"<long>\",\n  \"syncAction\": \"ADD\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/mappings/externalSystem/:externalSystemId/externalEntity/:externalEntityId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"mappings",
																"externalSystem",
																":externalSystemId",
																"externalEntity",
																":externalEntityId"
															],
															"variable": [
																{
																	"key": "externalSystemId",
																	"value": "<string>",
																	"description": "(Required) The external system ID of the mapping to be changed."
																},
																{
																	"key": "externalEntityId",
																	"value": "<string>",
																	"description": "(Required) The external entity ID of the mapping to be changed."
																}
															]
														},
														"description": "<p>Changes the mapping identified by its external <code>id</code>s with the information that is present in the request. Only properties that are specified in this request and have not <code>null</code> values are updated. All other properties are ignored.</p>"
													},
													"response": [
														{
															"name": "Mapping successfully changed.",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"externalEntityId\": \"<string>\",\n  \"externalSystemId\": \"<string>\",\n  \"externalEntityUrl\": \"<string>\",\n  \"description\": \"<string>\",\n  \"mappedResourceId\": \"<uuid>\",\n  \"lastSyncDate\": \"<long>\",\n  \"syncAction\": \"ADD\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/mappings/externalSystem/:externalSystemId/externalEntity/:externalEntityId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"mappings",
																		"externalSystem",
																		":externalSystemId",
																		"externalEntity",
																		":externalEntityId"
																	],
																	"variable": [
																		{
																			"key": "externalSystemId"
																		},
																		{
																			"key": "externalEntityId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"User\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"externalSystemId\": \"<string>\",\n  \"externalEntityId\": \"<string>\",\n  \"externalEntityUrl\": \"<string>\",\n  \"description\": \"<string>\",\n  \"mappedResource\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Address\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"lastSyncDate\": \"<long>\",\n  \"syncAction\": \"ADD, UPDATE, REMOVE\"\n}"
														},
														{
															"name": "Mapping could not be found.",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"externalEntityId\": \"<string>\",\n  \"externalSystemId\": \"<string>\",\n  \"externalEntityUrl\": \"<string>\",\n  \"description\": \"<string>\",\n  \"mappedResourceId\": \"<uuid>\",\n  \"lastSyncDate\": \"<long>\",\n  \"syncAction\": \"ADD\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/mappings/externalSystem/:externalSystemId/externalEntity/:externalEntityId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"mappings",
																		"externalSystem",
																		":externalSystemId",
																		"externalEntity",
																		":externalEntityId"
																	],
																	"variable": [
																		{
																			"key": "externalSystemId"
																		},
																		{
																			"key": "externalEntityId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "mappedResource",
									"item": [
										{
											"name": "{mappedResourceId}",
											"item": [
												{
													"name": "Returns a mapping identified by its external system id and mapped resource id.",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/mappings/externalSystem/:externalSystemId/mappedResource/:mappedResourceId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"mappings",
																"externalSystem",
																":externalSystemId",
																"mappedResource",
																":mappedResourceId"
															],
															"variable": [
																{
																	"key": "externalSystemId",
																	"value": "<string>",
																	"description": "(Required) "
																},
																{
																	"key": "mappedResourceId",
																	"value": "<uuid>",
																	"description": "(Required) "
																}
															]
														},
														"description": "Returns a mapping identified by its external system <code>id</code> and mapped resource <code>id</code>."
													},
													"response": [
														{
															"name": "Mapping successfully found.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/mappings/externalSystem/:externalSystemId/mappedResource/:mappedResourceId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"mappings",
																		"externalSystem",
																		":externalSystemId",
																		"mappedResource",
																		":mappedResourceId"
																	],
																	"variable": [
																		{
																			"key": "externalSystemId"
																		},
																		{
																			"key": "mappedResourceId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"User\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"externalSystemId\": \"<string>\",\n  \"externalEntityId\": \"<string>\",\n  \"externalEntityUrl\": \"<string>\",\n  \"description\": \"<string>\",\n  \"mappedResource\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Address\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"lastSyncDate\": \"<long>\",\n  \"syncAction\": \"ADD, UPDATE, REMOVE\"\n}"
														},
														{
															"name": "Mapping could not be found.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/mappings/externalSystem/:externalSystemId/mappedResource/:mappedResourceId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"mappings",
																		"externalSystem",
																		":externalSystemId",
																		"mappedResource",
																		":mappedResourceId"
																	],
																	"variable": [
																		{
																			"key": "externalSystemId"
																		},
																		{
																			"key": "mappedResourceId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Removes the mapping identified by its external system id and mapped resource id.",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/mappings/externalSystem/:externalSystemId/mappedResource/:mappedResourceId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"mappings",
																"externalSystem",
																":externalSystemId",
																"mappedResource",
																":mappedResourceId"
															],
															"variable": [
																{
																	"key": "externalSystemId",
																	"value": "<string>",
																	"description": "(Required) The external system id of the mapping to be changed."
																},
																{
																	"key": "mappedResourceId",
																	"value": "<string>",
																	"description": "(Required) The mapped resource id of the mapping to be changed."
																}
															]
														},
														"description": "Removes the mapping identified by its external system <code>id</code> and mapped resource <code>id</code>.<p>If the mapping does not exist, an exception is NOT thrown."
													},
													"response": [
														{
															"name": "Mapping successfully removed.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/mappings/externalSystem/:externalSystemId/mappedResource/:mappedResourceId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"mappings",
																		"externalSystem",
																		":externalSystemId",
																		"mappedResource",
																		":mappedResourceId"
																	],
																	"variable": [
																		{
																			"key": "externalSystemId"
																		},
																		{
																			"key": "mappedResourceId"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Changes the mapping identified by its external system id and mapped resource id.",
													"request": {
														"auth": {
															"type": "basic",
															"basic": [
																{
																	"key": "username",
																	"value": "{{basicAuthUsername}}",
																	"type": "string"
																},
																{
																	"key": "password",
																	"value": "{{basicAuthPassword}}",
																	"type": "string"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"externalSystemId\": \"<string>\",\n  \"mappedResourceId\": \"<uuid>\",\n  \"externalEntityUrl\": \"<string>\",\n  \"description\": \"<string>\",\n  \"lastSyncDate\": \"<long>\",\n  \"syncAction\": \"ADD\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/mappings/externalSystem/:externalSystemId/mappedResource/:mappedResourceId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"mappings",
																"externalSystem",
																":externalSystemId",
																"mappedResource",
																":mappedResourceId"
															],
															"variable": [
																{
																	"key": "externalSystemId",
																	"value": "<string>",
																	"description": "(Required) The external system id of the mapping to be changed."
																},
																{
																	"key": "mappedResourceId",
																	"value": "<uuid>",
																	"description": "(Required) The mapped resource id of the mapping to be changed."
																}
															]
														},
														"description": "<p>Changes the mapping identified by its external system <code>id</code> and mapped resource <code>id</code> with the information that is present in the requests. Only properties that are specified in this request and have not <code>null</code> values are updated. All other properties are ignored.</p>"
													},
													"response": [
														{
															"name": "Mapping successfully changed.",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"externalSystemId\": \"<string>\",\n  \"mappedResourceId\": \"<uuid>\",\n  \"externalEntityUrl\": \"<string>\",\n  \"description\": \"<string>\",\n  \"lastSyncDate\": \"<long>\",\n  \"syncAction\": \"ADD\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/mappings/externalSystem/:externalSystemId/mappedResource/:mappedResourceId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"mappings",
																		"externalSystem",
																		":externalSystemId",
																		"mappedResource",
																		":mappedResourceId"
																	],
																	"variable": [
																		{
																			"key": "externalSystemId"
																		},
																		{
																			"key": "mappedResourceId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"User\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"externalSystemId\": \"<string>\",\n  \"externalEntityId\": \"<string>\",\n  \"externalEntityUrl\": \"<string>\",\n  \"description\": \"<string>\",\n  \"mappedResource\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Address\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"lastSyncDate\": \"<long>\",\n  \"syncAction\": \"ADD, UPDATE, REMOVE\"\n}"
														},
														{
															"name": "Mapping could not be found.",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic <credentials>",
																		"description": "Added as a part of security scheme: basic"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"externalSystemId\": \"<string>\",\n  \"mappedResourceId\": \"<uuid>\",\n  \"externalEntityUrl\": \"<string>\",\n  \"description\": \"<string>\",\n  \"lastSyncDate\": \"<long>\",\n  \"syncAction\": \"ADD\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/mappings/externalSystem/:externalSystemId/mappedResource/:mappedResourceId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"mappings",
																		"externalSystem",
																		":externalSystemId",
																		"mappedResource",
																		":mappedResourceId"
																	],
																	"variable": [
																		{
																			"key": "externalSystemId"
																		},
																		{
																			"key": "mappedResourceId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "removalJobs",
									"item": [
										{
											"name": "Removes all the mappings identified by given external system id.",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/mappings/externalSystem/:externalSystemId/removalJobs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mappings",
														"externalSystem",
														":externalSystemId",
														"removalJobs"
													],
													"variable": [
														{
															"key": "externalSystemId",
															"value": "<string>",
															"description": "(Required) The id of the external system of the mappings that will be removed."
														}
													]
												},
												"description": "Removes all the mappings identified by given external system <code>id</code>."
											},
											"response": [
												{
													"name": "Mappings removal successfully started.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/mappings/externalSystem/:externalSystemId/removalJobs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"mappings",
																"externalSystem",
																":externalSystemId",
																"removalJobs"
															],
															"variable": [
																{
																	"key": "externalSystemId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Website\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"userId\": \"<uuid>\",\n  \"visibility\": \"<integer>\",\n  \"progressPercentage\": \"<double>\",\n  \"cancelable\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"state\": \"CANCELING\",\n  \"result\": \"NOT_SET\",\n  \"message\": \"<string>\"\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "externalEntity",
							"item": [
								{
									"name": "bulk",
									"item": [
										{
											"name": "Changes the mappings identified by their external ids.",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"externalEntityId\": \"<string>\",\n    \"externalSystemId\": \"<string>\",\n    \"externalEntityUrl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mappedResourceId\": \"<uuid>\",\n    \"lastSyncDate\": \"<long>\",\n    \"syncAction\": \"ADD\"\n  },\n  {\n    \"externalEntityId\": \"<string>\",\n    \"externalSystemId\": \"<string>\",\n    \"externalEntityUrl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mappedResourceId\": \"<uuid>\",\n    \"lastSyncDate\": \"<long>\",\n    \"syncAction\": \"ADD\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/mappings/externalSystem/externalEntity/bulk",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mappings",
														"externalSystem",
														"externalEntity",
														"bulk"
													]
												},
												"description": "<p>Changes the mappings identified by their external <code>id</code>s with the information that is present in the requests. Only properties that are specified in these requests and have not <code>null</code> values are updated. All other properties are ignored.</p>"
											},
											"response": [
												{
													"name": "Mappings successfully changed.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"externalEntityId\": \"<string>\",\n    \"externalSystemId\": \"<string>\",\n    \"externalEntityUrl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mappedResourceId\": \"<uuid>\",\n    \"lastSyncDate\": \"<long>\",\n    \"syncAction\": \"ADD\"\n  },\n  {\n    \"externalEntityId\": \"<string>\",\n    \"externalSystemId\": \"<string>\",\n    \"externalEntityUrl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mappedResourceId\": \"<uuid>\",\n    \"lastSyncDate\": \"<long>\",\n    \"syncAction\": \"ADD\"\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/mappings/externalSystem/externalEntity/bulk",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"mappings",
																"externalSystem",
																"externalEntity",
																"bulk"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Role\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"externalSystemId\": \"<string>\",\n    \"externalEntityId\": \"<string>\",\n    \"externalEntityUrl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mappedResource\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DateTimeAttributeType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"lastSyncDate\": \"<long>\",\n    \"syncAction\": \"ADD, UPDATE, REMOVE\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"WorkflowTask\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"externalSystemId\": \"<string>\",\n    \"externalEntityId\": \"<string>\",\n    \"externalEntityUrl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mappedResource\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ExcelIngestionProperties\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"lastSyncDate\": \"<long>\",\n    \"syncAction\": \"REMOVE\"\n  }\n]"
												},
												{
													"name": "One of the mappings could not be found.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"externalEntityId\": \"<string>\",\n    \"externalSystemId\": \"<string>\",\n    \"externalEntityUrl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mappedResourceId\": \"<uuid>\",\n    \"lastSyncDate\": \"<long>\",\n    \"syncAction\": \"ADD\"\n  },\n  {\n    \"externalEntityId\": \"<string>\",\n    \"externalSystemId\": \"<string>\",\n    \"externalEntityUrl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mappedResourceId\": \"<uuid>\",\n    \"lastSyncDate\": \"<long>\",\n    \"syncAction\": \"ADD\"\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/mappings/externalSystem/externalEntity/bulk",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"mappings",
																"externalSystem",
																"externalEntity",
																"bulk"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "mappedResource",
							"item": [
								{
									"name": "bulk",
									"item": [
										{
											"name": "Changes the mapping identified by their external system ids and mapped resource ids.",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"externalSystemId\": \"<string>\",\n    \"mappedResourceId\": \"<uuid>\",\n    \"externalEntityUrl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"lastSyncDate\": \"<long>\",\n    \"syncAction\": \"UPDATE\"\n  },\n  {\n    \"externalSystemId\": \"<string>\",\n    \"mappedResourceId\": \"<uuid>\",\n    \"externalEntityUrl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"lastSyncDate\": \"<long>\",\n    \"syncAction\": \"ADD\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/mappings/externalSystem/mappedResource/bulk",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"mappings",
														"externalSystem",
														"mappedResource",
														"bulk"
													]
												},
												"description": "<p>Changes the mapping identified by their external system <code>id</code>s and mapped resource <code>id</code>s with the information that is present in the requests. Only properties that are specified in these requests and have not <code>null</code> values are updated. All other properties are ignored.</p>"
											},
											"response": [
												{
													"name": "Mappings successfully changed.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"externalSystemId\": \"<string>\",\n    \"mappedResourceId\": \"<uuid>\",\n    \"externalEntityUrl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"lastSyncDate\": \"<long>\",\n    \"syncAction\": \"UPDATE\"\n  },\n  {\n    \"externalSystemId\": \"<string>\",\n    \"mappedResourceId\": \"<uuid>\",\n    \"externalEntityUrl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"lastSyncDate\": \"<long>\",\n    \"syncAction\": \"ADD\"\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/mappings/externalSystem/mappedResource/bulk",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"mappings",
																"externalSystem",
																"mappedResource",
																"bulk"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Role\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"externalSystemId\": \"<string>\",\n    \"externalEntityId\": \"<string>\",\n    \"externalEntityUrl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mappedResource\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DateTimeAttributeType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"lastSyncDate\": \"<long>\",\n    \"syncAction\": \"ADD, UPDATE, REMOVE\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"WorkflowTask\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"externalSystemId\": \"<string>\",\n    \"externalEntityId\": \"<string>\",\n    \"externalEntityUrl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"mappedResource\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ExcelIngestionProperties\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"lastSyncDate\": \"<long>\",\n    \"syncAction\": \"REMOVE\"\n  }\n]"
												},
												{
													"name": "One of the mappings could not be found.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"externalSystemId\": \"<string>\",\n    \"mappedResourceId\": \"<uuid>\",\n    \"externalEntityUrl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"lastSyncDate\": \"<long>\",\n    \"syncAction\": \"UPDATE\"\n  },\n  {\n    \"externalSystemId\": \"<string>\",\n    \"mappedResourceId\": \"<uuid>\",\n    \"externalEntityUrl\": \"<string>\",\n    \"description\": \"<string>\",\n    \"lastSyncDate\": \"<long>\",\n    \"syncAction\": \"ADD\"\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/mappings/externalSystem/mappedResource/bulk",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"mappings",
																"externalSystem",
																"mappedResource",
																"bulk"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "removalJobs",
					"item": [
						{
							"name": "Removes multiple mappings in job.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/mappings/removalJobs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mappings",
										"removalJobs"
									]
								},
								"description": "Removes multiple mappings in job.<p>If any mapping does not exist, an exception is NOT thrown."
							},
							"response": [
								{
									"name": "Mappings removal successfully started.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/mappings/removalJobs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"mappings",
												"removalJobs"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Website\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"userId\": \"<uuid>\",\n  \"visibility\": \"<integer>\",\n  \"progressPercentage\": \"<double>\",\n  \"cancelable\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"state\": \"CANCELING\",\n  \"result\": \"NOT_SET\",\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Returns mappings matching the given search criteria.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/mappings?offset=0&limit=0&countLimit=-1&externalSystemId=<string>&externalEntityId=<string>&mappedResourceType=Domain&syncAction=REMOVE",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"mappings"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
								},
								{
									"key": "limit",
									"value": "0",
									"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
								},
								{
									"key": "countLimit",
									"value": "-1",
									"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
								},
								{
									"key": "externalSystemId",
									"value": "<string>",
									"description": "The ID of the external system that the mapped resource belongs to."
								},
								{
									"key": "externalEntityId",
									"value": "<string>",
									"description": "The external ID of the mapped resource."
								},
								{
									"key": "mappedResourceType",
									"value": "Domain",
									"description": "The type of the mapped resource."
								},
								{
									"key": "syncAction",
									"value": "REMOVE",
									"description": "The type of the action performed during last successful synchronization."
								}
							]
						},
						"description": "Returns mappings matching the given search criteria.<p>Only parameters that are specified in this request and have not <code>null</code> values are used for filtering. All other parameters are ignored.</p>The returned synchronization information satisfies all constraints that are specified in this search criteria. By default a result containing 1000 mappings is returned.</p>"
					},
					"response": [
						{
							"name": "The paged response with found synchronization information.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/mappings?offset=0&limit=0&countLimit=-1&externalSystemId=<string>&externalEntityId=<string>&mappedResourceType=Domain&syncAction=REMOVE",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mappings"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
										},
										{
											"key": "externalSystemId",
											"value": "<string>",
											"description": "The ID of the external system that the mapped resource belongs to."
										},
										{
											"key": "externalEntityId",
											"value": "<string>",
											"description": "The external ID of the mapped resource."
										},
										{
											"key": "mappedResourceType",
											"value": "Domain",
											"description": "The type of the mapped resource."
										},
										{
											"key": "syncAction",
											"value": "REMOVE",
											"description": "The type of the action performed during last successful synchronization."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": \"<long>\",\n  \"offset\": \"<long>\",\n  \"limit\": \"<long>\",\n  \"results\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"PhoneNumber\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"externalSystemId\": \"<string>\",\n      \"externalEntityId\": \"<string>\",\n      \"externalEntityUrl\": \"<string>\",\n      \"description\": \"<string>\",\n      \"mappedResource\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"DateTimeAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"lastSyncDate\": \"<long>\",\n      \"syncAction\": \"ADD, UPDATE, REMOVE\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Status\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"externalSystemId\": \"<string>\",\n      \"externalEntityId\": \"<string>\",\n      \"externalEntityUrl\": \"<string>\",\n      \"description\": \"<string>\",\n      \"mappedResource\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"DomainType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"lastSyncDate\": \"<long>\",\n      \"syncAction\": \"REMOVE\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Adds a new mapping.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"externalEntityId\": \"<string>\",\n  \"externalSystemId\": \"<string>\",\n  \"mappedResourceId\": \"<uuid>\",\n  \"id\": \"<uuid>\",\n  \"externalEntityUrl\": \"<string>\",\n  \"description\": \"<string>\",\n  \"lastSyncDate\": \"<long>\",\n  \"syncAction\": \"ADD\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/mappings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"mappings"
							]
						},
						"description": "Adds a new mapping."
					},
					"response": [
						{
							"name": "Mapping successfully added.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"externalEntityId\": \"<string>\",\n  \"externalSystemId\": \"<string>\",\n  \"mappedResourceId\": \"<uuid>\",\n  \"id\": \"<uuid>\",\n  \"externalEntityUrl\": \"<string>\",\n  \"description\": \"<string>\",\n  \"lastSyncDate\": \"<long>\",\n  \"syncAction\": \"ADD\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/mappings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mappings"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"User\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"externalSystemId\": \"<string>\",\n  \"externalEntityId\": \"<string>\",\n  \"externalEntityUrl\": \"<string>\",\n  \"description\": \"<string>\",\n  \"mappedResource\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Address\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"lastSyncDate\": \"<long>\",\n  \"syncAction\": \"ADD, UPDATE, REMOVE\"\n}"
						},
						{
							"name": "A mapping with the given ID already exists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"externalEntityId\": \"<string>\",\n  \"externalSystemId\": \"<string>\",\n  \"mappedResourceId\": \"<uuid>\",\n  \"id\": \"<uuid>\",\n  \"externalEntityUrl\": \"<string>\",\n  \"description\": \"<string>\",\n  \"lastSyncDate\": \"<long>\",\n  \"syncAction\": \"ADD\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/mappings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"mappings"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "assetTypes",
			"item": [
				{
					"name": "bulk",
					"item": [
						{
							"name": "Add multiple asset types",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"displayNameEnabled\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"ratingEnabled\": \"<boolean>\",\n    \"symbolType\": \"ICON_CODE\",\n    \"id\": \"<uuid>\",\n    \"publicId\": \"<string>\",\n    \"description\": \"<string>\",\n    \"color\": \"#A4063A\",\n    \"iconCode\": \"<string>\",\n    \"acronymCode\": \"Qy\",\n    \"parentId\": \"<uuid>\"\n  },\n  {\n    \"displayNameEnabled\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"ratingEnabled\": \"<boolean>\",\n    \"symbolType\": \"NONE\",\n    \"id\": \"<uuid>\",\n    \"publicId\": \"<string>\",\n    \"description\": \"<string>\",\n    \"color\": \"#57D6ec\",\n    \"iconCode\": \"<string>\",\n    \"acronymCode\": \"nv\",\n    \"parentId\": \"<uuid>\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assetTypes/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assetTypes",
										"bulk"
									]
								},
								"description": "Adds multiple asset types in one go."
							},
							"response": [
								{
									"name": "Asset types successfully added.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"displayNameEnabled\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"ratingEnabled\": \"<boolean>\",\n    \"symbolType\": \"ICON_CODE\",\n    \"id\": \"<uuid>\",\n    \"publicId\": \"<string>\",\n    \"description\": \"<string>\",\n    \"color\": \"#A4063A\",\n    \"iconCode\": \"<string>\",\n    \"acronymCode\": \"Qy\",\n    \"parentId\": \"<uuid>\"\n  },\n  {\n    \"displayNameEnabled\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"ratingEnabled\": \"<boolean>\",\n    \"symbolType\": \"NONE\",\n    \"id\": \"<uuid>\",\n    \"publicId\": \"<string>\",\n    \"description\": \"<string>\",\n    \"color\": \"#57D6ec\",\n    \"iconCode\": \"<string>\",\n    \"acronymCode\": \"nv\",\n    \"parentId\": \"<uuid>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/assetTypes/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assetTypes",
												"bulk"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"ExcelIngestionProperties\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"publicId\": \"<string>\",\n    \"parent\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Domain\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"symbolData\": {\n      \"color\": \"<string>\",\n      \"symbolType\": \"ACRONYM_CODE\",\n      \"iconCode\": \"<string>\",\n      \"acronymCode\": \"<string>\"\n    },\n    \"displayNameEnabled\": \"<boolean>\",\n    \"ratingEnabled\": \"<boolean>\",\n    \"finalType\": \"<boolean>\",\n    \"lockStatuses\": \"<boolean>\",\n    \"product\": \"<string>\",\n    \"appliedTraits\": [\n      {\n        \"id\": \"<uuid>\",\n        \"trait\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"UserGroup\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"system\": \"<boolean>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"trait\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"DataQualityMetric\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"system\": \"<boolean>\"\n      }\n    ]\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"ViewSharingRule\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"publicId\": \"<string>\",\n    \"parent\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"StringAttribute\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"symbolData\": {\n      \"color\": \"<string>\",\n      \"symbolType\": \"ICON_CODE\",\n      \"iconCode\": \"<string>\",\n      \"acronymCode\": \"<string>\"\n    },\n    \"displayNameEnabled\": \"<boolean>\",\n    \"ratingEnabled\": \"<boolean>\",\n    \"finalType\": \"<boolean>\",\n    \"lockStatuses\": \"<boolean>\",\n    \"product\": \"<string>\",\n    \"appliedTraits\": [\n      {\n        \"id\": \"<uuid>\",\n        \"trait\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Notification\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"system\": \"<boolean>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"trait\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"View\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"system\": \"<boolean>\"\n      }\n    ]\n  }\n]"
								}
							]
						},
						{
							"name": "Remove multiple asset types",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assetTypes/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assetTypes",
										"bulk"
									]
								},
								"description": "Removes multiple asset types identified by the given IDs."
							},
							"response": [
								{
									"name": "Asset types removed",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/assetTypes/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assetTypes",
												"bulk"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Change multiple asset types",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"publicId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"parentId\": \"<uuid>\",\n    \"color\": \"#ef8DD3\",\n    \"symbolType\": \"ICON_CODE\",\n    \"iconCode\": \"<string>\",\n    \"acronymCode\": \"8K\",\n    \"displayNameEnabled\": \"<boolean>\",\n    \"ratingEnabled\": \"<boolean>\",\n    \"traitIds\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ]\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"publicId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"parentId\": \"<uuid>\",\n    \"color\": \"#D8E0bf\",\n    \"symbolType\": \"ICON_CODE\",\n    \"iconCode\": \"<string>\",\n    \"acronymCode\": \"pd\",\n    \"displayNameEnabled\": \"<boolean>\",\n    \"ratingEnabled\": \"<boolean>\",\n    \"traitIds\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ]\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assetTypes/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assetTypes",
										"bulk"
									]
								},
								"description": "Changes multiple asset types using the given parameters."
							},
							"response": [
								{
									"name": "Asset types changed",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"publicId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"parentId\": \"<uuid>\",\n    \"color\": \"#ef8DD3\",\n    \"symbolType\": \"ICON_CODE\",\n    \"iconCode\": \"<string>\",\n    \"acronymCode\": \"8K\",\n    \"displayNameEnabled\": \"<boolean>\",\n    \"ratingEnabled\": \"<boolean>\",\n    \"traitIds\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ]\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"publicId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"parentId\": \"<uuid>\",\n    \"color\": \"#D8E0bf\",\n    \"symbolType\": \"ICON_CODE\",\n    \"iconCode\": \"<string>\",\n    \"acronymCode\": \"pd\",\n    \"displayNameEnabled\": \"<boolean>\",\n    \"ratingEnabled\": \"<boolean>\",\n    \"traitIds\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ]\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/assetTypes/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assetTypes",
												"bulk"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"ExcelIngestionProperties\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"publicId\": \"<string>\",\n    \"parent\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Domain\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"symbolData\": {\n      \"color\": \"<string>\",\n      \"symbolType\": \"ACRONYM_CODE\",\n      \"iconCode\": \"<string>\",\n      \"acronymCode\": \"<string>\"\n    },\n    \"displayNameEnabled\": \"<boolean>\",\n    \"ratingEnabled\": \"<boolean>\",\n    \"finalType\": \"<boolean>\",\n    \"lockStatuses\": \"<boolean>\",\n    \"product\": \"<string>\",\n    \"appliedTraits\": [\n      {\n        \"id\": \"<uuid>\",\n        \"trait\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"UserGroup\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"system\": \"<boolean>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"trait\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"DataQualityMetric\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"system\": \"<boolean>\"\n      }\n    ]\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"ViewSharingRule\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"publicId\": \"<string>\",\n    \"parent\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"StringAttribute\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"symbolData\": {\n      \"color\": \"<string>\",\n      \"symbolType\": \"ICON_CODE\",\n      \"iconCode\": \"<string>\",\n      \"acronymCode\": \"<string>\"\n    },\n    \"displayNameEnabled\": \"<boolean>\",\n    \"ratingEnabled\": \"<boolean>\",\n    \"finalType\": \"<boolean>\",\n    \"lockStatuses\": \"<boolean>\",\n    \"product\": \"<string>\",\n    \"appliedTraits\": [\n      {\n        \"id\": \"<uuid>\",\n        \"trait\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Notification\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"system\": \"<boolean>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"trait\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"View\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"system\": \"<boolean>\"\n      }\n    ]\n  }\n]"
								}
							]
						}
					]
				},
				{
					"name": "{assetTypeId}",
					"item": [
						{
							"name": "parents",
							"item": [
								{
									"name": "Find parent types",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assetTypes/:assetTypeId/parents",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assetTypes",
												":assetTypeId",
												"parents"
											],
											"variable": [
												{
													"key": "assetTypeId",
													"value": "<uuid>",
													"description": "(Required) The unique identifier of the AssetType."
												}
											]
										},
										"description": "Finds all the parent asset types of the asset with the given ID."
									},
									"response": [
										{
											"name": "Parent asset types found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assetTypes/:assetTypeId/parents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assetTypes",
														":assetTypeId",
														"parents"
													],
													"variable": [
														{
															"key": "assetTypeId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"ExcelIngestionProperties\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"publicId\": \"<string>\",\n    \"parent\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Domain\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"symbolData\": {\n      \"color\": \"<string>\",\n      \"symbolType\": \"ACRONYM_CODE\",\n      \"iconCode\": \"<string>\",\n      \"acronymCode\": \"<string>\"\n    },\n    \"displayNameEnabled\": \"<boolean>\",\n    \"ratingEnabled\": \"<boolean>\",\n    \"finalType\": \"<boolean>\",\n    \"lockStatuses\": \"<boolean>\",\n    \"product\": \"<string>\",\n    \"appliedTraits\": [\n      {\n        \"id\": \"<uuid>\",\n        \"trait\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"UserGroup\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"system\": \"<boolean>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"trait\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"DataQualityMetric\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"system\": \"<boolean>\"\n      }\n    ]\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"ViewSharingRule\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"publicId\": \"<string>\",\n    \"parent\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"StringAttribute\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"symbolData\": {\n      \"color\": \"<string>\",\n      \"symbolType\": \"ICON_CODE\",\n      \"iconCode\": \"<string>\",\n      \"acronymCode\": \"<string>\"\n    },\n    \"displayNameEnabled\": \"<boolean>\",\n    \"ratingEnabled\": \"<boolean>\",\n    \"finalType\": \"<boolean>\",\n    \"lockStatuses\": \"<boolean>\",\n    \"product\": \"<string>\",\n    \"appliedTraits\": [\n      {\n        \"id\": \"<uuid>\",\n        \"trait\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Notification\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"system\": \"<boolean>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"trait\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"View\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        },\n        \"system\": \"<boolean>\"\n      }\n    ]\n  }\n]"
										}
									]
								}
							]
						},
						{
							"name": "subTypes",
							"item": [
								{
									"name": "Find asset subtypes",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assetTypes/:assetTypeId/subTypes?includeParent=<boolean>&directSubTypesOnly=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assetTypes",
												":assetTypeId",
												"subTypes"
											],
											"query": [
												{
													"key": "includeParent",
													"value": "<boolean>",
													"description": "Whether parent Asset Type should be included in the search result."
												},
												{
													"key": "directSubTypesOnly",
													"value": "<boolean>",
													"description": "Whether we should only list the direct subtypes, or all subtypes."
												}
											],
											"variable": [
												{
													"key": "assetTypeId",
													"value": "<uuid>",
													"description": "(Required) The ID of the AssetType"
												}
											]
										},
										"description": "Finds all asset subtypes of an asset type, as specified by the request parameters."
									},
									"response": [
										{
											"name": "Asset types found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assetTypes/:assetTypeId/subTypes?includeParent=<boolean>&directSubTypesOnly=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assetTypes",
														":assetTypeId",
														"subTypes"
													],
													"query": [
														{
															"key": "includeParent",
															"value": "<boolean>",
															"description": "Whether parent Asset Type should be included in the search result."
														},
														{
															"key": "directSubTypesOnly",
															"value": "<boolean>",
															"description": "Whether we should only list the direct subtypes, or all subtypes."
														}
													],
													"variable": [
														{
															"key": "assetTypeId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"total\": \"<long>\",\n  \"offset\": \"<long>\",\n  \"limit\": \"<long>\",\n  \"results\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Address\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"publicId\": \"<string>\",\n      \"parent\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Workflow\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"symbolData\": {\n        \"color\": \"<string>\",\n        \"symbolType\": \"NONE\",\n        \"iconCode\": \"<string>\",\n        \"acronymCode\": \"<string>\"\n      },\n      \"displayNameEnabled\": \"<boolean>\",\n      \"ratingEnabled\": \"<boolean>\",\n      \"finalType\": \"<boolean>\",\n      \"lockStatuses\": \"<boolean>\",\n      \"product\": \"<string>\",\n      \"appliedTraits\": [\n        {\n          \"id\": \"<uuid>\",\n          \"trait\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"ComplexRelationLeg\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"system\": \"<boolean>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"trait\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"ActivityChange\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"system\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Workflow\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"publicId\": \"<string>\",\n      \"parent\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"BaseDataType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"symbolData\": {\n        \"color\": \"<string>\",\n        \"symbolType\": \"NONE\",\n        \"iconCode\": \"<string>\",\n        \"acronymCode\": \"<string>\"\n      },\n      \"displayNameEnabled\": \"<boolean>\",\n      \"ratingEnabled\": \"<boolean>\",\n      \"finalType\": \"<boolean>\",\n      \"lockStatuses\": \"<boolean>\",\n      \"product\": \"<string>\",\n      \"appliedTraits\": [\n        {\n          \"id\": \"<uuid>\",\n          \"trait\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"DiagramPictureSharingRule\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"system\": \"<boolean>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"trait\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"ConnectionStringParameter\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"system\": \"<boolean>\"\n        }\n      ]\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get asset type by ID",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/assetTypes/:assetTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assetTypes",
										":assetTypeId"
									],
									"variable": [
										{
											"key": "assetTypeId",
											"value": "<uuid>",
											"description": "(Required) The ID of the asset type"
										}
									]
								},
								"description": "Returns the asset type having the given ID."
							},
							"response": [
								{
									"name": "Asset type found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assetTypes/:assetTypeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assetTypes",
												":assetTypeId"
											],
											"variable": [
												{
													"key": "assetTypeId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"DomainType\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"publicId\": \"<string>\",\n  \"parent\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"MultiValueListAttributeType\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"symbolData\": {\n    \"color\": \"<string>\",\n    \"symbolType\": \"NONE\",\n    \"iconCode\": \"<string>\",\n    \"acronymCode\": \"<string>\"\n  },\n  \"displayNameEnabled\": \"<boolean>\",\n  \"ratingEnabled\": \"<boolean>\",\n  \"finalType\": \"<boolean>\",\n  \"lockStatuses\": \"<boolean>\",\n  \"product\": \"<string>\",\n  \"appliedTraits\": [\n    {\n      \"id\": \"<uuid>\",\n      \"trait\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"WorkflowInstance\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"system\": \"<boolean>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"trait\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ComplexRelationAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"system\": \"<boolean>\"\n    }\n  ]\n}"
								},
								{
									"name": "Asset type not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assetTypes/:assetTypeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assetTypes",
												":assetTypeId"
											],
											"variable": [
												{
													"key": "assetTypeId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Remove asset type by ID",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/assetTypes/:assetTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assetTypes",
										":assetTypeId"
									],
									"variable": [
										{
											"key": "assetTypeId",
											"value": "<uuid>",
											"description": "(Required) The ID of the asset type"
										}
									]
								},
								"description": "Removes the asset type having the given ID."
							},
							"response": [
								{
									"name": "default response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assetTypes/:assetTypeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assetTypes",
												":assetTypeId"
											],
											"variable": [
												{
													"key": "assetTypeId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Change asset type",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<uuid>\",\n  \"publicId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"parentId\": \"<uuid>\",\n  \"color\": \"#DC7\",\n  \"symbolType\": \"ICON_CODE\",\n  \"iconCode\": \"<string>\",\n  \"acronymCode\": \"Y\",\n  \"displayNameEnabled\": \"<boolean>\",\n  \"ratingEnabled\": \"<boolean>\",\n  \"traitIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assetTypes/:assetTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assetTypes",
										":assetTypeId"
									],
									"variable": [
										{
											"key": "assetTypeId",
											"value": "<uuid>",
											"description": "(Required) The ID of the asset type"
										}
									]
								},
								"description": "Changes the asset type using the given parameters. Only properties that are specified in this request and have not <code>null</code> values are updated. All other properties are ignored."
							},
							"response": [
								{
									"name": "Asset type changed",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"publicId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"parentId\": \"<uuid>\",\n  \"color\": \"#DC7\",\n  \"symbolType\": \"ICON_CODE\",\n  \"iconCode\": \"<string>\",\n  \"acronymCode\": \"Y\",\n  \"displayNameEnabled\": \"<boolean>\",\n  \"ratingEnabled\": \"<boolean>\",\n  \"traitIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/assetTypes/:assetTypeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assetTypes",
												":assetTypeId"
											],
											"variable": [
												{
													"key": "assetTypeId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"DomainType\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"publicId\": \"<string>\",\n  \"parent\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"MultiValueListAttributeType\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"symbolData\": {\n    \"color\": \"<string>\",\n    \"symbolType\": \"NONE\",\n    \"iconCode\": \"<string>\",\n    \"acronymCode\": \"<string>\"\n  },\n  \"displayNameEnabled\": \"<boolean>\",\n  \"ratingEnabled\": \"<boolean>\",\n  \"finalType\": \"<boolean>\",\n  \"lockStatuses\": \"<boolean>\",\n  \"product\": \"<string>\",\n  \"appliedTraits\": [\n    {\n      \"id\": \"<uuid>\",\n      \"trait\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"WorkflowInstance\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"system\": \"<boolean>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"trait\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ComplexRelationAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"system\": \"<boolean>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "publicId",
					"item": [
						{
							"name": "{publicId}",
							"item": [
								{
									"name": "Get the asset type by public id",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/assetTypes/publicId/:publicId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"assetTypes",
												"publicId",
												":publicId"
											],
											"variable": [
												{
													"key": "publicId",
													"value": "<string>",
													"description": "(Required) The public identifier of the asset type"
												}
											]
										},
										"description": "Returns the asset type identified by the given public id."
									},
									"response": [
										{
											"name": "Asset type found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assetTypes/publicId/:publicId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assetTypes",
														"publicId",
														":publicId"
													],
													"variable": [
														{
															"key": "publicId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"DomainType\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"publicId\": \"<string>\",\n  \"parent\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"MultiValueListAttributeType\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"symbolData\": {\n    \"color\": \"<string>\",\n    \"symbolType\": \"NONE\",\n    \"iconCode\": \"<string>\",\n    \"acronymCode\": \"<string>\"\n  },\n  \"displayNameEnabled\": \"<boolean>\",\n  \"ratingEnabled\": \"<boolean>\",\n  \"finalType\": \"<boolean>\",\n  \"lockStatuses\": \"<boolean>\",\n  \"product\": \"<string>\",\n  \"appliedTraits\": [\n    {\n      \"id\": \"<uuid>\",\n      \"trait\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"WorkflowInstance\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"system\": \"<boolean>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"trait\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ComplexRelationAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"system\": \"<boolean>\"\n    }\n  ]\n}"
										},
										{
											"name": "Asset type not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/assetTypes/publicId/:publicId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"assetTypes",
														"publicId",
														":publicId"
													],
													"variable": [
														{
															"key": "publicId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Find asset types matching criteria",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/assetTypes?offset=0&limit=0&countLimit=-1&name=<string>&nameMatchMode=ANYWHERE&parentId=<uuid>&excludeMeta=true&excludeFinal=false&excludeUnlicensedProducts=false&topLevel=false&displayNameEnabled=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assetTypes"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
								},
								{
									"key": "limit",
									"value": "0",
									"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
								},
								{
									"key": "countLimit",
									"value": "-1",
									"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "The name of the Asset Type to search for."
								},
								{
									"key": "nameMatchMode",
									"value": "ANYWHERE",
									"description": "The match mode used to compare <code>name</code>. If the match mode is <code>EXACT</code> the search is case-sensitive, otherwise the search is case-insensitive."
								},
								{
									"key": "parentId",
									"value": "<uuid>",
									"description": "The ID of the parent to find the Asset Types in."
								},
								{
									"key": "excludeMeta",
									"value": "true",
									"description": "Whether the meta Asset Types should be excluded from the results or not."
								},
								{
									"key": "excludeFinal",
									"value": "false",
									"description": "Whether the final Asset Types should be excluded from the results or not."
								},
								{
									"key": "excludeUnlicensedProducts",
									"value": "false",
									"description": "Whether the Asset Types belonging to products for which no license is active should be excluded from the results or not."
								},
								{
									"key": "topLevel",
									"value": "false",
									"description": "Whether only top level Asset Types should be searched or not."
								},
								{
									"key": "displayNameEnabled",
									"value": "<boolean>",
									"description": "Whether only Asset Types with display names enabled (or disabled) should be searched."
								}
							]
						},
						"description": "Returns asset types matching the given search criteria. Only parameters that are specified in this request and have not <code>null</code> values are used for filtering. All other parameters are ignored. By default a result containing 1000 asset types is returned."
					},
					"response": [
						{
							"name": "Search ran successfully",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/assetTypes?offset=0&limit=0&countLimit=-1&name=<string>&nameMatchMode=ANYWHERE&parentId=<uuid>&excludeMeta=true&excludeFinal=false&excludeUnlicensedProducts=false&topLevel=false&displayNameEnabled=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assetTypes"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "The name of the Asset Type to search for."
										},
										{
											"key": "nameMatchMode",
											"value": "ANYWHERE",
											"description": "The match mode used to compare <code>name</code>. If the match mode is <code>EXACT</code> the search is case-sensitive, otherwise the search is case-insensitive."
										},
										{
											"key": "parentId",
											"value": "<uuid>",
											"description": "The ID of the parent to find the Asset Types in."
										},
										{
											"key": "excludeMeta",
											"value": "true",
											"description": "Whether the meta Asset Types should be excluded from the results or not."
										},
										{
											"key": "excludeFinal",
											"value": "false",
											"description": "Whether the final Asset Types should be excluded from the results or not."
										},
										{
											"key": "excludeUnlicensedProducts",
											"value": "false",
											"description": "Whether the Asset Types belonging to products for which no license is active should be excluded from the results or not."
										},
										{
											"key": "topLevel",
											"value": "false",
											"description": "Whether only top level Asset Types should be searched or not."
										},
										{
											"key": "displayNameEnabled",
											"value": "<boolean>",
											"description": "Whether only Asset Types with display names enabled (or disabled) should be searched."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": \"<long>\",\n  \"offset\": \"<long>\",\n  \"limit\": \"<long>\",\n  \"results\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Address\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"publicId\": \"<string>\",\n      \"parent\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Workflow\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"symbolData\": {\n        \"color\": \"<string>\",\n        \"symbolType\": \"NONE\",\n        \"iconCode\": \"<string>\",\n        \"acronymCode\": \"<string>\"\n      },\n      \"displayNameEnabled\": \"<boolean>\",\n      \"ratingEnabled\": \"<boolean>\",\n      \"finalType\": \"<boolean>\",\n      \"lockStatuses\": \"<boolean>\",\n      \"product\": \"<string>\",\n      \"appliedTraits\": [\n        {\n          \"id\": \"<uuid>\",\n          \"trait\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"ComplexRelationLeg\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"system\": \"<boolean>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"trait\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"ActivityChange\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"system\": \"<boolean>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Workflow\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"publicId\": \"<string>\",\n      \"parent\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"BaseDataType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"symbolData\": {\n        \"color\": \"<string>\",\n        \"symbolType\": \"NONE\",\n        \"iconCode\": \"<string>\",\n        \"acronymCode\": \"<string>\"\n      },\n      \"displayNameEnabled\": \"<boolean>\",\n      \"ratingEnabled\": \"<boolean>\",\n      \"finalType\": \"<boolean>\",\n      \"lockStatuses\": \"<boolean>\",\n      \"product\": \"<string>\",\n      \"appliedTraits\": [\n        {\n          \"id\": \"<uuid>\",\n          \"trait\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"DiagramPictureSharingRule\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"system\": \"<boolean>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"trait\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"ConnectionStringParameter\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"system\": \"<boolean>\"\n        }\n      ]\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Add asset type",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"displayNameEnabled\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"ratingEnabled\": \"<boolean>\",\n  \"symbolType\": \"ACRONYM_CODE\",\n  \"id\": \"<uuid>\",\n  \"publicId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"color\": \"#2Ffad5\",\n  \"iconCode\": \"<string>\",\n  \"acronymCode\": \"r\",\n  \"parentId\": \"<uuid>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/assetTypes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assetTypes"
							]
						},
						"description": "Adds a new asset type with the given parameters."
					},
					"response": [
						{
							"name": "Asset type successfully added.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"displayNameEnabled\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"ratingEnabled\": \"<boolean>\",\n  \"symbolType\": \"ACRONYM_CODE\",\n  \"id\": \"<uuid>\",\n  \"publicId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"color\": \"#2Ffad5\",\n  \"iconCode\": \"<string>\",\n  \"acronymCode\": \"r\",\n  \"parentId\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assetTypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assetTypes"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"DomainType\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"publicId\": \"<string>\",\n  \"parent\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"MultiValueListAttributeType\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"symbolData\": {\n    \"color\": \"<string>\",\n    \"symbolType\": \"NONE\",\n    \"iconCode\": \"<string>\",\n    \"acronymCode\": \"<string>\"\n  },\n  \"displayNameEnabled\": \"<boolean>\",\n  \"ratingEnabled\": \"<boolean>\",\n  \"finalType\": \"<boolean>\",\n  \"lockStatuses\": \"<boolean>\",\n  \"product\": \"<string>\",\n  \"appliedTraits\": [\n    {\n      \"id\": \"<uuid>\",\n      \"trait\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"WorkflowInstance\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"system\": \"<boolean>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"trait\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ComplexRelationAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"system\": \"<boolean>\"\n    }\n  ]\n}"
						},
						{
							"name": "An asset type with the given ID already exists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"displayNameEnabled\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"ratingEnabled\": \"<boolean>\",\n  \"symbolType\": \"ACRONYM_CODE\",\n  \"id\": \"<uuid>\",\n  \"publicId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"color\": \"#2Ffad5\",\n  \"iconCode\": \"<string>\",\n  \"acronymCode\": \"r\",\n  \"parentId\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assetTypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assetTypes"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Parent asset type not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"displayNameEnabled\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"ratingEnabled\": \"<boolean>\",\n  \"symbolType\": \"ACRONYM_CODE\",\n  \"id\": \"<uuid>\",\n  \"publicId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"color\": \"#2Ffad5\",\n  \"iconCode\": \"<string>\",\n  \"acronymCode\": \"r\",\n  \"parentId\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/assetTypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"assetTypes"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "attributeTypes",
			"item": [
				{
					"name": "bulk",
					"item": [
						{
							"name": "Adds multiple Attribute Types.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"kind\": \"STRING\",\n    \"name\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"publicId\": \"<string>\",\n    \"description\": \"<string>\",\n    \"language\": \"<string>\",\n    \"statisticsEnabled\": \"<boolean>\",\n    \"allowedValues\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"stringType\": \"PLAIN_TEXT\",\n    \"idString\": \"<string>\",\n    \"isInteger\": \"<boolean>\"\n  },\n  {\n    \"kind\": \"SINGLE_VALUE_LIST\",\n    \"name\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"publicId\": \"<string>\",\n    \"description\": \"<string>\",\n    \"language\": \"<string>\",\n    \"statisticsEnabled\": \"<boolean>\",\n    \"allowedValues\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"stringType\": \"PLAIN_TEXT\",\n    \"idString\": \"<string>\",\n    \"isInteger\": \"<boolean>\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/attributeTypes/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attributeTypes",
										"bulk"
									]
								},
								"description": "Adds multiple Attribute Types."
							},
							"response": [
								{
									"name": "Attribute Types successfully added.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"kind\": \"STRING\",\n    \"name\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"publicId\": \"<string>\",\n    \"description\": \"<string>\",\n    \"language\": \"<string>\",\n    \"statisticsEnabled\": \"<boolean>\",\n    \"allowedValues\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"stringType\": \"PLAIN_TEXT\",\n    \"idString\": \"<string>\",\n    \"isInteger\": \"<boolean>\"\n  },\n  {\n    \"kind\": \"SINGLE_VALUE_LIST\",\n    \"name\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"publicId\": \"<string>\",\n    \"description\": \"<string>\",\n    \"language\": \"<string>\",\n    \"statisticsEnabled\": \"<boolean>\",\n    \"allowedValues\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"stringType\": \"PLAIN_TEXT\",\n    \"idString\": \"<string>\",\n    \"isInteger\": \"<boolean>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/attributeTypes/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributeTypes",
												"bulk"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"attributeTypeDiscriminator\": \"<string>\",\n    \"publicId\": \"<string>\",\n    \"description\": \"<string>\",\n    \"name\": \"<string>\",\n    \"resourceType\": \"StringAttributeType\",\n    \"createdBy\": \"<uuid>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"id\": \"<uuid>\"\n  },\n  {\n    \"attributeTypeDiscriminator\": \"<string>\",\n    \"publicId\": \"<string>\",\n    \"description\": \"<string>\",\n    \"name\": \"<string>\",\n    \"resourceType\": \"JdbcDriver\",\n    \"createdBy\": \"<uuid>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"id\": \"<uuid>\"\n  }\n]"
								}
							]
						},
						{
							"name": "Removes multiple attribute types.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/attributeTypes/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attributeTypes",
										"bulk"
									]
								},
								"description": "Removes multiple attribute types identified by the UUIDs passed as parameter."
							},
							"response": [
								{
									"name": "default response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/attributeTypes/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributeTypes",
												"bulk"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Changes multiple attribute types.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"publicId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"language\": \"<string>\",\n    \"statisticsEnabled\": \"<boolean>\",\n    \"isInteger\": \"<boolean>\",\n    \"allowedValues\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"publicId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"language\": \"<string>\",\n    \"statisticsEnabled\": \"<boolean>\",\n    \"isInteger\": \"<boolean>\",\n    \"allowedValues\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/attributeTypes/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attributeTypes",
										"bulk"
									]
								},
								"description": "Changes multiple attribute types with the information present in the request."
							},
							"response": [
								{
									"name": "Attribute Types successfully changed.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"publicId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"language\": \"<string>\",\n    \"statisticsEnabled\": \"<boolean>\",\n    \"isInteger\": \"<boolean>\",\n    \"allowedValues\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"publicId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"language\": \"<string>\",\n    \"statisticsEnabled\": \"<boolean>\",\n    \"isInteger\": \"<boolean>\",\n    \"allowedValues\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/attributeTypes/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributeTypes",
												"bulk"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"attributeTypeDiscriminator\": \"<string>\",\n    \"publicId\": \"<string>\",\n    \"description\": \"<string>\",\n    \"name\": \"<string>\",\n    \"resourceType\": \"StringAttributeType\",\n    \"createdBy\": \"<uuid>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"id\": \"<uuid>\"\n  },\n  {\n    \"attributeTypeDiscriminator\": \"<string>\",\n    \"publicId\": \"<string>\",\n    \"description\": \"<string>\",\n    \"name\": \"<string>\",\n    \"resourceType\": \"JdbcDriver\",\n    \"createdBy\": \"<uuid>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"id\": \"<uuid>\"\n  }\n]"
								}
							]
						}
					]
				},
				{
					"name": "{attributeTypeId}",
					"item": [
						{
							"name": "Returns the attribute type identified by given UUID.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/attributeTypes/:attributeTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attributeTypes",
										":attributeTypeId"
									],
									"variable": [
										{
											"key": "attributeTypeId",
											"value": "<uuid>",
											"description": "(Required) the unique identifier of the attribute type"
										}
									]
								},
								"description": "Returns the attribute type identified by given UUID."
							},
							"response": [
								{
									"name": "Attribute Type found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/attributeTypes/:attributeTypeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributeTypes",
												":attributeTypeId"
											],
											"variable": [
												{
													"key": "attributeTypeId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"attributeTypeDiscriminator\": \"<string>\",\n  \"publicId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resourceType\": \"Domain\",\n  \"createdBy\": \"<uuid>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"id\": \"<uuid>\"\n}"
								},
								{
									"name": "Attribute Type not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/attributeTypes/:attributeTypeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributeTypes",
												":attributeTypeId"
											],
											"variable": [
												{
													"key": "attributeTypeId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Removes attribute type identified by given UUID.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/attributeTypes/:attributeTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attributeTypes",
										":attributeTypeId"
									],
									"variable": [
										{
											"key": "attributeTypeId",
											"value": "<uuid>",
											"description": "(Required) the unique identifier of the attribute type"
										}
									]
								},
								"description": "Removes attribute type identified by given UUID."
							},
							"response": [
								{
									"name": "default response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/attributeTypes/:attributeTypeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributeTypes",
												":attributeTypeId"
											],
											"variable": [
												{
													"key": "attributeTypeId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Changes the attribute types.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<uuid>\",\n  \"publicId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"language\": \"<string>\",\n  \"statisticsEnabled\": \"<boolean>\",\n  \"isInteger\": \"<boolean>\",\n  \"allowedValues\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/attributeTypes/:attributeTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attributeTypes",
										":attributeTypeId"
									],
									"variable": [
										{
											"key": "attributeTypeId",
											"value": "<uuid>",
											"description": "(Required) the unique identifier of the attribute type"
										}
									]
								},
								"description": "Changes the attribute types with the information present in the request. Only properties that are specified in this request and have not <code>null</code> values are updated. All other properties are ignored. "
							},
							"response": [
								{
									"name": "Attribute Type successfully changed.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"publicId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"language\": \"<string>\",\n  \"statisticsEnabled\": \"<boolean>\",\n  \"isInteger\": \"<boolean>\",\n  \"allowedValues\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/attributeTypes/:attributeTypeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributeTypes",
												":attributeTypeId"
											],
											"variable": [
												{
													"key": "attributeTypeId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"attributeTypeDiscriminator\": \"<string>\",\n  \"publicId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resourceType\": \"Domain\",\n  \"createdBy\": \"<uuid>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"id\": \"<uuid>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "name",
					"item": [
						{
							"name": "{attributeTypeName}",
							"item": [
								{
									"name": "Returns the attribute type identified by given name.",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/attributeTypes/name/:attributeTypeName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributeTypes",
												"name",
												":attributeTypeName"
											],
											"variable": [
												{
													"key": "attributeTypeName",
													"value": "<string>",
													"description": "(Required) the unique identifier of the attribute type"
												}
											]
										},
										"description": "Returns the attribute type identified by given name."
									},
									"response": [
										{
											"name": "Attribute Type found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/attributeTypes/name/:attributeTypeName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"attributeTypes",
														"name",
														":attributeTypeName"
													],
													"variable": [
														{
															"key": "attributeTypeName"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"attributeTypeDiscriminator\": \"<string>\",\n  \"publicId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resourceType\": \"Domain\",\n  \"createdBy\": \"<uuid>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"id\": \"<uuid>\"\n}"
										},
										{
											"name": "Attribute Type not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/attributeTypes/name/:attributeTypeName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"attributeTypes",
														"name",
														":attributeTypeName"
													],
													"variable": [
														{
															"key": "attributeTypeName"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "publicId",
					"item": [
						{
							"name": "{publicId}",
							"item": [
								{
									"name": "Get the attribute type by public id",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/attributeTypes/publicId/:publicId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"attributeTypes",
												"publicId",
												":publicId"
											],
											"variable": [
												{
													"key": "publicId",
													"value": "<string>",
													"description": "(Required) The public identifier of the attribute type"
												}
											]
										},
										"description": "Returns the attribute type identified by the given public id."
									},
									"response": [
										{
											"name": "Attribute type found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/attributeTypes/publicId/:publicId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"attributeTypes",
														"publicId",
														":publicId"
													],
													"variable": [
														{
															"key": "publicId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"attributeTypeDiscriminator\": \"<string>\",\n  \"publicId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resourceType\": \"Domain\",\n  \"createdBy\": \"<uuid>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"id\": \"<uuid>\"\n}"
										},
										{
											"name": "Attribute type not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/attributeTypes/publicId/:publicId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"attributeTypes",
														"publicId",
														":publicId"
													],
													"variable": [
														{
															"key": "publicId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Returns attribute types matching the given search criteria.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/attributeTypes?offset=0&limit=0&countLimit=-1&name=<string>&nameMatchMode=ANYWHERE&kind=DATE&language=<string>&statisticsEnabled=<boolean>&isInteger=<boolean>&sortField=NAME&sortOrder=ASC",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"attributeTypes"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
								},
								{
									"key": "limit",
									"value": "0",
									"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
								},
								{
									"key": "countLimit",
									"value": "-1",
									"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "The name of the Attribute Type to search for."
								},
								{
									"key": "nameMatchMode",
									"value": "ANYWHERE",
									"description": "The match mode used to compare <code>name</code>. If the match mode is <code>EXACT</code> the search is case-sensitive, otherwise the search is case-insensitive."
								},
								{
									"key": "kind",
									"value": "DATE",
									"description": "The kind of the Attribute Type to search for."
								},
								{
									"key": "language",
									"value": "<string>",
									"description": "[DEPRECATED] The language of the Attribute Type to search for. This property is only applicable to Attribute Types of kind \"Script\"."
								},
								{
									"key": "statisticsEnabled",
									"value": "<boolean>",
									"description": "Whether the Attribute Types should be searched with statistics enabled or not. This property is only applicable to Attribute Types of kind \"Numeric\" or \"Boolean\"."
								},
								{
									"key": "isInteger",
									"value": "<boolean>",
									"description": "Whether only integer-type Attribute Types should be searched or not. This property is only applicable to Attribute Types of kind \"Numeric\"."
								},
								{
									"key": "sortField",
									"value": "NAME",
									"description": "The field that should be used as reference for sorting."
								},
								{
									"key": "sortOrder",
									"value": "ASC",
									"description": "The order of sorting."
								}
							]
						},
						"description": "Returns attribute types matching the given search criteria. Only parameters that are specified in this request and have not <code>null</code> values are used for filtering. All other parameters are ignored. The returned attribute types satisfy all constraints that are specified in this search criteria. By default a result containing 1000 attribute types is returned."
					},
					"response": [
						{
							"name": "The paged response of found Attribute Types.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/attributeTypes?offset=0&limit=0&countLimit=-1&name=<string>&nameMatchMode=ANYWHERE&kind=DATE&language=<string>&statisticsEnabled=<boolean>&isInteger=<boolean>&sortField=NAME&sortOrder=ASC",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attributeTypes"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "The name of the Attribute Type to search for."
										},
										{
											"key": "nameMatchMode",
											"value": "ANYWHERE",
											"description": "The match mode used to compare <code>name</code>. If the match mode is <code>EXACT</code> the search is case-sensitive, otherwise the search is case-insensitive."
										},
										{
											"key": "kind",
											"value": "DATE",
											"description": "The kind of the Attribute Type to search for."
										},
										{
											"key": "language",
											"value": "<string>",
											"description": "[DEPRECATED] The language of the Attribute Type to search for. This property is only applicable to Attribute Types of kind \"Script\"."
										},
										{
											"key": "statisticsEnabled",
											"value": "<boolean>",
											"description": "Whether the Attribute Types should be searched with statistics enabled or not. This property is only applicable to Attribute Types of kind \"Numeric\" or \"Boolean\"."
										},
										{
											"key": "isInteger",
											"value": "<boolean>",
											"description": "Whether only integer-type Attribute Types should be searched or not. This property is only applicable to Attribute Types of kind \"Numeric\"."
										},
										{
											"key": "sortField",
											"value": "NAME",
											"description": "The field that should be used as reference for sorting."
										},
										{
											"key": "sortOrder",
											"value": "ASC",
											"description": "The order of sorting."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": \"<long>\",\n  \"offset\": \"<long>\",\n  \"limit\": \"<long>\",\n  \"results\": [\n    {\n      \"attributeTypeDiscriminator\": \"<string>\",\n      \"publicId\": \"<string>\",\n      \"description\": \"<string>\",\n      \"name\": \"<string>\",\n      \"resourceType\": \"ValidationRule\",\n      \"createdBy\": \"<uuid>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"id\": \"<uuid>\"\n    },\n    {\n      \"attributeTypeDiscriminator\": \"<string>\",\n      \"publicId\": \"<string>\",\n      \"description\": \"<string>\",\n      \"name\": \"<string>\",\n      \"resourceType\": \"ValidationRule\",\n      \"createdBy\": \"<uuid>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"id\": \"<uuid>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Adds a new Attribute Type.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"kind\": \"STRING\",\n  \"name\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"publicId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"language\": \"<string>\",\n  \"statisticsEnabled\": \"<boolean>\",\n  \"allowedValues\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"stringType\": \"PLAIN_TEXT\",\n  \"idString\": \"<string>\",\n  \"isInteger\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/attributeTypes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"attributeTypes"
							]
						},
						"description": "Adds a new Attribute Type."
					},
					"response": [
						{
							"name": "Attribute Type successfully added.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"kind\": \"STRING\",\n  \"name\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"publicId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"language\": \"<string>\",\n  \"statisticsEnabled\": \"<boolean>\",\n  \"allowedValues\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"stringType\": \"PLAIN_TEXT\",\n  \"idString\": \"<string>\",\n  \"isInteger\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/attributeTypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attributeTypes"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"attributeTypeDiscriminator\": \"<string>\",\n  \"publicId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resourceType\": \"Domain\",\n  \"createdBy\": \"<uuid>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"id\": \"<uuid>\"\n}"
						},
						{
							"name": "An attribute type with the given ID already exists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"kind\": \"STRING\",\n  \"name\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"publicId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"language\": \"<string>\",\n  \"statisticsEnabled\": \"<boolean>\",\n  \"allowedValues\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"stringType\": \"PLAIN_TEXT\",\n  \"idString\": \"<string>\",\n  \"isInteger\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/attributeTypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attributeTypes"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "complexRelationTypes",
			"item": [
				{
					"name": "{complexRelationTypeId}",
					"item": [
						{
							"name": "Returns complex relation type identified by given UUID.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/complexRelationTypes/:complexRelationTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"complexRelationTypes",
										":complexRelationTypeId"
									],
									"variable": [
										{
											"key": "complexRelationTypeId",
											"value": "<uuid>",
											"description": "(Required) the unique identifier of the complex relation type"
										}
									]
								},
								"description": "Returns complex relation type identified by given UUID."
							},
							"response": [
								{
									"name": "Complex relation type found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/complexRelationTypes/:complexRelationTypeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"complexRelationTypes",
												":complexRelationTypeId"
											],
											"variable": [
												{
													"key": "complexRelationTypeId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"DiagramPictureSharingRule\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"publicId\": \"<string>\",\n  \"symbolData\": {\n    \"color\": \"<string>\",\n    \"symbolType\": \"ACRONYM_CODE\",\n    \"iconCode\": \"<string>\",\n    \"acronymCode\": \"<string>\"\n  },\n  \"attributeTypes\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"PhoneNumber\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"minimumOccurrences\": \"<integer>\",\n      \"maximumOccurrences\": \"<integer>\",\n      \"readOnly\": \"<boolean>\",\n      \"attributeType\": {\n        \"attributeTypeDiscriminator\": \"<string>\",\n        \"publicId\": \"<string>\",\n        \"description\": \"<string>\",\n        \"name\": \"<string>\",\n        \"resourceType\": \"Tag\",\n        \"createdBy\": \"<uuid>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"id\": \"<uuid>\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"minimumOccurrences\": \"<integer>\",\n      \"maximumOccurrences\": \"<integer>\",\n      \"readOnly\": \"<boolean>\",\n      \"attributeType\": {\n        \"attributeTypeDiscriminator\": \"<string>\",\n        \"publicId\": \"<string>\",\n        \"description\": \"<string>\",\n        \"name\": \"<string>\",\n        \"resourceType\": \"ComplexRelationLeg\",\n        \"createdBy\": \"<uuid>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"id\": \"<uuid>\"\n      }\n    }\n  ],\n  \"legTypes\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ExcelIngestionProperties\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"minimumOccurrences\": \"<integer>\",\n      \"maximumOccurrences\": \"<integer>\",\n      \"assetType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Address\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"role\": \"<string>\",\n      \"coRole\": \"<string>\",\n      \"relationTypeId\": \"<uuid>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Relation\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"minimumOccurrences\": \"<integer>\",\n      \"maximumOccurrences\": \"<integer>\",\n      \"assetType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Workflow\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"role\": \"<string>\",\n      \"coRole\": \"<string>\",\n      \"relationTypeId\": \"<uuid>\"\n    }\n  ]\n}"
								},
								{
									"name": "Complex relation type not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/complexRelationTypes/:complexRelationTypeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"complexRelationTypes",
												":complexRelationTypeId"
											],
											"variable": [
												{
													"key": "complexRelationTypeId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Removes complex relation type identified by given UUID.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/complexRelationTypes/:complexRelationTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"complexRelationTypes",
										":complexRelationTypeId"
									],
									"variable": [
										{
											"key": "complexRelationTypeId",
											"value": "<uuid>",
											"description": "(Required) the unique identifier of the complex relation type"
										}
									]
								},
								"description": "Removes complex relation type identified by given UUID."
							},
							"response": [
								{
									"name": "default response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/complexRelationTypes/:complexRelationTypeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"complexRelationTypes",
												":complexRelationTypeId"
											],
											"variable": [
												{
													"key": "complexRelationTypeId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Changes the complex relation type.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"publicId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"color\": \"#8Af42f\",\n  \"symbolType\": \"ACRONYM_CODE\",\n  \"iconCode\": \"<string>\",\n  \"acronymCode\": \"I\",\n  \"attributeTypes\": [\n    {\n      \"attributeTypeId\": \"<uuid>\",\n      \"min\": \"<integer>\",\n      \"max\": \"<integer>\",\n      \"id\": \"<uuid>\"\n    },\n    {\n      \"attributeTypeId\": \"<uuid>\",\n      \"min\": \"<integer>\",\n      \"max\": \"<integer>\",\n      \"id\": \"<uuid>\"\n    }\n  ],\n  \"legTypes\": [\n    {\n      \"assetTypeId\": \"<uuid>\",\n      \"role\": \"<string>\",\n      \"min\": \"<integer>\",\n      \"max\": \"<integer>\",\n      \"coRole\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\"\n    },\n    {\n      \"assetTypeId\": \"<uuid>\",\n      \"role\": \"<string>\",\n      \"min\": \"<integer>\",\n      \"max\": \"<integer>\",\n      \"coRole\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/complexRelationTypes/:complexRelationTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"complexRelationTypes",
										":complexRelationTypeId"
									],
									"variable": [
										{
											"key": "complexRelationTypeId",
											"value": "<uuid>",
											"description": "(Required) the unique identifier of the complex relation type"
										}
									]
								},
								"description": "Changes the complex relation type with the information that is present in the request.\nOnly properties that are specified in this request and have not <code>null</code> values are updated.\nAll other properties are ignored."
							},
							"response": [
								{
									"name": "Complex relation type successfully changed.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"publicId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"color\": \"#8Af42f\",\n  \"symbolType\": \"ACRONYM_CODE\",\n  \"iconCode\": \"<string>\",\n  \"acronymCode\": \"I\",\n  \"attributeTypes\": [\n    {\n      \"attributeTypeId\": \"<uuid>\",\n      \"min\": \"<integer>\",\n      \"max\": \"<integer>\",\n      \"id\": \"<uuid>\"\n    },\n    {\n      \"attributeTypeId\": \"<uuid>\",\n      \"min\": \"<integer>\",\n      \"max\": \"<integer>\",\n      \"id\": \"<uuid>\"\n    }\n  ],\n  \"legTypes\": [\n    {\n      \"assetTypeId\": \"<uuid>\",\n      \"role\": \"<string>\",\n      \"min\": \"<integer>\",\n      \"max\": \"<integer>\",\n      \"coRole\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\"\n    },\n    {\n      \"assetTypeId\": \"<uuid>\",\n      \"role\": \"<string>\",\n      \"min\": \"<integer>\",\n      \"max\": \"<integer>\",\n      \"coRole\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/complexRelationTypes/:complexRelationTypeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"complexRelationTypes",
												":complexRelationTypeId"
											],
											"variable": [
												{
													"key": "complexRelationTypeId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"DiagramPictureSharingRule\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"publicId\": \"<string>\",\n  \"symbolData\": {\n    \"color\": \"<string>\",\n    \"symbolType\": \"ACRONYM_CODE\",\n    \"iconCode\": \"<string>\",\n    \"acronymCode\": \"<string>\"\n  },\n  \"attributeTypes\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"PhoneNumber\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"minimumOccurrences\": \"<integer>\",\n      \"maximumOccurrences\": \"<integer>\",\n      \"readOnly\": \"<boolean>\",\n      \"attributeType\": {\n        \"attributeTypeDiscriminator\": \"<string>\",\n        \"publicId\": \"<string>\",\n        \"description\": \"<string>\",\n        \"name\": \"<string>\",\n        \"resourceType\": \"Tag\",\n        \"createdBy\": \"<uuid>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"id\": \"<uuid>\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"minimumOccurrences\": \"<integer>\",\n      \"maximumOccurrences\": \"<integer>\",\n      \"readOnly\": \"<boolean>\",\n      \"attributeType\": {\n        \"attributeTypeDiscriminator\": \"<string>\",\n        \"publicId\": \"<string>\",\n        \"description\": \"<string>\",\n        \"name\": \"<string>\",\n        \"resourceType\": \"ComplexRelationLeg\",\n        \"createdBy\": \"<uuid>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"id\": \"<uuid>\"\n      }\n    }\n  ],\n  \"legTypes\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ExcelIngestionProperties\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"minimumOccurrences\": \"<integer>\",\n      \"maximumOccurrences\": \"<integer>\",\n      \"assetType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Address\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"role\": \"<string>\",\n      \"coRole\": \"<string>\",\n      \"relationTypeId\": \"<uuid>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Relation\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"minimumOccurrences\": \"<integer>\",\n      \"maximumOccurrences\": \"<integer>\",\n      \"assetType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Workflow\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"role\": \"<string>\",\n      \"coRole\": \"<string>\",\n      \"relationTypeId\": \"<uuid>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "publicId",
					"item": [
						{
							"name": "{publicId}",
							"item": [
								{
									"name": "Get the complex relation type by public id",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/complexRelationTypes/publicId/:publicId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"complexRelationTypes",
												"publicId",
												":publicId"
											],
											"variable": [
												{
													"key": "publicId",
													"value": "<string>",
													"description": "(Required) The public identifier of the complex relation type"
												}
											]
										},
										"description": "Returns the complex relation type identified by the given public id."
									},
									"response": [
										{
											"name": "Complex relation type found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/complexRelationTypes/publicId/:publicId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"complexRelationTypes",
														"publicId",
														":publicId"
													],
													"variable": [
														{
															"key": "publicId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"DiagramPictureSharingRule\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"publicId\": \"<string>\",\n  \"symbolData\": {\n    \"color\": \"<string>\",\n    \"symbolType\": \"ACRONYM_CODE\",\n    \"iconCode\": \"<string>\",\n    \"acronymCode\": \"<string>\"\n  },\n  \"attributeTypes\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"PhoneNumber\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"minimumOccurrences\": \"<integer>\",\n      \"maximumOccurrences\": \"<integer>\",\n      \"readOnly\": \"<boolean>\",\n      \"attributeType\": {\n        \"attributeTypeDiscriminator\": \"<string>\",\n        \"publicId\": \"<string>\",\n        \"description\": \"<string>\",\n        \"name\": \"<string>\",\n        \"resourceType\": \"Tag\",\n        \"createdBy\": \"<uuid>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"id\": \"<uuid>\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"minimumOccurrences\": \"<integer>\",\n      \"maximumOccurrences\": \"<integer>\",\n      \"readOnly\": \"<boolean>\",\n      \"attributeType\": {\n        \"attributeTypeDiscriminator\": \"<string>\",\n        \"publicId\": \"<string>\",\n        \"description\": \"<string>\",\n        \"name\": \"<string>\",\n        \"resourceType\": \"ComplexRelationLeg\",\n        \"createdBy\": \"<uuid>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"id\": \"<uuid>\"\n      }\n    }\n  ],\n  \"legTypes\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ExcelIngestionProperties\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"minimumOccurrences\": \"<integer>\",\n      \"maximumOccurrences\": \"<integer>\",\n      \"assetType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Address\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"role\": \"<string>\",\n      \"coRole\": \"<string>\",\n      \"relationTypeId\": \"<uuid>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Relation\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"minimumOccurrences\": \"<integer>\",\n      \"maximumOccurrences\": \"<integer>\",\n      \"assetType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Workflow\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"role\": \"<string>\",\n      \"coRole\": \"<string>\",\n      \"relationTypeId\": \"<uuid>\"\n    }\n  ]\n}"
										},
										{
											"name": "Complex relation type not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/complexRelationTypes/publicId/:publicId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"complexRelationTypes",
														"publicId",
														":publicId"
													],
													"variable": [
														{
															"key": "publicId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Returns complex relation types matching the given search criteria.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/complexRelationTypes?offset=0&limit=0&countLimit=-1&name=<string>&nameMatchMode=ANYWHERE",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"complexRelationTypes"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
								},
								{
									"key": "limit",
									"value": "0",
									"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
								},
								{
									"key": "countLimit",
									"value": "-1",
									"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "The name of the Complex Relation Type to search for."
								},
								{
									"key": "nameMatchMode",
									"value": "ANYWHERE",
									"description": "The match mode used to compare <code>name</code>. If the match mode is <code>EXACT</code> the search is case-sensitive, otherwise the search is case-insensitive."
								}
							]
						},
						"description": "Returns complex relation types matching the given search criteria.\nOnly parameters that are specified in this request and have not <code>null</code> values are used for filtering.\nAll other parameters are ignored.\nThe returned complex relation types satisfy all constraints that are specified in this search criteria.\nBy default a result containing 1000 complex relation types is returned."
					},
					"response": [
						{
							"name": "The paged response of found Complex Relation Types.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/complexRelationTypes?offset=0&limit=0&countLimit=-1&name=<string>&nameMatchMode=ANYWHERE",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"complexRelationTypes"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "The name of the Complex Relation Type to search for."
										},
										{
											"key": "nameMatchMode",
											"value": "ANYWHERE",
											"description": "The match mode used to compare <code>name</code>. If the match mode is <code>EXACT</code> the search is case-sensitive, otherwise the search is case-insensitive."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": \"<long>\",\n  \"offset\": \"<long>\",\n  \"limit\": \"<long>\",\n  \"results\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ActivityChange\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"publicId\": \"<string>\",\n      \"symbolData\": {\n        \"color\": \"<string>\",\n        \"symbolType\": \"NONE\",\n        \"iconCode\": \"<string>\",\n        \"acronymCode\": \"<string>\"\n      },\n      \"attributeTypes\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"JdbcIngestionProperties\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"minimumOccurrences\": \"<integer>\",\n          \"maximumOccurrences\": \"<integer>\",\n          \"readOnly\": \"<boolean>\",\n          \"attributeType\": {\n            \"attributeTypeDiscriminator\": \"<string>\",\n            \"publicId\": \"<string>\",\n            \"description\": \"<string>\",\n            \"name\": \"<string>\",\n            \"resourceType\": \"BaseDataType\",\n            \"createdBy\": \"<uuid>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"id\": \"<uuid>\"\n          }\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"AssignedCharacteristicType\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"minimumOccurrences\": \"<integer>\",\n          \"maximumOccurrences\": \"<integer>\",\n          \"readOnly\": \"<boolean>\",\n          \"attributeType\": {\n            \"attributeTypeDiscriminator\": \"<string>\",\n            \"publicId\": \"<string>\",\n            \"description\": \"<string>\",\n            \"name\": \"<string>\",\n            \"resourceType\": \"DateAttributeType\",\n            \"createdBy\": \"<uuid>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"id\": \"<uuid>\"\n          }\n        }\n      ],\n      \"legTypes\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Email\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"minimumOccurrences\": \"<integer>\",\n          \"maximumOccurrences\": \"<integer>\",\n          \"assetType\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"Domain\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"role\": \"<string>\",\n          \"coRole\": \"<string>\",\n          \"relationTypeId\": \"<uuid>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"FormProperty\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"minimumOccurrences\": \"<integer>\",\n          \"maximumOccurrences\": \"<integer>\",\n          \"assetType\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"AttributeType\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"role\": \"<string>\",\n          \"coRole\": \"<string>\",\n          \"relationTypeId\": \"<uuid>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DataQualityMetric\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"publicId\": \"<string>\",\n      \"symbolData\": {\n        \"color\": \"<string>\",\n        \"symbolType\": \"ACRONYM_CODE\",\n        \"iconCode\": \"<string>\",\n        \"acronymCode\": \"<string>\"\n      },\n      \"attributeTypes\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"DiagramPictureSharingRule\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"minimumOccurrences\": \"<integer>\",\n          \"maximumOccurrences\": \"<integer>\",\n          \"readOnly\": \"<boolean>\",\n          \"attributeType\": {\n            \"attributeTypeDiscriminator\": \"<string>\",\n            \"publicId\": \"<string>\",\n            \"description\": \"<string>\",\n            \"name\": \"<string>\",\n            \"resourceType\": \"Context\",\n            \"createdBy\": \"<uuid>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"id\": \"<uuid>\"\n          }\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Domain\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"minimumOccurrences\": \"<integer>\",\n          \"maximumOccurrences\": \"<integer>\",\n          \"readOnly\": \"<boolean>\",\n          \"attributeType\": {\n            \"attributeTypeDiscriminator\": \"<string>\",\n            \"publicId\": \"<string>\",\n            \"description\": \"<string>\",\n            \"name\": \"<string>\",\n            \"resourceType\": \"BaseDataType\",\n            \"createdBy\": \"<uuid>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"id\": \"<uuid>\"\n          }\n        }\n      ],\n      \"legTypes\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"DomainType\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"minimumOccurrences\": \"<integer>\",\n          \"maximumOccurrences\": \"<integer>\",\n          \"assetType\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"Status\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"role\": \"<string>\",\n          \"coRole\": \"<string>\",\n          \"relationTypeId\": \"<uuid>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"AssetType\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"minimumOccurrences\": \"<integer>\",\n          \"maximumOccurrences\": \"<integer>\",\n          \"assetType\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"ComplexRelationLeg\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"role\": \"<string>\",\n          \"coRole\": \"<string>\",\n          \"relationTypeId\": \"<uuid>\"\n        }\n      ]\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Adds a new complex relation type.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"attributeTypes\": [\n    {\n      \"attributeTypeId\": \"<uuid>\",\n      \"min\": \"<integer>\",\n      \"max\": \"<integer>\",\n      \"id\": \"<uuid>\"\n    },\n    {\n      \"attributeTypeId\": \"<uuid>\",\n      \"min\": \"<integer>\",\n      \"max\": \"<integer>\",\n      \"id\": \"<uuid>\"\n    }\n  ],\n  \"legTypes\": [\n    {\n      \"assetTypeId\": \"<uuid>\",\n      \"role\": \"<string>\",\n      \"min\": \"<integer>\",\n      \"max\": \"<integer>\",\n      \"coRole\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"symbolType\": \"ICON_CODE\",\n  \"id\": \"<uuid>\",\n  \"publicId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"color\": \"#a8624b\",\n  \"iconCode\": \"<string>\",\n  \"acronymCode\": \"T\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/complexRelationTypes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"complexRelationTypes"
							]
						},
						"description": "Adds a new complex relation type."
					},
					"response": [
						{
							"name": "Complex relation type successfully added.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attributeTypes\": [\n    {\n      \"attributeTypeId\": \"<uuid>\",\n      \"min\": \"<integer>\",\n      \"max\": \"<integer>\",\n      \"id\": \"<uuid>\"\n    },\n    {\n      \"attributeTypeId\": \"<uuid>\",\n      \"min\": \"<integer>\",\n      \"max\": \"<integer>\",\n      \"id\": \"<uuid>\"\n    }\n  ],\n  \"legTypes\": [\n    {\n      \"assetTypeId\": \"<uuid>\",\n      \"role\": \"<string>\",\n      \"min\": \"<integer>\",\n      \"max\": \"<integer>\",\n      \"coRole\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"symbolType\": \"ICON_CODE\",\n  \"id\": \"<uuid>\",\n  \"publicId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"color\": \"#a8624b\",\n  \"iconCode\": \"<string>\",\n  \"acronymCode\": \"T\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/complexRelationTypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"complexRelationTypes"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"DiagramPictureSharingRule\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"publicId\": \"<string>\",\n  \"symbolData\": {\n    \"color\": \"<string>\",\n    \"symbolType\": \"ACRONYM_CODE\",\n    \"iconCode\": \"<string>\",\n    \"acronymCode\": \"<string>\"\n  },\n  \"attributeTypes\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"PhoneNumber\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"minimumOccurrences\": \"<integer>\",\n      \"maximumOccurrences\": \"<integer>\",\n      \"readOnly\": \"<boolean>\",\n      \"attributeType\": {\n        \"attributeTypeDiscriminator\": \"<string>\",\n        \"publicId\": \"<string>\",\n        \"description\": \"<string>\",\n        \"name\": \"<string>\",\n        \"resourceType\": \"Tag\",\n        \"createdBy\": \"<uuid>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"id\": \"<uuid>\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"minimumOccurrences\": \"<integer>\",\n      \"maximumOccurrences\": \"<integer>\",\n      \"readOnly\": \"<boolean>\",\n      \"attributeType\": {\n        \"attributeTypeDiscriminator\": \"<string>\",\n        \"publicId\": \"<string>\",\n        \"description\": \"<string>\",\n        \"name\": \"<string>\",\n        \"resourceType\": \"ComplexRelationLeg\",\n        \"createdBy\": \"<uuid>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"id\": \"<uuid>\"\n      }\n    }\n  ],\n  \"legTypes\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ExcelIngestionProperties\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"minimumOccurrences\": \"<integer>\",\n      \"maximumOccurrences\": \"<integer>\",\n      \"assetType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Address\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"role\": \"<string>\",\n      \"coRole\": \"<string>\",\n      \"relationTypeId\": \"<uuid>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Relation\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"minimumOccurrences\": \"<integer>\",\n      \"maximumOccurrences\": \"<integer>\",\n      \"assetType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Workflow\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"role\": \"<string>\",\n      \"coRole\": \"<string>\",\n      \"relationTypeId\": \"<uuid>\"\n    }\n  ]\n}"
						},
						{
							"name": "A complex relation type with the given ID already exists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attributeTypes\": [\n    {\n      \"attributeTypeId\": \"<uuid>\",\n      \"min\": \"<integer>\",\n      \"max\": \"<integer>\",\n      \"id\": \"<uuid>\"\n    },\n    {\n      \"attributeTypeId\": \"<uuid>\",\n      \"min\": \"<integer>\",\n      \"max\": \"<integer>\",\n      \"id\": \"<uuid>\"\n    }\n  ],\n  \"legTypes\": [\n    {\n      \"assetTypeId\": \"<uuid>\",\n      \"role\": \"<string>\",\n      \"min\": \"<integer>\",\n      \"max\": \"<integer>\",\n      \"coRole\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"relationTypeId\": \"<uuid>\"\n    }\n  ],\n  \"name\": \"<string>\",\n  \"symbolType\": \"ICON_CODE\",\n  \"id\": \"<uuid>\",\n  \"publicId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"color\": \"#a8624b\",\n  \"iconCode\": \"<string>\",\n  \"acronymCode\": \"T\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/complexRelationTypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"complexRelationTypes"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "domainTypes",
			"item": [
				{
					"name": "bulk",
					"item": [
						{
							"name": "Adds multiple new domain types.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"name\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"publicId\": \"<string>\",\n    \"description\": \"<string>\",\n    \"parentId\": \"<uuid>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"publicId\": \"<string>\",\n    \"description\": \"<string>\",\n    \"parentId\": \"<uuid>\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/domainTypes/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domainTypes",
										"bulk"
									]
								},
								"description": "Adds multiple new domain types."
							},
							"response": [
								{
									"name": "Domain types successfully added.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"name\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"publicId\": \"<string>\",\n    \"description\": \"<string>\",\n    \"parentId\": \"<uuid>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"publicId\": \"<string>\",\n    \"description\": \"<string>\",\n    \"parentId\": \"<uuid>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/domainTypes/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domainTypes",
												"bulk"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Job\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"publicId\": \"<string>\",\n    \"parent\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DomainType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"View\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"publicId\": \"<string>\",\n    \"parent\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationLegType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  }\n]"
								}
							]
						},
						{
							"name": "Removes multiple domain types.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/domainTypes/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domainTypes",
										"bulk"
									]
								},
								"description": "Removes multiple domain types identified by the UUIDs passed as parameter."
							},
							"response": [
								{
									"name": "default response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/domainTypes/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domainTypes",
												"bulk"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Changes the domain types.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"publicId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"parentId\": \"<uuid>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"publicId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"parentId\": \"<uuid>\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/domainTypes/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domainTypes",
										"bulk"
									]
								},
								"description": "Changes the domain types with the information present in the request."
							},
							"response": [
								{
									"name": "Domain types successfully changed.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"publicId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"parentId\": \"<uuid>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"publicId\": \"<string>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"parentId\": \"<uuid>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/domainTypes/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domainTypes",
												"bulk"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Job\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"publicId\": \"<string>\",\n    \"parent\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DomainType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"View\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"publicId\": \"<string>\",\n    \"parent\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationLegType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  }\n]"
								}
							]
						}
					]
				},
				{
					"name": "{domainTypeId}",
					"item": [
						{
							"name": "subTypes",
							"item": [
								{
									"name": "Returns sub domain types matching the given search criteria.",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/domainTypes/:domainTypeId/subTypes?domainTypeId=<uuid>&includeParent=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domainTypes",
												":domainTypeId",
												"subTypes"
											],
											"query": [
												{
													"key": "domainTypeId",
													"value": "<uuid>",
													"description": "(Required) The ID of the Domain Type to search the subtypes of. Because it duplicates the corresponding domainTypeId path parameter and prevents some client code generators from working as expected, this will be removed in the next quarterly release."
												},
												{
													"key": "includeParent",
													"value": "<boolean>",
													"description": "Whether parent Domain Type should be included in the search result."
												}
											],
											"variable": [
												{
													"key": "domainTypeId",
													"value": "<uuid>",
													"description": "(Required) the unique identifier of the domain type"
												}
											]
										},
										"description": "Returns sub domain types matching the given search criteria."
									},
									"response": [
										{
											"name": "The paged response of found sub Domain types.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/domainTypes/:domainTypeId/subTypes?domainTypeId=<uuid>&includeParent=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"domainTypes",
														":domainTypeId",
														"subTypes"
													],
													"query": [
														{
															"key": "domainTypeId",
															"value": "<uuid>",
															"description": "(Required) The ID of the Domain Type to search the subtypes of. Because it duplicates the corresponding domainTypeId path parameter and prevents some client code generators from working as expected, this will be removed in the next quarterly release."
														},
														{
															"key": "includeParent",
															"value": "<boolean>",
															"description": "Whether parent Domain Type should be included in the search result."
														}
													],
													"variable": [
														{
															"key": "domainTypeId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"total\": \"<long>\",\n  \"offset\": \"<long>\",\n  \"limit\": \"<long>\",\n  \"results\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DiagramPicture\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"publicId\": \"<string>\",\n      \"parent\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ConnectionStringParameter\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"SingleValueListAttributeType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"publicId\": \"<string>\",\n      \"parent\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ScriptAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Returns domain type identified by given UUID.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domainTypes/:domainTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domainTypes",
										":domainTypeId"
									],
									"variable": [
										{
											"key": "domainTypeId",
											"value": "<uuid>",
											"description": "(Required) the unique identifier of the domain type"
										}
									]
								},
								"description": "Returns domain type identified by given UUID."
							},
							"response": [
								{
									"name": "Domain Type found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/domainTypes/:domainTypeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domainTypes",
												":domainTypeId"
											],
											"variable": [
												{
													"key": "domainTypeId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Assignment\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"publicId\": \"<string>\",\n  \"parent\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Domain\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  }\n}"
								},
								{
									"name": "Domain Type not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/domainTypes/:domainTypeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domainTypes",
												":domainTypeId"
											],
											"variable": [
												{
													"key": "domainTypeId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Removes domain type identified by given UUID.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domainTypes/:domainTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domainTypes",
										":domainTypeId"
									],
									"variable": [
										{
											"key": "domainTypeId",
											"value": "<uuid>",
											"description": "(Required) the unique identifier of the domain type"
										}
									]
								},
								"description": "Removes domain type identified by given UUID."
							},
							"response": [
								{
									"name": "default response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/domainTypes/:domainTypeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domainTypes",
												":domainTypeId"
											],
											"variable": [
												{
													"key": "domainTypeId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Changes the domain type.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<uuid>\",\n  \"publicId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"parentId\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/domainTypes/:domainTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domainTypes",
										":domainTypeId"
									],
									"variable": [
										{
											"key": "domainTypeId",
											"value": "<uuid>",
											"description": "(Required) the unique identifier of the domain type"
										}
									]
								},
								"description": "Changes the domain type with the information present in the request.\nOnly properties that are specified in this request and have not <code>null</code> values are updated.\nAll other properties are ignored.\n"
							},
							"response": [
								{
									"name": "Domain type successfully changed.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"publicId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"parentId\": \"<uuid>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/domainTypes/:domainTypeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domainTypes",
												":domainTypeId"
											],
											"variable": [
												{
													"key": "domainTypeId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Assignment\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"publicId\": \"<string>\",\n  \"parent\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Domain\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "publicId",
					"item": [
						{
							"name": "{publicId}",
							"item": [
								{
									"name": "Get the domain type by public id",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/domainTypes/publicId/:publicId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domainTypes",
												"publicId",
												":publicId"
											],
											"variable": [
												{
													"key": "publicId",
													"value": "<string>",
													"description": "(Required) The public identifier of the domain type"
												}
											]
										},
										"description": "Returns the domain type identified by the given public id."
									},
									"response": [
										{
											"name": "Domain type found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/domainTypes/publicId/:publicId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"domainTypes",
														"publicId",
														":publicId"
													],
													"variable": [
														{
															"key": "publicId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Assignment\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"publicId\": \"<string>\",\n  \"parent\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Domain\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  }\n}"
										},
										{
											"name": "Domain type not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/domainTypes/publicId/:publicId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"domainTypes",
														"publicId",
														":publicId"
													],
													"variable": [
														{
															"key": "publicId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Returns domain types matching the given search criteria.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/domainTypes?offset=0&limit=0&countLimit=-1&name=<string>&nameMatchMode=ANYWHERE&parentId=<uuid>&excludeMeta=true&topLevel=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"domainTypes"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
								},
								{
									"key": "limit",
									"value": "0",
									"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
								},
								{
									"key": "countLimit",
									"value": "-1",
									"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "The name of the Domain Type to search for."
								},
								{
									"key": "nameMatchMode",
									"value": "ANYWHERE",
									"description": "The match mode used to compare <code>name</code>. The search is case-insensitive."
								},
								{
									"key": "parentId",
									"value": "<uuid>",
									"description": "The ID of the parent to find the Domain Types in."
								},
								{
									"key": "excludeMeta",
									"value": "true",
									"description": "Whether the meta Domain Types should be excluded from search or not."
								},
								{
									"key": "topLevel",
									"value": "false",
									"description": "Whether only top level Domain Types should be searched or not."
								}
							]
						},
						"description": "Returns domain types matching the given search criteria.\nOnly parameters that are specified in this request and have not <code>null</code> values are used for filtering.\nAll other parameters are ignored.\nThe returned domain types satisfy all constraints that are specified in this search criteria.\nBy default a result containing 1000 domain types is returned."
					},
					"response": [
						{
							"name": "The paged response of found Domain types.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domainTypes?offset=0&limit=0&countLimit=-1&name=<string>&nameMatchMode=ANYWHERE&parentId=<uuid>&excludeMeta=true&topLevel=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domainTypes"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "The name of the Domain Type to search for."
										},
										{
											"key": "nameMatchMode",
											"value": "ANYWHERE",
											"description": "The match mode used to compare <code>name</code>. The search is case-insensitive."
										},
										{
											"key": "parentId",
											"value": "<uuid>",
											"description": "The ID of the parent to find the Domain Types in."
										},
										{
											"key": "excludeMeta",
											"value": "true",
											"description": "Whether the meta Domain Types should be excluded from search or not."
										},
										{
											"key": "topLevel",
											"value": "false",
											"description": "Whether only top level Domain Types should be searched or not."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": \"<long>\",\n  \"offset\": \"<long>\",\n  \"limit\": \"<long>\",\n  \"results\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DiagramPicture\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"publicId\": \"<string>\",\n      \"parent\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ConnectionStringParameter\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"SingleValueListAttributeType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"publicId\": \"<string>\",\n      \"parent\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ScriptAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Adds a new domain type.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"publicId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"parentId\": \"<uuid>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/domainTypes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"domainTypes"
							]
						},
						"description": "Adds a new domain type."
					},
					"response": [
						{
							"name": "Domain type successfully added.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"publicId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"parentId\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/domainTypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domainTypes"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Assignment\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"publicId\": \"<string>\",\n  \"parent\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Domain\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  }\n}"
						},
						{
							"name": "A domain type with the given ID already exists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"publicId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"parentId\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/domainTypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domainTypes"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "relationTypes",
			"item": [
				{
					"name": "bulk",
					"item": [
						{
							"name": "Adds multiple new relation type.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"coRole\": \"<string>\",\n    \"role\": \"<string>\",\n    \"sourceTypeId\": \"<uuid>\",\n    \"targetTypeId\": \"<uuid>\",\n    \"id\": \"<uuid>\",\n    \"publicId\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  {\n    \"coRole\": \"<string>\",\n    \"role\": \"<string>\",\n    \"sourceTypeId\": \"<uuid>\",\n    \"targetTypeId\": \"<uuid>\",\n    \"id\": \"<uuid>\",\n    \"publicId\": \"<string>\",\n    \"description\": \"<string>\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/relationTypes/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"relationTypes",
										"bulk"
									]
								},
								"description": "Adds multiple new relation type."
							},
							"response": [
								{
									"name": "Relation types successfully added.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"coRole\": \"<string>\",\n    \"role\": \"<string>\",\n    \"sourceTypeId\": \"<uuid>\",\n    \"targetTypeId\": \"<uuid>\",\n    \"id\": \"<uuid>\",\n    \"publicId\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  {\n    \"coRole\": \"<string>\",\n    \"role\": \"<string>\",\n    \"sourceTypeId\": \"<uuid>\",\n    \"targetTypeId\": \"<uuid>\",\n    \"id\": \"<uuid>\",\n    \"publicId\": \"<string>\",\n    \"description\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/relationTypes/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relationTypes",
												"bulk"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"PhysicalDataConnector\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"publicId\": \"<string>\",\n    \"sourceType\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Domain\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"targetType\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"MultiValueListAttributeType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"role\": \"<string>\",\n    \"coRole\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Email\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"publicId\": \"<string>\",\n    \"sourceType\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"targetType\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DateAttribute\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"role\": \"<string>\",\n    \"coRole\": \"<string>\",\n    \"description\": \"<string>\"\n  }\n]"
								}
							]
						},
						{
							"name": "Removes multiple relation types.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/relationTypes/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"relationTypes",
										"bulk"
									]
								},
								"description": "Removes multiple relation types identified by the UUIDs passed as parameter."
							},
							"response": [
								{
									"name": "default response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/relationTypes/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relationTypes",
												"bulk"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Changes the relation types.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"publicId\": \"<string>\",\n    \"sourceTypeId\": \"<uuid>\",\n    \"role\": \"<string>\",\n    \"targetTypeId\": \"<uuid>\",\n    \"coRole\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"publicId\": \"<string>\",\n    \"sourceTypeId\": \"<uuid>\",\n    \"role\": \"<string>\",\n    \"targetTypeId\": \"<uuid>\",\n    \"coRole\": \"<string>\",\n    \"description\": \"<string>\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/relationTypes/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"relationTypes",
										"bulk"
									]
								},
								"description": "Changes the relation types with the information that is present in the request.\nOnly properties that are specified in this request and have not <code>null</code> values are updated.\nAll other properties are ignored."
							},
							"response": [
								{
									"name": "Relation types successfully changed.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"publicId\": \"<string>\",\n    \"sourceTypeId\": \"<uuid>\",\n    \"role\": \"<string>\",\n    \"targetTypeId\": \"<uuid>\",\n    \"coRole\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"publicId\": \"<string>\",\n    \"sourceTypeId\": \"<uuid>\",\n    \"role\": \"<string>\",\n    \"targetTypeId\": \"<uuid>\",\n    \"coRole\": \"<string>\",\n    \"description\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/relationTypes/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relationTypes",
												"bulk"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"PhysicalDataConnector\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"publicId\": \"<string>\",\n    \"sourceType\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Domain\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"targetType\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"MultiValueListAttributeType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"role\": \"<string>\",\n    \"coRole\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Email\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"publicId\": \"<string>\",\n    \"sourceType\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"targetType\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DateAttribute\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"role\": \"<string>\",\n    \"coRole\": \"<string>\",\n    \"description\": \"<string>\"\n  }\n]"
								}
							]
						}
					]
				},
				{
					"name": "{relationTypeId}",
					"item": [
						{
							"name": "Returns relation type identified by given UUID.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/relationTypes/:relationTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"relationTypes",
										":relationTypeId"
									],
									"variable": [
										{
											"key": "relationTypeId",
											"value": "<uuid>",
											"description": "(Required) The unique identifier of the relationType"
										}
									]
								},
								"description": "Returns relation type identified by given UUID."
							},
							"response": [
								{
									"name": "Relation Type found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/relationTypes/:relationTypeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relationTypes",
												":relationTypeId"
											],
											"variable": [
												{
													"key": "relationTypeId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"NumericAttributeType\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"publicId\": \"<string>\",\n  \"sourceType\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"BooleanAttributeType\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"targetType\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Asset\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"role\": \"<string>\",\n  \"coRole\": \"<string>\",\n  \"description\": \"<string>\"\n}"
								},
								{
									"name": "Relation Type not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/relationTypes/:relationTypeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relationTypes",
												":relationTypeId"
											],
											"variable": [
												{
													"key": "relationTypeId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Removes relation type identified by given UUID.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/relationTypes/:relationTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"relationTypes",
										":relationTypeId"
									],
									"variable": [
										{
											"key": "relationTypeId",
											"value": "<uuid>",
											"description": "(Required) The unique identifier of the relationType"
										}
									]
								},
								"description": "Removes relation type identified by given UUID."
							},
							"response": [
								{
									"name": "default response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/relationTypes/:relationTypeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relationTypes",
												":relationTypeId"
											],
											"variable": [
												{
													"key": "relationTypeId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Changes the relation type.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<uuid>\",\n  \"publicId\": \"<string>\",\n  \"sourceTypeId\": \"<uuid>\",\n  \"role\": \"<string>\",\n  \"targetTypeId\": \"<uuid>\",\n  \"coRole\": \"<string>\",\n  \"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/relationTypes/:relationTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"relationTypes",
										":relationTypeId"
									],
									"variable": [
										{
											"key": "relationTypeId",
											"value": "<uuid>",
											"description": "(Required) The unique identifier of the relationType"
										}
									]
								},
								"description": "Changes the relation type with the information that is present in the request.\nOnly properties that are specified in this request and have not <code>null</code> values are updated.\nAll other properties are ignored."
							},
							"response": [
								{
									"name": "Relation type successfully changed.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"publicId\": \"<string>\",\n  \"sourceTypeId\": \"<uuid>\",\n  \"role\": \"<string>\",\n  \"targetTypeId\": \"<uuid>\",\n  \"coRole\": \"<string>\",\n  \"description\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/relationTypes/:relationTypeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relationTypes",
												":relationTypeId"
											],
											"variable": [
												{
													"key": "relationTypeId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"NumericAttributeType\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"publicId\": \"<string>\",\n  \"sourceType\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"BooleanAttributeType\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"targetType\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Asset\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"role\": \"<string>\",\n  \"coRole\": \"<string>\",\n  \"description\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "publicId",
					"item": [
						{
							"name": "{publicId}",
							"item": [
								{
									"name": "Get the relation type by public id",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/relationTypes/publicId/:publicId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"relationTypes",
												"publicId",
												":publicId"
											],
											"variable": [
												{
													"key": "publicId",
													"value": "<string>",
													"description": "(Required) The public identifier of the relation type"
												}
											]
										},
										"description": "Returns the relation type identified by the given public id."
									},
									"response": [
										{
											"name": "Relation type found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/relationTypes/publicId/:publicId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"relationTypes",
														"publicId",
														":publicId"
													],
													"variable": [
														{
															"key": "publicId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"NumericAttributeType\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"publicId\": \"<string>\",\n  \"sourceType\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"BooleanAttributeType\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"targetType\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Asset\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"role\": \"<string>\",\n  \"coRole\": \"<string>\",\n  \"description\": \"<string>\"\n}"
										},
										{
											"name": "Relation type not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/relationTypes/publicId/:publicId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"relationTypes",
														"publicId",
														":publicId"
													],
													"variable": [
														{
															"key": "publicId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Finds all the relation types matching the given criteria.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/relationTypes?offset=0&limit=0&countLimit=-1&sourceTypeId=<uuid>&sourceTypeName=<string>&role=<string>&targetTypeId=<uuid>&targetTypeName=<string>&coRole=<string>&sortField=ROLE&sortOrder=ASC&roleCoRoleLogicalOperator=AND",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"relationTypes"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
								},
								{
									"key": "limit",
									"value": "0",
									"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
								},
								{
									"key": "countLimit",
									"value": "-1",
									"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
								},
								{
									"key": "sourceTypeId",
									"value": "<uuid>",
									"description": "The ID of the source type of the Relation Type to search for."
								},
								{
									"key": "sourceTypeName",
									"value": "<string>",
									"description": "The name of the source type of the Relation Type to search for."
								},
								{
									"key": "role",
									"value": "<string>",
									"description": "The name of the role that the source plays to search for."
								},
								{
									"key": "targetTypeId",
									"value": "<uuid>",
									"description": "The ID of the target type of the Relation Type to search for."
								},
								{
									"key": "targetTypeName",
									"value": "<string>",
									"description": "The name of the target type of the Relation Type to search for."
								},
								{
									"key": "coRole",
									"value": "<string>",
									"description": "The name of the role that the target plays to search for."
								},
								{
									"key": "sortField",
									"value": "ROLE",
									"description": "The field that should be used as reference for sorting."
								},
								{
									"key": "sortOrder",
									"value": "ASC",
									"description": "The order of sorting."
								},
								{
									"key": "roleCoRoleLogicalOperator",
									"value": "AND",
									"description": "The logical operator determining how to combine the role and coRole criteria: AND or OR."
								}
							]
						},
						"description": "Returns relation types matching the given search criteria.\nOnly parameters that are specified in this request and have not <code>null</code> values are used for filtering.\nAll other parameters are ignored.\nThe returned relation types satisfy all constraints that are specified in this search criteria.\nBy default a result containing 1000 relation types is returned.\n"
					},
					"response": [
						{
							"name": "The paged response of found Relation types.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/relationTypes?offset=0&limit=0&countLimit=-1&sourceTypeId=<uuid>&sourceTypeName=<string>&role=<string>&targetTypeId=<uuid>&targetTypeName=<string>&coRole=<string>&sortField=ROLE&sortOrder=ASC&roleCoRoleLogicalOperator=AND",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"relationTypes"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
										},
										{
											"key": "sourceTypeId",
											"value": "<uuid>",
											"description": "The ID of the source type of the Relation Type to search for."
										},
										{
											"key": "sourceTypeName",
											"value": "<string>",
											"description": "The name of the source type of the Relation Type to search for."
										},
										{
											"key": "role",
											"value": "<string>",
											"description": "The name of the role that the source plays to search for."
										},
										{
											"key": "targetTypeId",
											"value": "<uuid>",
											"description": "The ID of the target type of the Relation Type to search for."
										},
										{
											"key": "targetTypeName",
											"value": "<string>",
											"description": "The name of the target type of the Relation Type to search for."
										},
										{
											"key": "coRole",
											"value": "<string>",
											"description": "The name of the role that the target plays to search for."
										},
										{
											"key": "sortField",
											"value": "ROLE",
											"description": "The field that should be used as reference for sorting."
										},
										{
											"key": "sortOrder",
											"value": "ASC",
											"description": "The order of sorting."
										},
										{
											"key": "roleCoRoleLogicalOperator",
											"value": "AND",
											"description": "The logical operator determining how to combine the role and coRole criteria: AND or OR."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": \"<long>\",\n  \"offset\": \"<long>\",\n  \"limit\": \"<long>\",\n  \"results\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ActivityChange\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"publicId\": \"<string>\",\n      \"sourceType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Email\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"targetType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"JdbcIngestionProperties\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"role\": \"<string>\",\n      \"coRole\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Address\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"publicId\": \"<string>\",\n      \"sourceType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Context\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"targetType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"MultiValueListAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"role\": \"<string>\",\n      \"coRole\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Adds a new relation type.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"coRole\": \"<string>\",\n  \"role\": \"<string>\",\n  \"sourceTypeId\": \"<uuid>\",\n  \"targetTypeId\": \"<uuid>\",\n  \"id\": \"<uuid>\",\n  \"publicId\": \"<string>\",\n  \"description\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/relationTypes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"relationTypes"
							]
						},
						"description": "Adds a new relation type."
					},
					"response": [
						{
							"name": "Relation type successfully added.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"coRole\": \"<string>\",\n  \"role\": \"<string>\",\n  \"sourceTypeId\": \"<uuid>\",\n  \"targetTypeId\": \"<uuid>\",\n  \"id\": \"<uuid>\",\n  \"publicId\": \"<string>\",\n  \"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/relationTypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"relationTypes"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"NumericAttributeType\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"publicId\": \"<string>\",\n  \"sourceType\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"BooleanAttributeType\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"targetType\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Asset\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"role\": \"<string>\",\n  \"coRole\": \"<string>\",\n  \"description\": \"<string>\"\n}"
						},
						{
							"name": "A relation type with the given ID already exists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"coRole\": \"<string>\",\n  \"role\": \"<string>\",\n  \"sourceTypeId\": \"<uuid>\",\n  \"targetTypeId\": \"<uuid>\",\n  \"id\": \"<uuid>\",\n  \"publicId\": \"<string>\",\n  \"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/relationTypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"relationTypes"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "statuses",
			"item": [
				{
					"name": "bulk",
					"item": [
						{
							"name": "Adds multiple statuses in one go.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"name\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/statuses/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"statuses",
										"bulk"
									]
								},
								"description": "Adds multiple statuses in one go."
							},
							"response": [
								{
									"name": "Statuses successfully added.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"name\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/statuses/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"statuses",
												"bulk"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"DataQualityRule\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Activity\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n  }\n]"
								}
							]
						},
						{
							"name": "Removes multiple statuses.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/statuses/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"statuses",
										"bulk"
									]
								},
								"description": "Removes multiple statuses."
							},
							"response": [
								{
									"name": "Statuses removed.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/statuses/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"statuses",
												"bulk"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Changes multiple statuses in one go.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/statuses/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"statuses",
										"bulk"
									]
								},
								"description": "Changes multiple statuses in one go."
							},
							"response": [
								{
									"name": "Statuses were successfully changed.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/statuses/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"statuses",
												"bulk"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"DataQualityRule\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Activity\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n  }\n]"
								}
							]
						}
					]
				},
				{
					"name": "{statusId}",
					"item": [
						{
							"name": "Returns the Status identified by the given id.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/statuses/:statusId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"statuses",
										":statusId"
									],
									"variable": [
										{
											"key": "statusId",
											"value": "<uuid>",
											"description": "(Required) The <code>id</code> of the Status"
										}
									]
								},
								"description": "Returns the Status identified by the given id."
							},
							"response": [
								{
									"name": "Status found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/statuses/:statusId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"statuses",
												":statusId"
											],
											"variable": [
												{
													"key": "statusId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"ExcelIngestionProperties\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n}"
								},
								{
									"name": "Status not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/statuses/:statusId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"statuses",
												":statusId"
											],
											"variable": [
												{
													"key": "statusId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Removes the Status identified by the given id.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/statuses/:statusId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"statuses",
										":statusId"
									],
									"variable": [
										{
											"key": "statusId",
											"value": "<uuid>",
											"description": "(Required) The <code>id</code> of the Status."
										}
									]
								},
								"description": "Removes the Status identified by the given id."
							},
							"response": [
								{
									"name": "Status removed.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/statuses/:statusId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"statuses",
												":statusId"
											],
											"variable": [
												{
													"key": "statusId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Status not found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/statuses/:statusId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"statuses",
												":statusId"
											],
											"variable": [
												{
													"key": "statusId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Changes the status with the information that is present in the request.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/statuses/:statusId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"statuses",
										":statusId"
									],
									"variable": [
										{
											"key": "statusId",
											"value": "<uuid>",
											"description": "(Required) The unique identifier of the status."
										}
									]
								},
								"description": "Changes the status with the information that is present in the request. Only properties that are specified in this request and have not <code>null</code> values are updated. All other properties are ignored."
							},
							"response": [
								{
									"name": "Statuses were successfully changed.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/statuses/:statusId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"statuses",
												":statusId"
											],
											"variable": [
												{
													"key": "statusId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"ExcelIngestionProperties\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "name",
					"item": [
						{
							"name": "{statusName}",
							"item": [
								{
									"name": "Returns the Status identified by the given name.",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/statuses/name/:statusName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"statuses",
												"name",
												":statusName"
											],
											"variable": [
												{
													"key": "statusName",
													"value": "<string>",
													"description": "(Required) The name that identifies the Status."
												}
											]
										},
										"description": "Returns the Status identified by the given name."
									},
									"response": [
										{
											"name": "Status found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/statuses/name/:statusName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"statuses",
														"name",
														":statusName"
													],
													"variable": [
														{
															"key": "statusName"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"ExcelIngestionProperties\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n}"
										},
										{
											"name": "Status not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/statuses/name/:statusName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"statuses",
														"name",
														":statusName"
													],
													"variable": [
														{
															"key": "statusName"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Returns statuses matching the given search criteria.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/statuses?offset=0&limit=0&countLimit=-1&name=<string>&nameMatchMode=ANYWHERE&description=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"statuses"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
								},
								{
									"key": "limit",
									"value": "0",
									"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
								},
								{
									"key": "countLimit",
									"value": "-1",
									"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "The name of the Status to search for."
								},
								{
									"key": "nameMatchMode",
									"value": "ANYWHERE",
									"description": "The match mode used to compare <code>name</code>. If the match mode is <code>EXACT</code> the search is case-sensitive, otherwise the search is case-insensitive."
								},
								{
									"key": "description",
									"value": "<string>",
									"description": "The description of the Status to search for."
								}
							]
						},
						"description": "Returns statuses matching the given search criteria. Only parameters that are specified in this request and have not <code>null</code> values are used for filtering. All other parameters are ignored. The returned statuses satisfy all constraints that are specified in this search criteria. By default a result containing 1000 statuses is returned. "
					},
					"response": [
						{
							"name": "The paged response with found Status information.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/statuses?offset=0&limit=0&countLimit=-1&name=<string>&nameMatchMode=ANYWHERE&description=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"statuses"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "The name of the Status to search for."
										},
										{
											"key": "nameMatchMode",
											"value": "ANYWHERE",
											"description": "The match mode used to compare <code>name</code>. If the match mode is <code>EXACT</code> the search is case-sensitive, otherwise the search is case-insensitive."
										},
										{
											"key": "description",
											"value": "<string>",
											"description": "The description of the Status to search for."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": \"<long>\",\n  \"offset\": \"<long>\",\n  \"limit\": \"<long>\",\n  \"results\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"PhysicalDataConnector\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DiagramPicture\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Adds a new Status.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"description\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/statuses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"statuses"
							]
						},
						"description": "Adds a new Status."
					},
					"response": [
						{
							"name": "Status successfully added.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/statuses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"statuses"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"ExcelIngestionProperties\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n}"
						},
						{
							"name": "A status with the given ID already exists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/statuses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"statuses"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "traits",
			"item": [
				{
					"name": "{traitId}",
					"item": [
						{
							"name": "Get trait by ID",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/traits/:traitId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"traits",
										":traitId"
									],
									"variable": [
										{
											"key": "traitId",
											"value": "<uuid>",
											"description": "(Required) The ID of the trait"
										}
									]
								},
								"description": "Returns the trait identified by the given ID."
							},
							"response": [
								{
									"name": "Trait found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/traits/:traitId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"traits",
												":traitId"
											],
											"variable": [
												{
													"key": "traitId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"ComplexRelationType\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"publicId\": \"<string>\"\n}"
								},
								{
									"name": "Trait not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/traits/:traitId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"traits",
												":traitId"
											],
											"variable": [
												{
													"key": "traitId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "publicId",
					"item": [
						{
							"name": "{publicId}",
							"item": [
								{
									"name": "Get the trait by public id",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/traits/publicId/:publicId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"traits",
												"publicId",
												":publicId"
											],
											"variable": [
												{
													"key": "publicId",
													"value": "<string>",
													"description": "(Required) The public identifier of the trait"
												}
											]
										},
										"description": "Returns the trait identified by the given public id."
									},
									"response": [
										{
											"name": "Trait found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/traits/publicId/:publicId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"traits",
														"publicId",
														":publicId"
													],
													"variable": [
														{
															"key": "publicId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"ComplexRelationType\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"publicId\": \"<string>\"\n}"
										},
										{
											"name": "Trait not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/traits/publicId/:publicId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"traits",
														"publicId",
														":publicId"
													],
													"variable": [
														{
															"key": "publicId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Find traits matching criteria",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/traits?offset=0&limit=0&countLimit=-1&name=<string>&nameMatchMode=ANYWHERE",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"traits"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
								},
								{
									"key": "limit",
									"value": "0",
									"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
								},
								{
									"key": "countLimit",
									"value": "-1",
									"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "The name of the Trait to search for."
								},
								{
									"key": "nameMatchMode",
									"value": "ANYWHERE",
									"description": "The match mode used to compare <code>name</code>. If the match mode is <code>EXACT</code> the search is case-sensitive, otherwise the search is case-insensitive."
								}
							]
						},
						"description": "Returns traits matching the given search criteria. Only parameters that are specified in this request and have not <code>null</code> values are used for filtering. All other parameters are ignored. By default a result containing 1000 traits is returned."
					},
					"response": [
						{
							"name": "Search ran successfully",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/traits?offset=0&limit=0&countLimit=-1&name=<string>&nameMatchMode=ANYWHERE",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"traits"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "The name of the Trait to search for."
										},
										{
											"key": "nameMatchMode",
											"value": "ANYWHERE",
											"description": "The match mode used to compare <code>name</code>. If the match mode is <code>EXACT</code> the search is case-sensitive, otherwise the search is case-insensitive."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": \"<long>\",\n  \"offset\": \"<long>\",\n  \"limit\": \"<long>\",\n  \"results\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Assignment\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"publicId\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"WorkflowTask\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"publicId\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "navigation",
			"item": [
				{
					"name": "most_viewed",
					"item": [
						{
							"name": "Find most viewed assets.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/navigation/most_viewed?offset=0&limit=0&countLimit=-1&period=0&isGuestExcluded=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"navigation",
										"most_viewed"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
										},
										{
											"key": "period",
											"value": "0",
											"description": "The time span for which most viewed assets should be found. This time span must be expressed in milliseconds.<br/>For instance, to get most viewed assets for last 24 hours, period would be <code>86400000</code>.<br/>If it's unset (period = 0) looks for all time most viewed assets."
										},
										{
											"key": "isGuestExcluded",
											"value": "false",
											"description": "Whether guest visits should be excluded from result."
										}
									]
								},
								"description": "Returns the most viewed assets by all users, with navigation-related info."
							},
							"response": [
								{
									"name": "Paged response with found navigation statistics ordered by number of views descending. By default, the result contains up to 1000 navigation statistics.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/navigation/most_viewed?offset=0&limit=0&countLimit=-1&period=0&isGuestExcluded=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"navigation",
												"most_viewed"
											],
											"query": [
												{
													"key": "offset",
													"value": "0",
													"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
												},
												{
													"key": "limit",
													"value": "0",
													"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
												},
												{
													"key": "countLimit",
													"value": "-1",
													"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
												},
												{
													"key": "period",
													"value": "0",
													"description": "The time span for which most viewed assets should be found. This time span must be expressed in milliseconds.<br/>For instance, to get most viewed assets for last 24 hours, period would be <code>86400000</code>.<br/>If it's unset (period = 0) looks for all time most viewed assets."
												},
												{
													"key": "isGuestExcluded",
													"value": "false",
													"description": "Whether guest visits should be excluded from result."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"total\": \"<long>\",\n  \"offset\": \"<long>\",\n  \"limit\": \"<long>\",\n  \"results\": [\n    {\n      \"assetId\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"numberOfViews\": \"<integer>\",\n      \"lastViewedDate\": \"<long>\"\n    },\n    {\n      \"assetId\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"numberOfViews\": \"<integer>\",\n      \"lastViewedDate\": \"<long>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "recently_viewed",
					"item": [
						{
							"name": "Find recently viewed assets.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/navigation/recently_viewed?offset=0&limit=0&countLimit=-1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"navigation",
										"recently_viewed"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
										}
									]
								},
								"description": "Returns the assets that were recently viewed by the current user."
							},
							"response": [
								{
									"name": "Paged response with found navigation statistics ordered by last viewed date descending. Views number is not calculated. By default, the result contains up to 1000 navigation statistics.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/navigation/recently_viewed?offset=0&limit=0&countLimit=-1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"navigation",
												"recently_viewed"
											],
											"query": [
												{
													"key": "offset",
													"value": "0",
													"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
												},
												{
													"key": "limit",
													"value": "0",
													"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
												},
												{
													"key": "countLimit",
													"value": "-1",
													"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"total\": \"<long>\",\n  \"offset\": \"<long>\",\n  \"limit\": \"<long>\",\n  \"results\": [\n    {\n      \"assetId\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"numberOfViews\": \"<integer>\",\n      \"lastViewedDate\": \"<long>\"\n    },\n    {\n      \"assetId\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"numberOfViews\": \"<integer>\",\n      \"lastViewedDate\": \"<long>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "dataQualityRules",
			"item": [
				{
					"name": "{dataQualityRuleId}",
					"item": [
						{
							"name": "Returns the DataQualityRule identified by given id.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dataQualityRules/:dataQualityRuleId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dataQualityRules",
										":dataQualityRuleId"
									],
									"variable": [
										{
											"key": "dataQualityRuleId",
											"value": "<uuid>",
											"description": "(Required) the unique identifier of the data quality rule"
										}
									]
								},
								"description": "Returns the DataQualityRule identified by given id."
							},
							"response": [
								{
									"name": "DataQualityRule found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/dataQualityRules/:dataQualityRuleId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dataQualityRules",
												":dataQualityRuleId"
											],
											"variable": [
												{
													"key": "dataQualityRuleId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Scope\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"categorizationRelationType\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"InstantMessagingAccount\",\n    \"resourceDiscriminator\": \"<string>\"\n  },\n  \"relationTrace\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Activity\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"relationTraceEntries\": [\n      {\n        \"outBoundRoleDirection\": \"<boolean>\",\n        \"roleDirection\": \"<boolean>\",\n        \"relationTypeId\": \"<uuid>\",\n        \"outBoundRelationTypeId\": \"<uuid>\"\n      },\n      {\n        \"outBoundRoleDirection\": \"<boolean>\",\n        \"roleDirection\": \"<boolean>\",\n        \"relationTypeId\": \"<uuid>\",\n        \"outBoundRelationTypeId\": \"<uuid>\"\n      }\n    ]\n  },\n  \"dataQualityMetrics\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Assignment\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"countOperation\": \"BooleanOr\",\n      \"attributeType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ScriptAttribute\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationLegType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"countOperation\": \"Maximum\",\n      \"attributeType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Comment\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    }\n  ]\n}"
								},
								{
									"name": "DataQualityRule not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/dataQualityRules/:dataQualityRuleId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dataQualityRules",
												":dataQualityRuleId"
											],
											"variable": [
												{
													"key": "dataQualityRuleId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Removes the DataQualityRule identified by the given id.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/dataQualityRules/:dataQualityRuleId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dataQualityRules",
										":dataQualityRuleId"
									],
									"variable": [
										{
											"key": "dataQualityRuleId",
											"value": "<uuid>",
											"description": "(Required) the unique identifier of the data quality rule"
										}
									]
								},
								"description": "Removes the DataQualityRule identified by the given id."
							},
							"response": [
								{
									"name": "DataQualityRule removed.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/dataQualityRules/:dataQualityRuleId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dataQualityRules",
												":dataQualityRuleId"
											],
											"variable": [
												{
													"key": "dataQualityRuleId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "DataQualityRule not found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/dataQualityRules/:dataQualityRuleId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dataQualityRules",
												":dataQualityRuleId"
											],
											"variable": [
												{
													"key": "dataQualityRuleId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Changes the data quality rule with the information that is present in the request.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"categorizationRelationTypeId\": \"<uuid>\",\n  \"dataQualityMetrics\": [\n    {\n      \"countOperation\": \"BooleanOr\",\n      \"attributeTypeId\": \"<uuid>\"\n    },\n    {\n      \"countOperation\": \"BooleanAnd\",\n      \"attributeTypeId\": \"<uuid>\"\n    }\n  ],\n  \"relationTraceEntries\": [\n    {\n      \"relationTypeId\": \"<uuid>\",\n      \"roleDirection\": \"<boolean>\"\n    },\n    {\n      \"relationTypeId\": \"<uuid>\",\n      \"roleDirection\": \"<boolean>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dataQualityRules/:dataQualityRuleId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dataQualityRules",
										":dataQualityRuleId"
									],
									"variable": [
										{
											"key": "dataQualityRuleId",
											"value": "<uuid>",
											"description": "(Required) the unique identifier of the data quality rule"
										}
									]
								},
								"description": "Changes the data quality rule with the information that is present in the request. Only properties that are specified in this request and have not <code>null</code> values are updated. All other properties are ignored."
							},
							"response": [
								{
									"name": "default response",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"categorizationRelationTypeId\": \"<uuid>\",\n  \"dataQualityMetrics\": [\n    {\n      \"countOperation\": \"BooleanOr\",\n      \"attributeTypeId\": \"<uuid>\"\n    },\n    {\n      \"countOperation\": \"BooleanAnd\",\n      \"attributeTypeId\": \"<uuid>\"\n    }\n  ],\n  \"relationTraceEntries\": [\n    {\n      \"relationTypeId\": \"<uuid>\",\n      \"roleDirection\": \"<boolean>\"\n    },\n    {\n      \"relationTypeId\": \"<uuid>\",\n      \"roleDirection\": \"<boolean>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/dataQualityRules/:dataQualityRuleId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"dataQualityRules",
												":dataQualityRuleId"
											],
											"variable": [
												{
													"key": "dataQualityRuleId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Scope\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"categorizationRelationType\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"InstantMessagingAccount\",\n    \"resourceDiscriminator\": \"<string>\"\n  },\n  \"relationTrace\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Activity\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"relationTraceEntries\": [\n      {\n        \"outBoundRoleDirection\": \"<boolean>\",\n        \"roleDirection\": \"<boolean>\",\n        \"relationTypeId\": \"<uuid>\",\n        \"outBoundRelationTypeId\": \"<uuid>\"\n      },\n      {\n        \"outBoundRoleDirection\": \"<boolean>\",\n        \"roleDirection\": \"<boolean>\",\n        \"relationTypeId\": \"<uuid>\",\n        \"outBoundRelationTypeId\": \"<uuid>\"\n      }\n    ]\n  },\n  \"dataQualityMetrics\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Assignment\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"countOperation\": \"BooleanOr\",\n      \"attributeType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ScriptAttribute\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationLegType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"countOperation\": \"Maximum\",\n      \"attributeType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Comment\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Returns data quality rules matching the given search criteria.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dataQualityRules?offset=0&limit=0&countLimit=-1&name=<string>&nameMatchMode=ANYWHERE&sortField=NAME&sortOrder=ASC",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dataQualityRules"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
								},
								{
									"key": "limit",
									"value": "0",
									"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
								},
								{
									"key": "countLimit",
									"value": "-1",
									"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "The name of the dataquality rule to search for."
								},
								{
									"key": "nameMatchMode",
									"value": "ANYWHERE",
									"description": "The match mode used to compare <code>name</code>."
								},
								{
									"key": "sortField",
									"value": "NAME",
									"description": "The field that should be used as reference for sorting."
								},
								{
									"key": "sortOrder",
									"value": "ASC",
									"description": "The order of sorting."
								}
							]
						},
						"description": "Returns data quality rules matching the given search criteria. Only parameters that are specified in this request and have not <code>null</code> values are used for filtering. All other parameters are ignored. The returned data quality rules satisfy all constraints that are specified in this search criteria. By default a result containing 1000 data quality rules is returned."
					},
					"response": [
						{
							"name": "The paged response with found DataQualityRule information.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dataQualityRules?offset=0&limit=0&countLimit=-1&name=<string>&nameMatchMode=ANYWHERE&sortField=NAME&sortOrder=ASC",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dataQualityRules"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "The name of the dataquality rule to search for."
										},
										{
											"key": "nameMatchMode",
											"value": "ANYWHERE",
											"description": "The match mode used to compare <code>name</code>."
										},
										{
											"key": "sortField",
											"value": "NAME",
											"description": "The field that should be used as reference for sorting."
										},
										{
											"key": "sortOrder",
											"value": "ASC",
											"description": "The order of sorting."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": \"<long>\",\n  \"offset\": \"<long>\",\n  \"limit\": \"<long>\",\n  \"results\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"WorkflowTask\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"categorizationRelationType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Scope\",\n        \"resourceDiscriminator\": \"<string>\"\n      },\n      \"relationTrace\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"PhysicalDataConnector\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"relationTraceEntries\": [\n          {\n            \"outBoundRoleDirection\": \"<boolean>\",\n            \"roleDirection\": \"<boolean>\",\n            \"relationTypeId\": \"<uuid>\",\n            \"outBoundRelationTypeId\": \"<uuid>\"\n          },\n          {\n            \"outBoundRoleDirection\": \"<boolean>\",\n            \"roleDirection\": \"<boolean>\",\n            \"relationTypeId\": \"<uuid>\",\n            \"outBoundRelationTypeId\": \"<uuid>\"\n          }\n        ]\n      },\n      \"dataQualityMetrics\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ViewAssignmentRule\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"countOperation\": \"Minimum\",\n          \"attributeType\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"Relation\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\"\n          }\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Tag\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"countOperation\": \"Maximum\",\n          \"attributeType\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"CsvIngestionProperties\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\"\n          }\n        }\n      ]\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"WorkflowTask\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"categorizationRelationType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ClassificationMatch\",\n        \"resourceDiscriminator\": \"<string>\"\n      },\n      \"relationTrace\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ComplexRelationLegType\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"relationTraceEntries\": [\n          {\n            \"outBoundRoleDirection\": \"<boolean>\",\n            \"roleDirection\": \"<boolean>\",\n            \"relationTypeId\": \"<uuid>\",\n            \"outBoundRelationTypeId\": \"<uuid>\"\n          },\n          {\n            \"outBoundRoleDirection\": \"<boolean>\",\n            \"roleDirection\": \"<boolean>\",\n            \"relationTypeId\": \"<uuid>\",\n            \"outBoundRelationTypeId\": \"<uuid>\"\n          }\n        ]\n      },\n      \"dataQualityMetrics\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Website\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"countOperation\": \"Average\",\n          \"attributeType\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"SingleValueListAttributeType\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\"\n          }\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Notification\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"countOperation\": \"BooleanAnd\",\n          \"attributeType\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"DiagramPicture\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\"\n          }\n        }\n      ]\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Adds a new data quality rule.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"categorizationRelationTypeId\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"relationTraceEntries\": [\n    {\n      \"relationTypeId\": \"<uuid>\",\n      \"roleDirection\": \"<boolean>\"\n    }\n  ],\n  \"id\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"dataQualityMetrics\": [\n    {\n      \"countOperation\": \"Median\",\n      \"attributeTypeId\": \"<uuid>\"\n    },\n    {\n      \"countOperation\": \"Sum\",\n      \"attributeTypeId\": \"<uuid>\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/dataQualityRules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dataQualityRules"
							]
						},
						"description": "Adds a new data quality rule."
					},
					"response": [
						{
							"name": "Data quality rule successfully added.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"categorizationRelationTypeId\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"relationTraceEntries\": [\n    {\n      \"relationTypeId\": \"<uuid>\",\n      \"roleDirection\": \"<boolean>\"\n    }\n  ],\n  \"id\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"dataQualityMetrics\": [\n    {\n      \"countOperation\": \"Median\",\n      \"attributeTypeId\": \"<uuid>\"\n    },\n    {\n      \"countOperation\": \"Sum\",\n      \"attributeTypeId\": \"<uuid>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dataQualityRules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dataQualityRules"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Scope\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"categorizationRelationType\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"InstantMessagingAccount\",\n    \"resourceDiscriminator\": \"<string>\"\n  },\n  \"relationTrace\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Activity\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"relationTraceEntries\": [\n      {\n        \"outBoundRoleDirection\": \"<boolean>\",\n        \"roleDirection\": \"<boolean>\",\n        \"relationTypeId\": \"<uuid>\",\n        \"outBoundRelationTypeId\": \"<uuid>\"\n      },\n      {\n        \"outBoundRoleDirection\": \"<boolean>\",\n        \"roleDirection\": \"<boolean>\",\n        \"relationTypeId\": \"<uuid>\",\n        \"outBoundRelationTypeId\": \"<uuid>\"\n      }\n    ]\n  },\n  \"dataQualityMetrics\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Assignment\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"countOperation\": \"BooleanOr\",\n      \"attributeType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ScriptAttribute\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationLegType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"countOperation\": \"Maximum\",\n      \"attributeType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Comment\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    }\n  ]\n}"
						},
						{
							"name": "A data quality rule with the given ID already exists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"categorizationRelationTypeId\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"relationTraceEntries\": [\n    {\n      \"relationTypeId\": \"<uuid>\",\n      \"roleDirection\": \"<boolean>\"\n    }\n  ],\n  \"id\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"dataQualityMetrics\": [\n    {\n      \"countOperation\": \"Median\",\n      \"attributeTypeId\": \"<uuid>\"\n    },\n    {\n      \"countOperation\": \"Sum\",\n      \"attributeTypeId\": \"<uuid>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dataQualityRules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dataQualityRules"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "outputModule",
			"item": [
				{
					"name": "export",
					"item": [
						{
							"name": "csv",
							"item": [
								{
									"name": "Exports results in CSV format, returns the results immediately.",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<string>",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/outputModule/export/csv?validationEnabled=false&separator=<string>&quote=<string>&escape=<string>&headerRow=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"outputModule",
												"export",
												"csv"
											],
											"query": [
												{
													"key": "validationEnabled",
													"value": "false",
													"description": "Determines if the TableViewConfig’s syntax should be validated (<code>true</code>) or not (<code>false</code>). Default value is <code>false</code> for backward compatibility reasons but it is strongly advised to always enable this validation."
												},
												{
													"key": "separator",
													"value": "<string>",
													"description": "The delimiter character used to separate entries. Default value is <code>';'</code>."
												},
												{
													"key": "quote",
													"value": "<string>",
													"description": "The delimiter character used for quoted entries. Default value  is <code>'\"'</code>."
												},
												{
													"key": "escape",
													"value": "<string>",
													"description": "The delimiter character used to escape separator or quote character. Default value is <code>'\\\\'</code>."
												},
												{
													"key": "headerRow",
													"value": "true",
													"description": "Whether a response should include a header (<code>true</code>) or not (<code>false</code>). Default value is <code>true</code>."
												}
											]
										},
										"description": "<p>Performs an Output Module query and exports the results immediately in CSV format.</p><p>Please note that the TableViewConfig’s syntax validation is not executed by default, see <code>validationEnabled</code></p><p>DGC admin console settings may impact the execution of the query (especially in terms of timeout and a limit on the number of results). For details please consult output module documentation.</p>"
									},
									"response": [
										{
											"name": "The string response in CSV format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/outputModule/export/csv?validationEnabled=false&separator=<string>&quote=<string>&escape=<string>&headerRow=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"outputModule",
														"export",
														"csv"
													],
													"query": [
														{
															"key": "validationEnabled",
															"value": "false",
															"description": "Determines if the TableViewConfig’s syntax should be validated (<code>true</code>) or not (<code>false</code>). Default value is <code>false</code> for backward compatibility reasons but it is strongly advised to always enable this validation."
														},
														{
															"key": "separator",
															"value": "<string>",
															"description": "The delimiter character used to separate entries. Default value is <code>';'</code>."
														},
														{
															"key": "quote",
															"value": "<string>",
															"description": "The delimiter character used for quoted entries. Default value  is <code>'\"'</code>."
														},
														{
															"key": "escape",
															"value": "<string>",
															"description": "The delimiter character used to escape separator or quote character. Default value is <code>'\\\\'</code>."
														},
														{
															"key": "headerRow",
															"value": "true",
															"description": "Whether a response should include a header (<code>true</code>) or not (<code>false</code>). Default value is <code>true</code>."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "The parameter is invalid JSON TableViewConfig.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/outputModule/export/csv?validationEnabled=false&separator=<string>&quote=<string>&escape=<string>&headerRow=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"outputModule",
														"export",
														"csv"
													],
													"query": [
														{
															"key": "validationEnabled",
															"value": "false",
															"description": "Determines if the TableViewConfig’s syntax should be validated (<code>true</code>) or not (<code>false</code>). Default value is <code>false</code> for backward compatibility reasons but it is strongly advised to always enable this validation."
														},
														{
															"key": "separator",
															"value": "<string>",
															"description": "The delimiter character used to separate entries. Default value is <code>';'</code>."
														},
														{
															"key": "quote",
															"value": "<string>",
															"description": "The delimiter character used for quoted entries. Default value  is <code>'\"'</code>."
														},
														{
															"key": "escape",
															"value": "<string>",
															"description": "The delimiter character used to escape separator or quote character. Default value is <code>'\\\\'</code>."
														},
														{
															"key": "headerRow",
															"value": "true",
															"description": "Whether a response should include a header (<code>true</code>) or not (<code>false</code>). Default value is <code>true</code>."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Query execution time exceeded.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/outputModule/export/csv?validationEnabled=false&separator=<string>&quote=<string>&escape=<string>&headerRow=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"outputModule",
														"export",
														"csv"
													],
													"query": [
														{
															"key": "validationEnabled",
															"value": "false",
															"description": "Determines if the TableViewConfig’s syntax should be validated (<code>true</code>) or not (<code>false</code>). Default value is <code>false</code> for backward compatibility reasons but it is strongly advised to always enable this validation."
														},
														{
															"key": "separator",
															"value": "<string>",
															"description": "The delimiter character used to separate entries. Default value is <code>';'</code>."
														},
														{
															"key": "quote",
															"value": "<string>",
															"description": "The delimiter character used for quoted entries. Default value  is <code>'\"'</code>."
														},
														{
															"key": "escape",
															"value": "<string>",
															"description": "The delimiter character used to escape separator or quote character. Default value is <code>'\\\\'</code>."
														},
														{
															"key": "headerRow",
															"value": "true",
															"description": "Whether a response should include a header (<code>true</code>) or not (<code>false</code>). Default value is <code>true</code>."
														}
													]
												}
											},
											"status": "Request Timeout",
											"code": 408,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "csv-job",
							"item": [
								{
									"name": "Exports results in CSV format, returns JSON representation of the async Job.",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<string>",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/outputModule/export/csv-job?validationEnabled=false&fileName=<string>&separator=<string>&quote=<string>&escape=<string>&headerRow=true&sendNotification=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"outputModule",
												"export",
												"csv-job"
											],
											"query": [
												{
													"key": "validationEnabled",
													"value": "false",
													"description": "Determines if the TableViewConfig’s syntax should be validated (<code>true</code>) or not (<code>false</code>). Validation is then performed immediately instead of only when the job is started. Please note that the validation will always take place during the Job execution, regardless of this parameter. Default value is false."
												},
												{
													"key": "fileName",
													"value": "<string>",
													"description": "The name of the file. By default the file name will be generated"
												},
												{
													"key": "separator",
													"value": "<string>",
													"description": "The delimiter character used to separate entries. Default value is <code>';'</code>."
												},
												{
													"key": "quote",
													"value": "<string>",
													"description": "The delimiter character used for quoted entries. Default value  is <code>'\"'</code>."
												},
												{
													"key": "escape",
													"value": "<string>",
													"description": "The delimiter character used to escape separator or quote character. Default value is <code>'\\\\'</code>."
												},
												{
													"key": "headerRow",
													"value": "true",
													"description": "Whether a response should include a header (<code>true</code>) or not (<code>false</code>). Default value is <code>true</code>."
												},
												{
													"key": "sendNotification",
													"value": "false",
													"description": "Whether an e-mail must be sent on completion of the job."
												}
											]
										},
										"description": "<p>Starts a job that performs an Output Module query and stores the results in a file in CSV format. Id of the file can be retrieved from the <code>message.id</code> property of the job once the job is finished.</p><p>Please note that the TableViewConfig’s syntax validation is not executed by default, see <code>validationEnabled</code></p><p>DGC admin console settings may impact the execution of the query (especially in terms of timeout and a limit on the number of results). For details please consult output module documentation.</p>"
									},
									"response": [
										{
											"name": "The JSON representation of the job that performs an Output Module query.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/outputModule/export/csv-job?validationEnabled=false&fileName=<string>&separator=<string>&quote=<string>&escape=<string>&headerRow=true&sendNotification=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"outputModule",
														"export",
														"csv-job"
													],
													"query": [
														{
															"key": "validationEnabled",
															"value": "false",
															"description": "Determines if the TableViewConfig’s syntax should be validated (<code>true</code>) or not (<code>false</code>). Validation is then performed immediately instead of only when the job is started. Please note that the validation will always take place during the Job execution, regardless of this parameter. Default value is false."
														},
														{
															"key": "fileName",
															"value": "<string>",
															"description": "The name of the file. By default the file name will be generated"
														},
														{
															"key": "separator",
															"value": "<string>",
															"description": "The delimiter character used to separate entries. Default value is <code>';'</code>."
														},
														{
															"key": "quote",
															"value": "<string>",
															"description": "The delimiter character used for quoted entries. Default value  is <code>'\"'</code>."
														},
														{
															"key": "escape",
															"value": "<string>",
															"description": "The delimiter character used to escape separator or quote character. Default value is <code>'\\\\'</code>."
														},
														{
															"key": "headerRow",
															"value": "true",
															"description": "Whether a response should include a header (<code>true</code>) or not (<code>false</code>). Default value is <code>true</code>."
														},
														{
															"key": "sendNotification",
															"value": "false",
															"description": "Whether an e-mail must be sent on completion of the job."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Website\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"userId\": \"<uuid>\",\n  \"visibility\": \"<integer>\",\n  \"progressPercentage\": \"<double>\",\n  \"cancelable\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"state\": \"CANCELING\",\n  \"result\": \"NOT_SET\",\n  \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "csv-file",
							"item": [
								{
									"name": "Exports results in CSV format, returns information about created file.",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<string>",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/outputModule/export/csv-file?validationEnabled=false&fileName=<string>&separator=<string>&quote=<string>&escape=<string>&headerRow=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"outputModule",
												"export",
												"csv-file"
											],
											"query": [
												{
													"key": "validationEnabled",
													"value": "false",
													"description": "Determines if the TableViewConfig’s syntax should be validated (<code>true</code>) or not (<code>false</code>). Default value is false for backward compatibility reasons but it is strongly advised to always enable this validation."
												},
												{
													"key": "fileName",
													"value": "<string>",
													"description": "The name of the file. By default the file name will be generated"
												},
												{
													"key": "separator",
													"value": "<string>",
													"description": "The delimiter character used to separate entries. Default value is <code>';'</code>"
												},
												{
													"key": "quote",
													"value": "<string>",
													"description": "The delimiter character used for quoted entries. Default value  is <code>'\"'</code>"
												},
												{
													"key": "escape",
													"value": "<string>",
													"description": "The delimiter character used to escape separator or quote character. Default value is <code>'\\\\'</code>"
												},
												{
													"key": "headerRow",
													"value": "true",
													"description": "Whether a response should include a header (<code>true</code>) or not (<code>false</code>). Default value is <code>true</code>"
												}
											]
										},
										"description": "<p>Performs an Output Module query and stores the query results in a file in CSV format. The id of the file is returned in the response.</p><p>Please note that the TableViewConfig’s syntax validation is not executed by default, see <code>validationEnabled</code></p><p>DGC admin console settings may impact the execution of the query (especially in terms of timeout and a limit on the number of results). For details please consult output module documentation.</p>"
									},
									"response": [
										{
											"name": "The information about the file where the results are stored.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/outputModule/export/csv-file?validationEnabled=false&fileName=<string>&separator=<string>&quote=<string>&escape=<string>&headerRow=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"outputModule",
														"export",
														"csv-file"
													],
													"query": [
														{
															"key": "validationEnabled",
															"value": "false",
															"description": "Determines if the TableViewConfig’s syntax should be validated (<code>true</code>) or not (<code>false</code>). Default value is false for backward compatibility reasons but it is strongly advised to always enable this validation."
														},
														{
															"key": "fileName",
															"value": "<string>",
															"description": "The name of the file. By default the file name will be generated"
														},
														{
															"key": "separator",
															"value": "<string>",
															"description": "The delimiter character used to separate entries. Default value is <code>';'</code>"
														},
														{
															"key": "quote",
															"value": "<string>",
															"description": "The delimiter character used for quoted entries. Default value  is <code>'\"'</code>"
														},
														{
															"key": "escape",
															"value": "<string>",
															"description": "The delimiter character used to escape separator or quote character. Default value is <code>'\\\\'</code>"
														},
														{
															"key": "headerRow",
															"value": "true",
															"description": "Whether a response should include a header (<code>true</code>) or not (<code>false</code>). Default value is <code>true</code>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"contentType\": \"<string>\",\n  \"size\": \"<long>\",\n  \"extension\": \"<string>\"\n}"
										},
										{
											"name": "The parameter is invalid JSON TableViewConfig.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/outputModule/export/csv-file?validationEnabled=false&fileName=<string>&separator=<string>&quote=<string>&escape=<string>&headerRow=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"outputModule",
														"export",
														"csv-file"
													],
													"query": [
														{
															"key": "validationEnabled",
															"value": "false",
															"description": "Determines if the TableViewConfig’s syntax should be validated (<code>true</code>) or not (<code>false</code>). Default value is false for backward compatibility reasons but it is strongly advised to always enable this validation."
														},
														{
															"key": "fileName",
															"value": "<string>",
															"description": "The name of the file. By default the file name will be generated"
														},
														{
															"key": "separator",
															"value": "<string>",
															"description": "The delimiter character used to separate entries. Default value is <code>';'</code>"
														},
														{
															"key": "quote",
															"value": "<string>",
															"description": "The delimiter character used for quoted entries. Default value  is <code>'\"'</code>"
														},
														{
															"key": "escape",
															"value": "<string>",
															"description": "The delimiter character used to escape separator or quote character. Default value is <code>'\\\\'</code>"
														},
														{
															"key": "headerRow",
															"value": "true",
															"description": "Whether a response should include a header (<code>true</code>) or not (<code>false</code>). Default value is <code>true</code>"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Query execution time exceeded.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/outputModule/export/csv-file?validationEnabled=false&fileName=<string>&separator=<string>&quote=<string>&escape=<string>&headerRow=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"outputModule",
														"export",
														"csv-file"
													],
													"query": [
														{
															"key": "validationEnabled",
															"value": "false",
															"description": "Determines if the TableViewConfig’s syntax should be validated (<code>true</code>) or not (<code>false</code>). Default value is false for backward compatibility reasons but it is strongly advised to always enable this validation."
														},
														{
															"key": "fileName",
															"value": "<string>",
															"description": "The name of the file. By default the file name will be generated"
														},
														{
															"key": "separator",
															"value": "<string>",
															"description": "The delimiter character used to separate entries. Default value is <code>';'</code>"
														},
														{
															"key": "quote",
															"value": "<string>",
															"description": "The delimiter character used for quoted entries. Default value  is <code>'\"'</code>"
														},
														{
															"key": "escape",
															"value": "<string>",
															"description": "The delimiter character used to escape separator or quote character. Default value is <code>'\\\\'</code>"
														},
														{
															"key": "headerRow",
															"value": "true",
															"description": "Whether a response should include a header (<code>true</code>) or not (<code>false</code>). Default value is <code>true</code>"
														}
													]
												}
											},
											"status": "Request Timeout",
											"code": 408,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "excel-job",
							"item": [
								{
									"name": "Exports results in Excel format, returns JSON representation of the async Job.",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<string>",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/outputModule/export/excel-job?sendNotification=false&validationEnabled=false&fileName=<string>&sheetName=<string>&useXLSX=true&headerRow=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"outputModule",
												"export",
												"excel-job"
											],
											"query": [
												{
													"key": "sendNotification",
													"value": "false",
													"description": "Whether an e-mail must be sent on completion of the job."
												},
												{
													"key": "validationEnabled",
													"value": "false",
													"description": "Determines if the TableViewConfig’s syntax should be validated (<code>true</code>) or not (<code>false</code>). Validation is then performed immediately instead of only when the job is started. Please note that the validation will always take place during the Job execution, regardless of this parameter. Default value is false."
												},
												{
													"key": "fileName",
													"value": "<string>",
													"description": "The name of the file. By default the file name will be generated."
												},
												{
													"key": "sheetName",
													"value": "<string>",
													"description": "The name of the sheet. By default no sheet name is set."
												},
												{
													"key": "useXLSX",
													"value": "true",
													"description": "Whether the Excel file to export will be '.xlsx' file (<code>true</code>) or a '.xls' file (<code>false</code>. Default value is true.<br/>The parameter will be removed. In the future only XLSX files will be supported.."
												},
												{
													"key": "headerRow",
													"value": "true",
													"description": "Whether a response should include a header (<code>true</code>) or not (<code>false</code>). Default value is <code>true</code>."
												}
											]
										},
										"description": "<p>Starts a job that performs an Output Module query and stores the results in a file in Excel format. Id of the file can be retrieved from the <code>message.id</code> property of the job once the job is finished.</p></p>Please note that the TableViewConfig’s syntax validation is not executed by default, see <code>validationEnabled</code></p><p>DGC admin console settings may impact the execution of the query (especially in terms of timeout and a limit on the number of results). For details please consult output module documentation.</p>"
									},
									"response": [
										{
											"name": "The JSON representation of the job that performs an Output Module query.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/outputModule/export/excel-job?sendNotification=false&validationEnabled=false&fileName=<string>&sheetName=<string>&useXLSX=true&headerRow=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"outputModule",
														"export",
														"excel-job"
													],
													"query": [
														{
															"key": "sendNotification",
															"value": "false",
															"description": "Whether an e-mail must be sent on completion of the job."
														},
														{
															"key": "validationEnabled",
															"value": "false",
															"description": "Determines if the TableViewConfig’s syntax should be validated (<code>true</code>) or not (<code>false</code>). Validation is then performed immediately instead of only when the job is started. Please note that the validation will always take place during the Job execution, regardless of this parameter. Default value is false."
														},
														{
															"key": "fileName",
															"value": "<string>",
															"description": "The name of the file. By default the file name will be generated."
														},
														{
															"key": "sheetName",
															"value": "<string>",
															"description": "The name of the sheet. By default no sheet name is set."
														},
														{
															"key": "useXLSX",
															"value": "true",
															"description": "Whether the Excel file to export will be '.xlsx' file (<code>true</code>) or a '.xls' file (<code>false</code>. Default value is true.<br/>The parameter will be removed. In the future only XLSX files will be supported.."
														},
														{
															"key": "headerRow",
															"value": "true",
															"description": "Whether a response should include a header (<code>true</code>) or not (<code>false</code>). Default value is <code>true</code>."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Website\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"userId\": \"<uuid>\",\n  \"visibility\": \"<integer>\",\n  \"progressPercentage\": \"<double>\",\n  \"cancelable\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"state\": \"CANCELING\",\n  \"result\": \"NOT_SET\",\n  \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "excel-file",
							"item": [
								{
									"name": "Exports results in Excel format, returns information about created file.",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<string>",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/outputModule/export/excel-file?validationEnabled=false&fileName=<string>&sheetName=<string>&useXLSX=true&headerRow=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"outputModule",
												"export",
												"excel-file"
											],
											"query": [
												{
													"key": "validationEnabled",
													"value": "false",
													"description": "Determines if the TableViewConfig’s syntax should be validated (<code>true</code>) or not (<code>false</code>). Default value is false for backward compatibility reasons but it is strongly advised to always enable this validation."
												},
												{
													"key": "fileName",
													"value": "<string>",
													"description": "The name of the file. By default the file name will be generated."
												},
												{
													"key": "sheetName",
													"value": "<string>",
													"description": "The name of the sheet. By default no sheet name is set."
												},
												{
													"key": "useXLSX",
													"value": "true",
													"description": "Whether the Excel file to export will be '.xlsx' file (<code>true</code>) or a '.xls' file (<code>false</code>. Default value is true.<br/>The parameter will be removed. In the future only XLSX files will be supported."
												},
												{
													"key": "headerRow",
													"value": "true",
													"description": "Whether a response should include a header (<code>true</code>) or not (<code>false</code>). Default value is <code>true</code>."
												}
											]
										},
										"description": "<p>Performs an Output Module query and stores the query results in a file in Excel format. The id of the file is returned in the response.</p><p>Please note that the TableViewConfig’s syntax validation is not executed by default, see <code>validationEnabled</code></p><p>DGC admin console settings may impact the execution of the query (especially in terms of timeout and a limit on the number of results). For details please consult output module documentation.</p>"
									},
									"response": [
										{
											"name": "The information about the file where the results are stored.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/outputModule/export/excel-file?validationEnabled=false&fileName=<string>&sheetName=<string>&useXLSX=true&headerRow=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"outputModule",
														"export",
														"excel-file"
													],
													"query": [
														{
															"key": "validationEnabled",
															"value": "false",
															"description": "Determines if the TableViewConfig’s syntax should be validated (<code>true</code>) or not (<code>false</code>). Default value is false for backward compatibility reasons but it is strongly advised to always enable this validation."
														},
														{
															"key": "fileName",
															"value": "<string>",
															"description": "The name of the file. By default the file name will be generated."
														},
														{
															"key": "sheetName",
															"value": "<string>",
															"description": "The name of the sheet. By default no sheet name is set."
														},
														{
															"key": "useXLSX",
															"value": "true",
															"description": "Whether the Excel file to export will be '.xlsx' file (<code>true</code>) or a '.xls' file (<code>false</code>. Default value is true.<br/>The parameter will be removed. In the future only XLSX files will be supported."
														},
														{
															"key": "headerRow",
															"value": "true",
															"description": "Whether a response should include a header (<code>true</code>) or not (<code>false</code>). Default value is <code>true</code>."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"contentType\": \"<string>\",\n  \"size\": \"<long>\",\n  \"extension\": \"<string>\"\n}"
										},
										{
											"name": "The parameter is invalid JSON TableViewConfig.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/outputModule/export/excel-file?validationEnabled=false&fileName=<string>&sheetName=<string>&useXLSX=true&headerRow=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"outputModule",
														"export",
														"excel-file"
													],
													"query": [
														{
															"key": "validationEnabled",
															"value": "false",
															"description": "Determines if the TableViewConfig’s syntax should be validated (<code>true</code>) or not (<code>false</code>). Default value is false for backward compatibility reasons but it is strongly advised to always enable this validation."
														},
														{
															"key": "fileName",
															"value": "<string>",
															"description": "The name of the file. By default the file name will be generated."
														},
														{
															"key": "sheetName",
															"value": "<string>",
															"description": "The name of the sheet. By default no sheet name is set."
														},
														{
															"key": "useXLSX",
															"value": "true",
															"description": "Whether the Excel file to export will be '.xlsx' file (<code>true</code>) or a '.xls' file (<code>false</code>. Default value is true.<br/>The parameter will be removed. In the future only XLSX files will be supported."
														},
														{
															"key": "headerRow",
															"value": "true",
															"description": "Whether a response should include a header (<code>true</code>) or not (<code>false</code>). Default value is <code>true</code>."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Query execution time exceeded.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/outputModule/export/excel-file?validationEnabled=false&fileName=<string>&sheetName=<string>&useXLSX=true&headerRow=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"outputModule",
														"export",
														"excel-file"
													],
													"query": [
														{
															"key": "validationEnabled",
															"value": "false",
															"description": "Determines if the TableViewConfig’s syntax should be validated (<code>true</code>) or not (<code>false</code>). Default value is false for backward compatibility reasons but it is strongly advised to always enable this validation."
														},
														{
															"key": "fileName",
															"value": "<string>",
															"description": "The name of the file. By default the file name will be generated."
														},
														{
															"key": "sheetName",
															"value": "<string>",
															"description": "The name of the sheet. By default no sheet name is set."
														},
														{
															"key": "useXLSX",
															"value": "true",
															"description": "Whether the Excel file to export will be '.xlsx' file (<code>true</code>) or a '.xls' file (<code>false</code>. Default value is true.<br/>The parameter will be removed. In the future only XLSX files will be supported."
														},
														{
															"key": "headerRow",
															"value": "true",
															"description": "Whether a response should include a header (<code>true</code>) or not (<code>false</code>). Default value is <code>true</code>."
														}
													]
												}
											},
											"status": "Request Timeout",
											"code": 408,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "json",
							"item": [
								{
									"name": "Exports results in JSON format, returns the results immediately.",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<string>",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/outputModule/export/json?validationEnabled=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"outputModule",
												"export",
												"json"
											],
											"query": [
												{
													"key": "validationEnabled",
													"value": "false",
													"description": "Determines if the ViewConfig’s syntax should be validated (<code>true</code>) or not (<code>false</code>). Default value is false for backward compatibility reasons but it is strongly advised to always enable this validation."
												}
											]
										},
										"description": "<p>Performs an Output Module query and exports the returns results immediately in JSON format.</p><p>Please note that the ViewConfig/TableViewConfig’s syntax validation is not executed by default, see <code>validationEnabled</code></p><p>DGC admin console settings may impact the execution of the query (especially in terms of timeout and a limit on the number of results). For details please consult output module documentation.</p>"
									},
									"response": [
										{
											"name": "The string response in JSON format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/outputModule/export/json?validationEnabled=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"outputModule",
														"export",
														"json"
													],
													"query": [
														{
															"key": "validationEnabled",
															"value": "false",
															"description": "Determines if the ViewConfig’s syntax should be validated (<code>true</code>) or not (<code>false</code>). Default value is false for backward compatibility reasons but it is strongly advised to always enable this validation."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "The parameter is invalid JSON ViewConfig/TableViewConfig.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/outputModule/export/json?validationEnabled=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"outputModule",
														"export",
														"json"
													],
													"query": [
														{
															"key": "validationEnabled",
															"value": "false",
															"description": "Determines if the ViewConfig’s syntax should be validated (<code>true</code>) or not (<code>false</code>). Default value is false for backward compatibility reasons but it is strongly advised to always enable this validation."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Query execution time exceeded.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/outputModule/export/json?validationEnabled=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"outputModule",
														"export",
														"json"
													],
													"query": [
														{
															"key": "validationEnabled",
															"value": "false",
															"description": "Determines if the ViewConfig’s syntax should be validated (<code>true</code>) or not (<code>false</code>). Default value is false for backward compatibility reasons but it is strongly advised to always enable this validation."
														}
													]
												}
											},
											"status": "Request Timeout",
											"code": 408,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "json-job",
							"item": [
								{
									"name": "Exports results in JSON format, returns JSON representation of the async Job.",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<string>",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/outputModule/export/json-job?sendNotification=false&validationEnabled=false&fileName=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"outputModule",
												"export",
												"json-job"
											],
											"query": [
												{
													"key": "sendNotification",
													"value": "false",
													"description": "Whether an e-mail must be sent on completion of the job."
												},
												{
													"key": "validationEnabled",
													"value": "false",
													"description": "Determines if the ViewConfig’s syntax should be validated (<code>true</code>) or not (<code>false</code>). Validation is then performed immediately instead of only when the job is started. Please note that the validation will always take place during the Job execution, regardless of this parameter. Default value is false."
												},
												{
													"key": "fileName",
													"value": "<string>",
													"description": "The name of the file. By default the file name will be generated."
												}
											]
										},
										"description": "<p>Starts a job that performs an Output Module query and stores the results in a file in JSON format. Id of the file can be retrieved from the <code>message.id</code> property of the job once the job is finished.</p><p>Please note that the ViewConfig/TableViewConfig’s syntax validation is not executed by default, see <code>validationEnabled</code></p><p>DGC admin console settings may impact the execution of the query (especially in terms of timeout and a limit on the number of results). For details please consult output module documentation.</p>"
									},
									"response": [
										{
											"name": "The JSON representation of the job that performs an Output Module query.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/outputModule/export/json-job?sendNotification=false&validationEnabled=false&fileName=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"outputModule",
														"export",
														"json-job"
													],
													"query": [
														{
															"key": "sendNotification",
															"value": "false",
															"description": "Whether an e-mail must be sent on completion of the job."
														},
														{
															"key": "validationEnabled",
															"value": "false",
															"description": "Determines if the ViewConfig’s syntax should be validated (<code>true</code>) or not (<code>false</code>). Validation is then performed immediately instead of only when the job is started. Please note that the validation will always take place during the Job execution, regardless of this parameter. Default value is false."
														},
														{
															"key": "fileName",
															"value": "<string>",
															"description": "The name of the file. By default the file name will be generated."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Website\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"userId\": \"<uuid>\",\n  \"visibility\": \"<integer>\",\n  \"progressPercentage\": \"<double>\",\n  \"cancelable\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"state\": \"CANCELING\",\n  \"result\": \"NOT_SET\",\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "The parameter is invalid JSON ViewConfig/TableViewConfig.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/outputModule/export/json-job?sendNotification=false&validationEnabled=false&fileName=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"outputModule",
														"export",
														"json-job"
													],
													"query": [
														{
															"key": "sendNotification",
															"value": "false",
															"description": "Whether an e-mail must be sent on completion of the job."
														},
														{
															"key": "validationEnabled",
															"value": "false",
															"description": "Determines if the ViewConfig’s syntax should be validated (<code>true</code>) or not (<code>false</code>). Validation is then performed immediately instead of only when the job is started. Please note that the validation will always take place during the Job execution, regardless of this parameter. Default value is false."
														},
														{
															"key": "fileName",
															"value": "<string>",
															"description": "The name of the file. By default the file name will be generated."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "json-file",
							"item": [
								{
									"name": "Exports results in JSON format, returns information about created file.",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<string>",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/outputModule/export/json-file?validationEnabled=false&fileName=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"outputModule",
												"export",
												"json-file"
											],
											"query": [
												{
													"key": "validationEnabled",
													"value": "false",
													"description": "Determines if the ViewConfig’s syntax should be validated (<code>true</code>) or not (<code>false</code>). Default value is false for backward compatibility reasons but it is strongly advised to always enable this validation."
												},
												{
													"key": "fileName",
													"value": "<string>",
													"description": "The name of the file. By default the file name will be generated."
												}
											]
										},
										"description": "<p>Performs an Output Module query and stores the query results in a file in JSON format. The id of the file is returned in the response.</p><p>Please note that the ViewConfig/TableViewConfig’s syntax validation is not executed by default, see <code>validationEnabled</code></p><p>DGC admin console settings may impact the execution of the query (especially in terms of timeout and a limit on the number of results). For details please consult output module documentation.</p>"
									},
									"response": [
										{
											"name": "The information about the file where the results are stored.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/outputModule/export/json-file?validationEnabled=false&fileName=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"outputModule",
														"export",
														"json-file"
													],
													"query": [
														{
															"key": "validationEnabled",
															"value": "false",
															"description": "Determines if the ViewConfig’s syntax should be validated (<code>true</code>) or not (<code>false</code>). Default value is false for backward compatibility reasons but it is strongly advised to always enable this validation."
														},
														{
															"key": "fileName",
															"value": "<string>",
															"description": "The name of the file. By default the file name will be generated."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"contentType\": \"<string>\",\n  \"size\": \"<long>\",\n  \"extension\": \"<string>\"\n}"
										},
										{
											"name": "The parameter is invalid JSON ViewConfig/TableViewConfig.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/outputModule/export/json-file?validationEnabled=false&fileName=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"outputModule",
														"export",
														"json-file"
													],
													"query": [
														{
															"key": "validationEnabled",
															"value": "false",
															"description": "Determines if the ViewConfig’s syntax should be validated (<code>true</code>) or not (<code>false</code>). Default value is false for backward compatibility reasons but it is strongly advised to always enable this validation."
														},
														{
															"key": "fileName",
															"value": "<string>",
															"description": "The name of the file. By default the file name will be generated."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Query execution time exceeded.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/outputModule/export/json-file?validationEnabled=false&fileName=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"outputModule",
														"export",
														"json-file"
													],
													"query": [
														{
															"key": "validationEnabled",
															"value": "false",
															"description": "Determines if the ViewConfig’s syntax should be validated (<code>true</code>) or not (<code>false</code>). Default value is false for backward compatibility reasons but it is strongly advised to always enable this validation."
														},
														{
															"key": "fileName",
															"value": "<string>",
															"description": "The name of the file. By default the file name will be generated."
														}
													]
												}
											},
											"status": "Request Timeout",
											"code": 408,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "xml",
							"item": [
								{
									"name": "Exports results in XML format, returns the results immediately.",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<string>",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/outputModule/export/xml?validationEnabled=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"outputModule",
												"export",
												"xml"
											],
											"query": [
												{
													"key": "validationEnabled",
													"value": "false",
													"description": "Determines if the ViewConfig’s syntax should be validated (<code>true</code>) or not (<code>false</code>). Default value is false for backward compatibility reasons but it is strongly advised to always enable this validation."
												}
											]
										},
										"description": "<p>Performs an Output Module query and exports the returns results immediately in XML format.</p><p>Please note that the ViewConfig’s syntax validation is not executed by default, see <code>validationEnabled</code></p><p>DGC admin console settings may impact the execution of the query (especially in terms of timeout and a limit on the number of results).For details please consult output module documentation.</p>"
									},
									"response": [
										{
											"name": "The string response in XML format.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/outputModule/export/xml?validationEnabled=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"outputModule",
														"export",
														"xml"
													],
													"query": [
														{
															"key": "validationEnabled",
															"value": "false",
															"description": "Determines if the ViewConfig’s syntax should be validated (<code>true</code>) or not (<code>false</code>). Default value is false for backward compatibility reasons but it is strongly advised to always enable this validation."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "The parameter is invalid JSON ViewConfig.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/outputModule/export/xml?validationEnabled=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"outputModule",
														"export",
														"xml"
													],
													"query": [
														{
															"key": "validationEnabled",
															"value": "false",
															"description": "Determines if the ViewConfig’s syntax should be validated (<code>true</code>) or not (<code>false</code>). Default value is false for backward compatibility reasons but it is strongly advised to always enable this validation."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Query execution time exceeded.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/outputModule/export/xml?validationEnabled=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"outputModule",
														"export",
														"xml"
													],
													"query": [
														{
															"key": "validationEnabled",
															"value": "false",
															"description": "Determines if the ViewConfig’s syntax should be validated (<code>true</code>) or not (<code>false</code>). Default value is false for backward compatibility reasons but it is strongly advised to always enable this validation."
														}
													]
												}
											},
											"status": "Request Timeout",
											"code": 408,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "xml-job",
							"item": [
								{
									"name": "Exports results in XML format, returns JSON representation of the async Job.",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<string>",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/outputModule/export/xml-job?validationEnabled=false&fileName=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"outputModule",
												"export",
												"xml-job"
											],
											"query": [
												{
													"key": "validationEnabled",
													"value": "false",
													"description": "Determines if the ViewConfig’s syntax should be validated (<code>true</code>) or not (<code>false</code>). Validation is then performed immediately instead of only when the job is started. Please note that the validation will always take place during the Job execution, regardless of this parameter. Default value is false."
												},
												{
													"key": "fileName",
													"value": "<string>",
													"description": "The name of the file. By default the file name will be generated."
												}
											]
										},
										"description": "<p>Starts a job that performs an Output Module query and stores the results in a file in XML format. Id of the file can be retrieved from the <code>message.id</code> property of the job once the job is finished.</p><p>Please note that the ViewConfig's syntax validation is not executed by default, see <code>validationEnabled</code></p><p>DGC admin console settings may impact the execution of the query (especially in terms of timeout and a limit on the number of results). For details please consult output module documentation.</p>"
									},
									"response": [
										{
											"name": "The JSON representation of the job that performs an Output Module query.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/outputModule/export/xml-job?validationEnabled=false&fileName=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"outputModule",
														"export",
														"xml-job"
													],
													"query": [
														{
															"key": "validationEnabled",
															"value": "false",
															"description": "Determines if the ViewConfig’s syntax should be validated (<code>true</code>) or not (<code>false</code>). Validation is then performed immediately instead of only when the job is started. Please note that the validation will always take place during the Job execution, regardless of this parameter. Default value is false."
														},
														{
															"key": "fileName",
															"value": "<string>",
															"description": "The name of the file. By default the file name will be generated."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Website\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"userId\": \"<uuid>\",\n  \"visibility\": \"<integer>\",\n  \"progressPercentage\": \"<double>\",\n  \"cancelable\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"state\": \"CANCELING\",\n  \"result\": \"NOT_SET\",\n  \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "xml-file",
							"item": [
								{
									"name": "Exports results in XML format, returns information about created file.",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<string>",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/outputModule/export/xml-file?validationEnabled=false&fileName=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"outputModule",
												"export",
												"xml-file"
											],
											"query": [
												{
													"key": "validationEnabled",
													"value": "false",
													"description": "Determines if the ViewConfig’s syntax should be validated (<code>true</code>) or not (<code>false</code>). Default value is false for backward compatibility reasons but it is strongly advised to always enable this validation."
												},
												{
													"key": "fileName",
													"value": "<string>",
													"description": "The name of the file. By default the file name will be generated."
												}
											]
										},
										"description": "<p>Performs an Output Module query and stores the query results in a file in XML format. The id of the file is returned in the response.</p><p>Please note that the ViewConfig's syntax validation is not executed by default, see <code>validationEnabled</code></p><p>DGC admin console settings may impact the execution of the query (especially in terms of timeout and a limit on the number of results). For details please consult output module documentation.</p>"
									},
									"response": [
										{
											"name": "The information about the file where the results are stored.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/outputModule/export/xml-file?validationEnabled=false&fileName=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"outputModule",
														"export",
														"xml-file"
													],
													"query": [
														{
															"key": "validationEnabled",
															"value": "false",
															"description": "Determines if the ViewConfig’s syntax should be validated (<code>true</code>) or not (<code>false</code>). Default value is false for backward compatibility reasons but it is strongly advised to always enable this validation."
														},
														{
															"key": "fileName",
															"value": "<string>",
															"description": "The name of the file. By default the file name will be generated."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"contentType\": \"<string>\",\n  \"size\": \"<long>\",\n  \"extension\": \"<string>\"\n}"
										},
										{
											"name": "The parameter is invalid JSON ViewConfig.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/outputModule/export/xml-file?validationEnabled=false&fileName=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"outputModule",
														"export",
														"xml-file"
													],
													"query": [
														{
															"key": "validationEnabled",
															"value": "false",
															"description": "Determines if the ViewConfig’s syntax should be validated (<code>true</code>) or not (<code>false</code>). Default value is false for backward compatibility reasons but it is strongly advised to always enable this validation."
														},
														{
															"key": "fileName",
															"value": "<string>",
															"description": "The name of the file. By default the file name will be generated."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Query execution time exceeded.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/outputModule/export/xml-file?validationEnabled=false&fileName=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"outputModule",
														"export",
														"xml-file"
													],
													"query": [
														{
															"key": "validationEnabled",
															"value": "false",
															"description": "Determines if the ViewConfig’s syntax should be validated (<code>true</code>) or not (<code>false</code>). Default value is false for backward compatibility reasons but it is strongly advised to always enable this validation."
														},
														{
															"key": "fileName",
															"value": "<string>",
															"description": "The name of the file. By default the file name will be generated."
														}
													]
												}
											},
											"status": "Request Timeout",
											"code": 408,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "tableViewConfigs",
					"item": [
						{
							"name": "viewId",
							"item": [
								{
									"name": "{viewId}",
									"item": [
										{
											"name": "Returns TableViewConfig based on id of given View and its Location.",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/outputModule/tableViewConfigs/viewId/:viewId?viewLocation=DATA_HELPDESK_DATA_QUALITY",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"outputModule",
														"tableViewConfigs",
														"viewId",
														":viewId"
													],
													"query": [
														{
															"key": "viewLocation",
															"value": "DATA_HELPDESK_DATA_QUALITY",
															"description": "The Location for which the view shall be generated.Views in Collibra Data Governance Center are available under specific locations.Each location is associated with set of filters that are automatically applied to given view.Setting appropriate View Location will produce Table View Config that describes the data seen under desired location and given View in the best way possible.If this field is not provided then the returned Table View Config is going to have additional filters applied based on viewLocation extracted from database.`\n\n<table><tr><th>viewLocation value </th><th> Corresponding view in Collibra Data Governance Center User Interface</th></tr><tr><td>BUSINESS_GLOSSARY_BUSINESS_ASSETS </td><td> Business Glossary Subpages: Business Assets (/glossary)Glossaries (/glossary/glossaries)</td></tr><tr><td>REFERENCE_DATA_CODEVALUES_AND_SETS </td><td> Reference Data > Code Values/Sets (/reference-data)</td></tr><tr><td>CATALOG_DATA_SETS </td><td> Catalog > Data Sets (/catalog/data-sets)</td><td><tr><td>CATALOG_DATA_DICTIONARY </td><td> Catalog > Data Dictionary (/catalog/data-dictionary)</td></tr><tr><td>CATALOG_TECHNOLOGY_ASSETS </td><td> Catalog > Technology Assets (/catalog/technology-assets)</td></tr><tr><td>DATA_HELPDESK_ISSUES </td><td> Data Helpdesk Subpages: Issues(/data-helpdesk)>Data Quality (/data-helpdesk/data-quality)</td></tr><tr><td>STEWARDSHIP_BUSINESS_DIMENSIONS </td><td> Stewardship > Business Dimensions (/stewardship/business-dimensions)</td></tr><tr><td>POLICY_MANAGER_GOVERNANCE_ASSETS </td><td> Policy Manager > Governance Assets (/policy-manager)</td></tr></table>"
														}
													],
													"variable": [
														{
															"key": "viewId",
															"value": "<uuid>",
															"description": "(Required) The <code>id</code> of given View. Can be obtained from Collibra Data Governance Center User Interface"
														}
													]
												},
												"description": "<b>EXPERIMENTAL</b> Returns Table View Config based on id of given View and its Location. This Table View Config can be used by Output Module to export data as visible in Collibra Data Governance Center User Interface.<p>This endpoint does not guarantee a one-to-one relation between what is visible in the User Interface and what will be exported by using the provided Table View Config. Due to the possibility of adding additional filters through User Interface the result can contain more rows then are visible in the User Interface. In such case the Table View Config produced by this endpoint should be manually adjusted. <p><b>Because obtaining the correct results needs a human intervention, this endpoint should not be used in any kind of automatic processing.</b><p>Example: given page under url https://dgc.collibra.com/glossary?view=133f7f30-033c-4e38-acc2-2c1ac599d19e the view <code>id</code> is <code>133f7f30-033c-4e38-acc2-2c1ac599d19e</code>."
											},
											"response": [
												{
													"name": "View config generated.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/outputModule/tableViewConfigs/viewId/:viewId?viewLocation=DATA_HELPDESK_DATA_QUALITY",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"outputModule",
																"tableViewConfigs",
																"viewId",
																":viewId"
															],
															"query": [
																{
																	"key": "viewLocation",
																	"value": "DATA_HELPDESK_DATA_QUALITY",
																	"description": "The Location for which the view shall be generated.Views in Collibra Data Governance Center are available under specific locations.Each location is associated with set of filters that are automatically applied to given view.Setting appropriate View Location will produce Table View Config that describes the data seen under desired location and given View in the best way possible.If this field is not provided then the returned Table View Config is going to have additional filters applied based on viewLocation extracted from database.`\n\n<table><tr><th>viewLocation value </th><th> Corresponding view in Collibra Data Governance Center User Interface</th></tr><tr><td>BUSINESS_GLOSSARY_BUSINESS_ASSETS </td><td> Business Glossary Subpages: Business Assets (/glossary)Glossaries (/glossary/glossaries)</td></tr><tr><td>REFERENCE_DATA_CODEVALUES_AND_SETS </td><td> Reference Data > Code Values/Sets (/reference-data)</td></tr><tr><td>CATALOG_DATA_SETS </td><td> Catalog > Data Sets (/catalog/data-sets)</td><td><tr><td>CATALOG_DATA_DICTIONARY </td><td> Catalog > Data Dictionary (/catalog/data-dictionary)</td></tr><tr><td>CATALOG_TECHNOLOGY_ASSETS </td><td> Catalog > Technology Assets (/catalog/technology-assets)</td></tr><tr><td>DATA_HELPDESK_ISSUES </td><td> Data Helpdesk Subpages: Issues(/data-helpdesk)>Data Quality (/data-helpdesk/data-quality)</td></tr><tr><td>STEWARDSHIP_BUSINESS_DIMENSIONS </td><td> Stewardship > Business Dimensions (/stewardship/business-dimensions)</td></tr><tr><td>POLICY_MANAGER_GOVERNANCE_ASSETS </td><td> Policy Manager > Governance Assets (/policy-manager)</td></tr></table>"
																}
															],
															"variable": [
																{
																	"key": "viewId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "<string>"
												},
												{
													"name": "View not found.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/outputModule/tableViewConfigs/viewId/:viewId?viewLocation=DATA_HELPDESK_DATA_QUALITY",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"outputModule",
																"tableViewConfigs",
																"viewId",
																":viewId"
															],
															"query": [
																{
																	"key": "viewLocation",
																	"value": "DATA_HELPDESK_DATA_QUALITY",
																	"description": "The Location for which the view shall be generated.Views in Collibra Data Governance Center are available under specific locations.Each location is associated with set of filters that are automatically applied to given view.Setting appropriate View Location will produce Table View Config that describes the data seen under desired location and given View in the best way possible.If this field is not provided then the returned Table View Config is going to have additional filters applied based on viewLocation extracted from database.`\n\n<table><tr><th>viewLocation value </th><th> Corresponding view in Collibra Data Governance Center User Interface</th></tr><tr><td>BUSINESS_GLOSSARY_BUSINESS_ASSETS </td><td> Business Glossary Subpages: Business Assets (/glossary)Glossaries (/glossary/glossaries)</td></tr><tr><td>REFERENCE_DATA_CODEVALUES_AND_SETS </td><td> Reference Data > Code Values/Sets (/reference-data)</td></tr><tr><td>CATALOG_DATA_SETS </td><td> Catalog > Data Sets (/catalog/data-sets)</td><td><tr><td>CATALOG_DATA_DICTIONARY </td><td> Catalog > Data Dictionary (/catalog/data-dictionary)</td></tr><tr><td>CATALOG_TECHNOLOGY_ASSETS </td><td> Catalog > Technology Assets (/catalog/technology-assets)</td></tr><tr><td>DATA_HELPDESK_ISSUES </td><td> Data Helpdesk Subpages: Issues(/data-helpdesk)>Data Quality (/data-helpdesk/data-quality)</td></tr><tr><td>STEWARDSHIP_BUSINESS_DIMENSIONS </td><td> Stewardship > Business Dimensions (/stewardship/business-dimensions)</td></tr><tr><td>POLICY_MANAGER_GOVERNANCE_ASSETS </td><td> Policy Manager > Governance Assets (/policy-manager)</td></tr></table>"
																}
															],
															"variable": [
																{
																	"key": "viewId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "reporting",
			"item": [
				{
					"name": "insights",
					"item": [
						{
							"name": "download",
							"item": [
								{
									"name": "Reporting insights download",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reporting/insights/download?snapshotDate=<string>&format=zip",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reporting",
												"insights",
												"download"
											],
											"query": [
												{
													"key": "snapshotDate",
													"value": "<string>",
													"description": "Snapshot date for reporting insights data in ISO8601 format (e.g.: 2019-05-14)"
												},
												{
													"key": "format",
													"value": "zip",
													"description": "Archive format. Currently only ZIP format is accepted"
												}
											]
										},
										"description": "Returns a Reporting Data archive (zip) file that contains Apache Parquet files with table content for each of the seven concepts (community, domain, asset, attribute, relation, responsibility and usage) for one day (=snapshot date). Please refer to the Reporting Data Layer product documentation for more information at [Working with your reporting data](https://productresources.collibra.com/docs/collibra/latest/Content/Reporting/co_working-with-data.htm).<br />Collibra Insights Data Access provides data that may be subject to access restrictions within your organization. Please ensure you follow your organization's policies and have approval to access this data.<br />This operation is deprecated and it will be removed in the future."
									},
									"response": [
										{
											"name": "Insights has been downloaded",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reporting/insights/download?snapshotDate=<string>&format=zip",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reporting",
														"insights",
														"download"
													],
													"query": [
														{
															"key": "snapshotDate",
															"value": "<string>",
															"description": "Snapshot date for reporting insights data in ISO8601 format (e.g.: 2019-05-14)"
														},
														{
															"key": "format",
															"value": "zip",
															"description": "Archive format. Currently only ZIP format is accepted"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "<binary>"
										},
										{
											"name": "There is no insights for given date",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reporting/insights/download?snapshotDate=<string>&format=zip",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reporting",
														"insights",
														"download"
													],
													"query": [
														{
															"key": "snapshotDate",
															"value": "<string>",
															"description": "Snapshot date for reporting insights data in ISO8601 format (e.g.: 2019-05-14)"
														},
														{
															"key": "format",
															"value": "zip",
															"description": "Archive format. Currently only ZIP format is accepted"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The selected format is not acceptable",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reporting/insights/download?snapshotDate=<string>&format=zip",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reporting",
														"insights",
														"download"
													],
													"query": [
														{
															"key": "snapshotDate",
															"value": "<string>",
															"description": "Snapshot date for reporting insights data in ISO8601 format (e.g.: 2019-05-14)"
														},
														{
															"key": "format",
															"value": "zip",
															"description": "Archive format. Currently only ZIP format is accepted"
														}
													]
												}
											},
											"status": "Not Acceptable",
											"code": 406,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "directDownload",
							"item": [
								{
									"name": "Reporting insights download directly from cloud storage",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/reporting/insights/directDownload?snapshotDate=<string>&format=zip",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reporting",
												"insights",
												"directDownload"
											],
											"query": [
												{
													"key": "snapshotDate",
													"value": "<string>",
													"description": "Snapshot date for reporting insights data in ISO8601 format (e.g.: 2019-05-14)"
												},
												{
													"key": "format",
													"value": "zip",
													"description": "Archive format. Currently only ZIP format is accepted"
												}
											]
										},
										"description": "Returns a Reporting Data archive (zip) file that contains Apache Parquet files with table content for each of the seven concepts (community, domain, asset, attribute, relation, responsibility and usage) for one day (=snapshot date). Please refer to the Reporting Data Layer product documentation for more information at [Working with your reporting data](https://productresources.collibra.com/docs/collibra/latest/Content/Reporting/co_working-with-data.htm).<br />Collibra Insights Data Access provides data that may be subject to access restrictions within your organization. Please ensure you follow your organization's policies and have approval to access this data.<br />This endpoint redirects to download the Reporting Data archive (zip) file directly from cloud storage, bypassing the Collibra network. The redirect URL is temporary, valid for 60 seconds by default (see “pre-signed URL” in AWS and GCP docs for more details). You will need to allow redirects for this endpoint to work correctly.<br />Note: The \"Try it out\" button in the documentation UI might not work properly. To test this endpoint, please use curl with \"-L\" option to follow redirects. "
									},
									"response": [
										{
											"name": "Redirect to a temporal URL to download Insights",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reporting/insights/directDownload?snapshotDate=<string>&format=zip",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reporting",
														"insights",
														"directDownload"
													],
													"query": [
														{
															"key": "snapshotDate",
															"value": "<string>",
															"description": "Snapshot date for reporting insights data in ISO8601 format (e.g.: 2019-05-14)"
														},
														{
															"key": "format",
															"value": "zip",
															"description": "Archive format. Currently only ZIP format is accepted"
														}
													]
												}
											},
											"status": "Temporary Redirect (since HTTP/1.1)",
											"code": 307,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "There is no insights for given date",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reporting/insights/directDownload?snapshotDate=<string>&format=zip",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reporting",
														"insights",
														"directDownload"
													],
													"query": [
														{
															"key": "snapshotDate",
															"value": "<string>",
															"description": "Snapshot date for reporting insights data in ISO8601 format (e.g.: 2019-05-14)"
														},
														{
															"key": "format",
															"value": "zip",
															"description": "Archive format. Currently only ZIP format is accepted"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The selected format is not acceptable",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reporting/insights/directDownload?snapshotDate=<string>&format=zip",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reporting",
														"insights",
														"directDownload"
													],
													"query": [
														{
															"key": "snapshotDate",
															"value": "<string>",
															"description": "Snapshot date for reporting insights data in ISO8601 format (e.g.: 2019-05-14)"
														},
														{
															"key": "format",
															"value": "zip",
															"description": "Archive format. Currently only ZIP format is accepted"
														}
													]
												}
											},
											"status": "Not Acceptable",
											"code": 406,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "roles",
			"item": [
				{
					"name": "{roleId}",
					"item": [
						{
							"name": "Returns the role identified by the given id.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/roles/:roleId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles",
										":roleId"
									],
									"variable": [
										{
											"key": "roleId",
											"value": "<uuid>",
											"description": "(Required) The unique identifier of the role."
										}
									]
								},
								"description": "Returns the role identified by the given id."
							},
							"response": [
								{
									"name": "default response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/roles/:roleId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"roles",
												":roleId"
											],
											"variable": [
												{
													"key": "roleId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"StringAttribute\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"global\": \"<boolean>\",\n  \"permissionList\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"permissions\": [\n    \"ATTACHMENT_CHANGE\",\n    \"ASSET_ATTRIBUTE_ADD\"\n  ]\n}"
								}
							]
						},
						{
							"name": "Removes the role identified by the given id.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/roles/:roleId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles",
										":roleId"
									],
									"variable": [
										{
											"key": "roleId",
											"value": "<uuid>",
											"description": "(Required) The unique identifier of the role."
										}
									]
								},
								"description": "Removes the role identified by the given id."
							},
							"response": [
								{
									"name": "default response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/roles/:roleId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"roles",
												":roleId"
											],
											"variable": [
												{
													"key": "roleId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Change the role with the given id.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"permissions\": [\n    \"RESOURCE_MANAGE_ALL\",\n    \"ASSET_RESPONSIBILITY_REMOVE\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/roles/:roleId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles",
										":roleId"
									],
									"variable": [
										{
											"key": "roleId",
											"value": "<uuid>",
											"description": "(Required) The unique identifier of the role."
										}
									]
								},
								"description": "Changes the role with the information that is present in the request.  Only properties that are specified in this request and have not <code>null</code> values are updated.  All other properties are ignored."
							},
							"response": [
								{
									"name": "default response",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"permissions\": [\n    \"RESOURCE_MANAGE_ALL\",\n    \"ASSET_RESPONSIBILITY_REMOVE\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/roles/:roleId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"roles",
												":roleId"
											],
											"variable": [
												{
													"key": "roleId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"StringAttribute\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"global\": \"<boolean>\",\n  \"permissionList\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"permissions\": [\n    \"ATTACHMENT_CHANGE\",\n    \"ASSET_ATTRIBUTE_ADD\"\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Returns roles matching the given search criteria.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/roles?offset=0&limit=0&countLimit=-1&name=<string>&nameMatchMode=ANYWHERE&description=<string>&global=<boolean>&ownerId=<uuid>&roleInheritanceMode=DIRECTLY_AND_VIA_GROUPS&sortField=LICENSE_TYPE&sortOrder=DESC&type=GLOBAL",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
								},
								{
									"key": "limit",
									"value": "0",
									"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
								},
								{
									"key": "countLimit",
									"value": "-1",
									"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "The name of the role to search for."
								},
								{
									"key": "nameMatchMode",
									"value": "ANYWHERE",
									"description": "The match mode used to compare <code>name</code>. The search is case-insensitive."
								},
								{
									"key": "description",
									"value": "<string>",
									"description": "The description of the role to search for."
								},
								{
									"key": "global",
									"value": "<boolean>",
									"description": "Whether global roles should be searched for."
								},
								{
									"key": "ownerId",
									"value": "<uuid>",
									"description": "The id of the owner of the roles. This can be a user or a group."
								},
								{
									"key": "roleInheritanceMode",
									"value": "DIRECTLY_AND_VIA_GROUPS",
									"description": "How to include inherited roles from groups in the search results. Allowable values are DIRECTLY, VIA_GROUPS, DIRECTLY_AND_VIA_GROUPS."
								},
								{
									"key": "sortField",
									"value": "LICENSE_TYPE",
									"description": "The sort field for the result."
								},
								{
									"key": "sortOrder",
									"value": "DESC",
									"description": "The order of sorting."
								},
								{
									"key": "type",
									"value": "GLOBAL",
									"description": "Indicates which type of roles should be searched for. Usage is mutually exclusive with the deprecated global flag."
								}
							]
						},
						"description": "Only parameters that are specified in this request and have not <code>null</code> values are used for filtering.  All other parameters are ignored.  The returned roles satisfy all constraints that are specified in this search criteria.  By default a result containing 1000 roles is returned."
					},
					"response": [
						{
							"name": "default response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/roles?offset=0&limit=0&countLimit=-1&name=<string>&nameMatchMode=ANYWHERE&description=<string>&global=<boolean>&ownerId=<uuid>&roleInheritanceMode=DIRECTLY_AND_VIA_GROUPS&sortField=LICENSE_TYPE&sortOrder=DESC&type=GLOBAL",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "The name of the role to search for."
										},
										{
											"key": "nameMatchMode",
											"value": "ANYWHERE",
											"description": "The match mode used to compare <code>name</code>. The search is case-insensitive."
										},
										{
											"key": "description",
											"value": "<string>",
											"description": "The description of the role to search for."
										},
										{
											"key": "global",
											"value": "<boolean>",
											"description": "Whether global roles should be searched for."
										},
										{
											"key": "ownerId",
											"value": "<uuid>",
											"description": "The id of the owner of the roles. This can be a user or a group."
										},
										{
											"key": "roleInheritanceMode",
											"value": "DIRECTLY_AND_VIA_GROUPS",
											"description": "How to include inherited roles from groups in the search results. Allowable values are DIRECTLY, VIA_GROUPS, DIRECTLY_AND_VIA_GROUPS."
										},
										{
											"key": "sortField",
											"value": "LICENSE_TYPE",
											"description": "The sort field for the result."
										},
										{
											"key": "sortOrder",
											"value": "DESC",
											"description": "The order of sorting."
										},
										{
											"key": "type",
											"value": "GLOBAL",
											"description": "Indicates which type of roles should be searched for. Usage is mutually exclusive with the deprecated global flag."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": \"<long>\",\n  \"offset\": \"<long>\",\n  \"limit\": \"<long>\",\n  \"results\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DataQualityRule\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"global\": \"<boolean>\",\n      \"permissionList\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"permissions\": [\n        \"SYSTEM_ADMINISTRATION\",\n        \"REFERENCE_DATA_MANAGER\"\n      ]\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DateTimeAttributeType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"global\": \"<boolean>\",\n      \"permissionList\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"permissions\": [\n        \"RELATION_TYPE_CHANGE\",\n        \"COMMUNITY_RESPONSIBILITY_CHANGE\"\n      ]\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Adds a new role.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"global\": \"<boolean>\",\n  \"description\": \"<string>\",\n  \"permissions\": [\n    \"DATA_DICTIONARY\",\n    \"ADVANCED_DATA_TYPE_EDIT\"\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/roles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"roles"
							]
						},
						"description": "Adds new role."
					},
					"response": [
						{
							"name": "Role successfully added.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"global\": \"<boolean>\",\n  \"description\": \"<string>\",\n  \"permissions\": [\n    \"DATA_DICTIONARY\",\n    \"ADVANCED_DATA_TYPE_EDIT\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"StringAttribute\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"global\": \"<boolean>\",\n  \"permissionList\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"permissions\": [\n    \"ATTACHMENT_CHANGE\",\n    \"ASSET_ATTRIBUTE_ADD\"\n  ]\n}"
						},
						{
							"name": "A role with the given ID already exists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"global\": \"<boolean>\",\n  \"description\": \"<string>\",\n  \"permissions\": [\n    \"DATA_DICTIONARY\",\n    \"ADVANCED_DATA_TYPE_EDIT\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"roles"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "security",
			"item": [
				{
					"name": "saml",
					"item": [
						{
							"name": "certificate",
							"item": [
								{
									"name": "{type}",
									"item": [
										{
											"name": "Changes the certificate to be used with SAML",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"value": "[object Object]",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/security/saml/certificate/:type",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"security",
														"saml",
														"certificate",
														":type"
													],
													"variable": [
														{
															"key": "type",
															"value": "SIGNING",
															"description": "(Required) "
														}
													]
												},
												"description": "Replaces the currently used certificate with the one uploaded in PEM format. The PEM file must be unencrypted (no password) and contain both the certificate and the private key."
											},
											"response": [
												{
													"name": "Certificate successfully changed",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "file",
																	"value": "[object Object]",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/security/saml/certificate/:type",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"security",
																"saml",
																"certificate",
																":type"
															],
															"variable": [
																{
																	"key": "type"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete the specified SAML certificate from the SAML keystore.",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/security/saml/certificate/:type",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"security",
														"saml",
														"certificate",
														":type"
													],
													"variable": [
														{
															"key": "type",
															"value": "SIGNING",
															"description": "(Required) "
														}
													]
												},
												"description": "Delete the certificate from the SAML keystore and replace it with a generated certificate as done by default."
											},
											"response": [
												{
													"name": "The certificate was successfully deleted.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/security/saml/certificate/:type",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"security",
																"saml",
																"certificate",
																":type"
															],
															"variable": [
																{
																	"key": "type"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "Returns the SAML Service Provider metadata for this instance.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/security/saml?complete=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"security",
										"saml"
									],
									"query": [
										{
											"key": "complete",
											"value": "<boolean>",
											"description": "Whether or not the meta data generated should include the non-required attributes (completeMetadata = true means all the non-essential attributes too)."
										}
									]
								},
								"description": "Returns the SAML Service Provider metadata for this instance."
							},
							"response": [
								{
									"name": "metadata successfully found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/xml"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/security/saml?complete=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"security",
												"saml"
											],
											"query": [
												{
													"key": "complete",
													"value": "<boolean>",
													"description": "Whether or not the meta data generated should include the non-required attributes (completeMetadata = true means all the non-essential attributes too)."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "xml",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/xml"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "auth",
			"item": [
				{
					"name": "sessions",
					"item": [
						{
							"name": "current",
							"item": [
								{
									"name": "Get session",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/auth/sessions/current?include=<string>&include=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"sessions",
												"current"
											],
											"query": [
												{
													"key": "include",
													"value": "<string>",
													"description": "Specify additional objects to include in the session response. Supports 'csrfToken' and 'user'. Multiple inclusions may be specified using additional 'include' query parameters or by comma-separated list."
												},
												{
													"key": "include",
													"value": "<string>",
													"description": "Specify additional objects to include in the session response. Supports 'csrfToken' and 'user'. Multiple inclusions may be specified using additional 'include' query parameters or by comma-separated list."
												}
											]
										},
										"description": "Gets current session (checks if user is logged in)."
									},
									"response": [
										{
											"name": "The user is logged in.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/auth/sessions/current?include=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"auth",
														"sessions",
														"current"
													],
													"query": [
														{
															"key": "include",
															"value": "<string>",
															"description": "Specify additional objects to include in the session response. Supports 'csrfToken' and 'user'. Multiple inclusions may be specified using additional 'include' query parameters or by comma-separated list."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The user is not authenticated.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/auth/sessions/current?include=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"auth",
														"sessions",
														"current"
													],
													"query": [
														{
															"key": "include",
															"value": "<string>",
															"description": "Specify additional objects to include in the session response. Supports 'csrfToken' and 'user'. Multiple inclusions may be specified using additional 'include' query parameters or by comma-separated list."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Logout",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/auth/sessions/current",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"sessions",
												"current"
											]
										},
										"description": "Logs current user out and destroys the active session."
									},
									"response": [
										{
											"name": "The user was logged out and session closed.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/auth/sessions/current",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"auth",
														"sessions",
														"current"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The user is not authenticated.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/auth/sessions/current",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"auth",
														"sessions",
														"current"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "heartbeat",
							"item": [
								{
									"name": "Checks if the user session is active",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/auth/sessions/heartbeat",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"sessions",
												"heartbeat"
											]
										},
										"description": "Returns 200 if user session is active and 401 if the session is expired or doesn't exist"
									},
									"response": [
										{
											"name": "The user is authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/auth/sessions/heartbeat",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"auth",
														"sessions",
														"heartbeat"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The user is not authenticated.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/auth/sessions/heartbeat",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"auth",
														"sessions",
														"heartbeat"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var res = pm.response.json();\r",
											"pm.collectionVariables.set('token', res.csrfToken);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"{{basicAuthUsername}}\",\n  \"password\": \"{{basicAuthPassword}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/sessions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"sessions"
									]
								},
								"description": "Authenticates a user and creates a new session on the server. Once the user is authenticated then the returned session id can be used to access DGC REST Api in subsequent requests. The method additionally returns the JSESSIONID cookie in a <code>Set-Cookie</code> header. If user already has an open session then this session will be terminated."
							},
							"response": [
								{
									"name": "The user was logged in and a new session was created. The response includes the CSRF token that is created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/sessions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"sessions"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"csrfToken\": \"<string>\",\n  \"user\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"SingleValueListAttributeType\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"userName\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"emailAddress\": \"<string>\",\n    \"gender\": \"MALE\",\n    \"language\": \"<string>\",\n    \"additionalEmailAddresses\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"User\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"emailAddress\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"DomainType\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"emailAddress\": \"<string>\"\n      }\n    ],\n    \"phoneNumbers\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Classification\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"type\": \"PRIVATE\",\n        \"phoneNumber\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"DataQualityMetric\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"type\": \"PAGER\",\n        \"phoneNumber\": \"<string>\"\n      }\n    ],\n    \"instantMessagingAccounts\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"JdbcIngestionProperties\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"account\": \"<string>\",\n        \"type\": \"JABBER\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"StringAttributeType\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"account\": \"<string>\",\n        \"type\": \"YAHOO_MESSENGER\"\n      }\n    ],\n    \"websites\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ExcelIngestionProperties\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"url\": \"<string>\",\n        \"type\": \"TWITTER\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"InstantMessagingAccount\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"url\": \"<string>\",\n        \"type\": \"WEBSITE\"\n      }\n    ],\n    \"addresses\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Attachment\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"city\": \"<string>\",\n        \"street\": \"<string>\",\n        \"number\": \"<string>\",\n        \"state\": \"<string>\",\n        \"country\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"type\": \"HOME\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ArticulationRule\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"city\": \"<string>\",\n        \"street\": \"<string>\",\n        \"number\": \"<string>\",\n        \"state\": \"<string>\",\n        \"country\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"type\": \"WORK\"\n      }\n    ],\n    \"activated\": \"<boolean>\",\n    \"enabled\": \"<boolean>\",\n    \"ldapUser\": \"<boolean>\",\n    \"userSource\": \"INTERNAL\",\n    \"guestUser\": \"<boolean>\",\n    \"apiUser\": \"<boolean>\",\n    \"licenseType\": \"AUTHOR\"\n  }\n}"
								},
								{
									"name": "The user is not authenticated.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/sessions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"sessions"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "users",
			"item": [
				{
					"name": "{userId}",
					"item": [
						{
							"name": "userGroups",
							"item": [
								{
									"name": "Sets user groups for the indicated user",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"userGroupIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:userId/userGroups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId",
												"userGroups"
											],
											"variable": [
												{
													"key": "userId",
													"value": "<uuid>",
													"description": "(Required) the ID of the user"
												}
											]
										},
										"description": "Sets user groups for the indicated user"
									},
									"response": [
										{
											"name": "User groups set successfully",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userGroupIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/userGroups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"userGroups"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Notification\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"userName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"emailAddress\": \"<string>\",\n  \"gender\": \"UNKNOWN\",\n  \"language\": \"<string>\",\n  \"additionalEmailAddresses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationAttributeType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"emailAddress\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ActivityChange\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"emailAddress\": \"<string>\"\n    }\n  ],\n  \"phoneNumbers\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"WorkflowInstance\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"type\": \"WORK\",\n      \"phoneNumber\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ExcelIngestionProperties\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"type\": \"PAGER\",\n      \"phoneNumber\": \"<string>\"\n    }\n  ],\n  \"instantMessagingAccounts\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DataQualityMetric\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"account\": \"<string>\",\n      \"type\": \"GTALK\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationLeg\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"account\": \"<string>\",\n      \"type\": \"JABBER\"\n    }\n  ],\n  \"websites\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Tag\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"url\": \"<string>\",\n      \"type\": \"MYSPACE\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"RelationType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"url\": \"<string>\",\n      \"type\": \"TWITTER\"\n    }\n  ],\n  \"addresses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"NumericAttributeType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"city\": \"<string>\",\n      \"street\": \"<string>\",\n      \"number\": \"<string>\",\n      \"state\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"type\": \"HOME\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"NumericAttributeType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"city\": \"<string>\",\n      \"street\": \"<string>\",\n      \"number\": \"<string>\",\n      \"state\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"type\": \"WORK\"\n    }\n  ],\n  \"activated\": \"<boolean>\",\n  \"enabled\": \"<boolean>\",\n  \"ldapUser\": \"<boolean>\",\n  \"userSource\": \"SSO\",\n  \"guestUser\": \"<boolean>\",\n  \"apiUser\": \"<boolean>\",\n  \"licenseType\": \"AUTHOR\"\n}"
										},
										{
											"name": "User with given ID not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userGroupIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/userGroups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"userGroups"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Add a user to multiple user groups",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"userGroupIds\": [\n    \"<uuid>\"\n  ],\n  \"userId\": \"<uuid>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:userId/userGroups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId",
												"userGroups"
											],
											"variable": [
												{
													"key": "userId",
													"value": "<uuid>",
													"description": "(Required) the ID of the user"
												}
											]
										},
										"description": "Add a user to multiple user groups"
									},
									"response": [
										{
											"name": "User successfully added to the indicated groups.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userGroupIds\": [\n    \"<uuid>\"\n  ],\n  \"userId\": \"<uuid>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/userGroups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"userGroups"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Attachment\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"locallyManaged\": \"<boolean>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"StringAttribute\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"locallyManaged\": \"<boolean>\"\n  }\n]"
										},
										{
											"name": "User with given ID not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userGroupIds\": [\n    \"<uuid>\"\n  ],\n  \"userId\": \"<uuid>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/userGroups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"userGroups"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Removes user from multiple user groups",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"userGroupIds\": [\n    \"<uuid>\"\n  ],\n  \"userId\": \"<uuid>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:userId/userGroups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId",
												"userGroups"
											],
											"variable": [
												{
													"key": "userId",
													"value": "<uuid>",
													"description": "(Required) The ID of the user"
												}
											]
										},
										"description": "Removes user from multiple user groups"
									},
									"response": [
										{
											"name": "User successfully removed from user groups",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userGroupIds\": [\n    \"<uuid>\"\n  ],\n  \"userId\": \"<uuid>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/userGroups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"userGroups"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User with given ID not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userGroupIds\": [\n    \"<uuid>\"\n  ],\n  \"userId\": \"<uuid>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/userGroups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"userGroups"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "avatar",
							"item": [
								{
									"name": "Get the avatar image for the user with the given ID",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:userId/avatar?width=<integer>&height=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId",
												"avatar"
											],
											"query": [
												{
													"key": "width",
													"value": "<integer>",
													"description": "The width of the returned avatar"
												},
												{
													"key": "height",
													"value": "<integer>",
													"description": "The height of the returned avatar"
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<uuid>",
													"description": "(Required) The ID of the user to get the avatar for"
												}
											]
										},
										"description": "Get the avatar image for the user with the given ID"
									},
									"response": [
										{
											"name": "Avatar image successfully retrieved",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:userId/avatar?width=<integer>&height=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"avatar"
													],
													"query": [
														{
															"key": "width",
															"value": "<integer>",
															"description": "The width of the returned avatar"
														},
														{
															"key": "height",
															"value": "<integer>",
															"description": "The height of the returned avatar"
														}
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "<binary>"
										},
										{
											"name": "User with given ID not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:userId/avatar?width=<integer>&height=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"avatar"
													],
													"query": [
														{
															"key": "width",
															"value": "<integer>",
															"description": "The width of the returned avatar"
														},
														{
															"key": "height",
															"value": "<integer>",
															"description": "The height of the returned avatar"
														}
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Deletes the avatar for the user identified by the given ID",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/users/:userId/avatar",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId",
												"avatar"
											],
											"variable": [
												{
													"key": "userId",
													"value": "<uuid>",
													"description": "(Required) the ID of the user to delete the avatar for"
												}
											]
										},
										"description": "Deletes the avatar for the user identified by the given ID"
									},
									"response": [
										{
											"name": "User avatar successfully deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:userId/avatar",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"avatar"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User with given ID not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:userId/avatar",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"avatar"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Changes the avatar for the user identified by the given ID",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"fileId\": \"<uuid>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:userId/avatar",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId",
												"avatar"
											],
											"variable": [
												{
													"key": "userId",
													"value": "<uuid>",
													"description": "(Required) the ID of the user to change the avatar for"
												}
											]
										},
										"description": "Changes the avatar for the user identified by the given ID"
									},
									"response": [
										{
											"name": "User avatar successfully changed",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"fileId\": \"<uuid>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/avatar",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"avatar"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Notification\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"userName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"emailAddress\": \"<string>\",\n  \"gender\": \"UNKNOWN\",\n  \"language\": \"<string>\",\n  \"additionalEmailAddresses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationAttributeType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"emailAddress\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ActivityChange\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"emailAddress\": \"<string>\"\n    }\n  ],\n  \"phoneNumbers\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"WorkflowInstance\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"type\": \"WORK\",\n      \"phoneNumber\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ExcelIngestionProperties\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"type\": \"PAGER\",\n      \"phoneNumber\": \"<string>\"\n    }\n  ],\n  \"instantMessagingAccounts\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DataQualityMetric\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"account\": \"<string>\",\n      \"type\": \"GTALK\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationLeg\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"account\": \"<string>\",\n      \"type\": \"JABBER\"\n    }\n  ],\n  \"websites\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Tag\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"url\": \"<string>\",\n      \"type\": \"MYSPACE\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"RelationType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"url\": \"<string>\",\n      \"type\": \"TWITTER\"\n    }\n  ],\n  \"addresses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"NumericAttributeType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"city\": \"<string>\",\n      \"street\": \"<string>\",\n      \"number\": \"<string>\",\n      \"state\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"type\": \"HOME\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"NumericAttributeType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"city\": \"<string>\",\n      \"street\": \"<string>\",\n      \"number\": \"<string>\",\n      \"state\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"type\": \"WORK\"\n    }\n  ],\n  \"activated\": \"<boolean>\",\n  \"enabled\": \"<boolean>\",\n  \"ldapUser\": \"<boolean>\",\n  \"userSource\": \"SSO\",\n  \"guestUser\": \"<boolean>\",\n  \"apiUser\": \"<boolean>\",\n  \"licenseType\": \"AUTHOR\"\n}"
										},
										{
											"name": "User with given ID not found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"fileId\": \"<uuid>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/avatar",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"avatar"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "licenseType",
							"item": [
								{
									"name": "Gets the required LicenseType for the given user",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:userId/licenseType",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId",
												"licenseType"
											],
											"variable": [
												{
													"key": "userId",
													"value": "<uuid>",
													"description": "(Required) the ID of the user"
												}
											]
										},
										"description": "Gets the required LicenseType for the given user based on their assigned permissions."
									},
									"response": [
										{
											"name": "LicenseType successfully retrieved",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:userId/licenseType",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"licenseType"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "CONSUMER"
										},
										{
											"name": "User with given ID not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:userId/licenseType",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"licenseType"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Gets the user with the given ID",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "<uuid>",
											"description": "(Required) The ID of the user"
										}
									]
								},
								"description": "Gets the user with the given ID"
							},
							"response": [
								{
									"name": "User successfully retrieved",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId"
											],
											"variable": [
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Notification\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"userName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"emailAddress\": \"<string>\",\n  \"gender\": \"UNKNOWN\",\n  \"language\": \"<string>\",\n  \"additionalEmailAddresses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationAttributeType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"emailAddress\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ActivityChange\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"emailAddress\": \"<string>\"\n    }\n  ],\n  \"phoneNumbers\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"WorkflowInstance\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"type\": \"WORK\",\n      \"phoneNumber\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ExcelIngestionProperties\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"type\": \"PAGER\",\n      \"phoneNumber\": \"<string>\"\n    }\n  ],\n  \"instantMessagingAccounts\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DataQualityMetric\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"account\": \"<string>\",\n      \"type\": \"GTALK\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationLeg\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"account\": \"<string>\",\n      \"type\": \"JABBER\"\n    }\n  ],\n  \"websites\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Tag\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"url\": \"<string>\",\n      \"type\": \"MYSPACE\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"RelationType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"url\": \"<string>\",\n      \"type\": \"TWITTER\"\n    }\n  ],\n  \"addresses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"NumericAttributeType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"city\": \"<string>\",\n      \"street\": \"<string>\",\n      \"number\": \"<string>\",\n      \"state\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"type\": \"HOME\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"NumericAttributeType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"city\": \"<string>\",\n      \"street\": \"<string>\",\n      \"number\": \"<string>\",\n      \"state\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"type\": \"WORK\"\n    }\n  ],\n  \"activated\": \"<boolean>\",\n  \"enabled\": \"<boolean>\",\n  \"ldapUser\": \"<boolean>\",\n  \"userSource\": \"SSO\",\n  \"guestUser\": \"<boolean>\",\n  \"apiUser\": \"<boolean>\",\n  \"licenseType\": \"AUTHOR\"\n}"
								},
								{
									"name": "User with given ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId"
											],
											"variable": [
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Deletes the user with the given ID",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "<uuid>",
											"description": "(Required) the ID of the user to be deleted"
										}
									]
								},
								"description": "Deletes the user with the given ID"
							},
							"response": [
								{
									"name": "User successfully deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId"
											],
											"variable": [
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User with given ID not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId"
											],
											"variable": [
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Changes the user with the information that is present in the request",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"username\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"gender\": \"UNKNOWN\",\n  \"language\": \"<string>\",\n  \"licenseType\": \"CONSUMER\",\n  \"addresses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Scope\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"city\": \"<string>\",\n      \"street\": \"<string>\",\n      \"number\": \"<string>\",\n      \"state\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"type\": \"HOME\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Scope\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"city\": \"<string>\",\n      \"street\": \"<string>\",\n      \"number\": \"<string>\",\n      \"state\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"type\": \"WORK\"\n    }\n  ],\n  \"phones\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Attachment\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"type\": \"MOBILE\",\n      \"phoneNumber\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelation\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"type\": \"FAX\",\n      \"phoneNumber\": \"<string>\"\n    }\n  ],\n  \"additionalEmailAddresses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DiagramPictureSharingRule\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"emailAddress\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Role\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"emailAddress\": \"<string>\"\n    }\n  ],\n  \"instantMessagingAccounts\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DataQualityMetric\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"account\": \"<string>\",\n      \"type\": \"LIVE_MESSENGER\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ScriptAttribute\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"account\": \"<string>\",\n      \"type\": \"AOL\"\n    }\n  ],\n  \"websites\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Classification\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"url\": \"<string>\",\n      \"type\": \"LINKEDIN\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"JdbcDriverFile\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"url\": \"<string>\",\n      \"type\": \"WEBSITE\"\n    }\n  ],\n  \"passwordConfirmation\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "<uuid>",
											"description": "(Required) the ID of the user to be changed"
										}
									]
								},
								"description": "Only properties that are specified in this request and have non-<code>null</code> values are updated. All other properties are ignored."
							},
							"response": [
								{
									"name": "User successfully changed",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"username\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"gender\": \"UNKNOWN\",\n  \"language\": \"<string>\",\n  \"licenseType\": \"CONSUMER\",\n  \"addresses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Scope\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"city\": \"<string>\",\n      \"street\": \"<string>\",\n      \"number\": \"<string>\",\n      \"state\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"type\": \"HOME\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Scope\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"city\": \"<string>\",\n      \"street\": \"<string>\",\n      \"number\": \"<string>\",\n      \"state\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"type\": \"WORK\"\n    }\n  ],\n  \"phones\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Attachment\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"type\": \"MOBILE\",\n      \"phoneNumber\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelation\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"type\": \"FAX\",\n      \"phoneNumber\": \"<string>\"\n    }\n  ],\n  \"additionalEmailAddresses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DiagramPictureSharingRule\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"emailAddress\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Role\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"emailAddress\": \"<string>\"\n    }\n  ],\n  \"instantMessagingAccounts\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DataQualityMetric\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"account\": \"<string>\",\n      \"type\": \"LIVE_MESSENGER\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ScriptAttribute\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"account\": \"<string>\",\n      \"type\": \"AOL\"\n    }\n  ],\n  \"websites\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Classification\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"url\": \"<string>\",\n      \"type\": \"LINKEDIN\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"JdbcDriverFile\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"url\": \"<string>\",\n      \"type\": \"WEBSITE\"\n    }\n  ],\n  \"passwordConfirmation\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId"
											],
											"variable": [
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Notification\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"userName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"emailAddress\": \"<string>\",\n  \"gender\": \"UNKNOWN\",\n  \"language\": \"<string>\",\n  \"additionalEmailAddresses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationAttributeType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"emailAddress\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ActivityChange\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"emailAddress\": \"<string>\"\n    }\n  ],\n  \"phoneNumbers\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"WorkflowInstance\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"type\": \"WORK\",\n      \"phoneNumber\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ExcelIngestionProperties\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"type\": \"PAGER\",\n      \"phoneNumber\": \"<string>\"\n    }\n  ],\n  \"instantMessagingAccounts\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DataQualityMetric\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"account\": \"<string>\",\n      \"type\": \"GTALK\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationLeg\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"account\": \"<string>\",\n      \"type\": \"JABBER\"\n    }\n  ],\n  \"websites\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Tag\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"url\": \"<string>\",\n      \"type\": \"MYSPACE\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"RelationType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"url\": \"<string>\",\n      \"type\": \"TWITTER\"\n    }\n  ],\n  \"addresses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"NumericAttributeType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"city\": \"<string>\",\n      \"street\": \"<string>\",\n      \"number\": \"<string>\",\n      \"state\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"type\": \"HOME\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"NumericAttributeType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"city\": \"<string>\",\n      \"street\": \"<string>\",\n      \"number\": \"<string>\",\n      \"state\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"type\": \"WORK\"\n    }\n  ],\n  \"activated\": \"<boolean>\",\n  \"enabled\": \"<boolean>\",\n  \"ldapUser\": \"<boolean>\",\n  \"userSource\": \"SSO\",\n  \"guestUser\": \"<boolean>\",\n  \"apiUser\": \"<boolean>\",\n  \"licenseType\": \"AUTHOR\"\n}"
								},
								{
									"name": "User with given ID not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": \"<boolean>\",\n  \"username\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"gender\": \"UNKNOWN\",\n  \"language\": \"<string>\",\n  \"licenseType\": \"CONSUMER\",\n  \"addresses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Scope\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"city\": \"<string>\",\n      \"street\": \"<string>\",\n      \"number\": \"<string>\",\n      \"state\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"type\": \"HOME\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Scope\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"city\": \"<string>\",\n      \"street\": \"<string>\",\n      \"number\": \"<string>\",\n      \"state\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"type\": \"WORK\"\n    }\n  ],\n  \"phones\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Attachment\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"type\": \"MOBILE\",\n      \"phoneNumber\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelation\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"type\": \"FAX\",\n      \"phoneNumber\": \"<string>\"\n    }\n  ],\n  \"additionalEmailAddresses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DiagramPictureSharingRule\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"emailAddress\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Role\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"emailAddress\": \"<string>\"\n    }\n  ],\n  \"instantMessagingAccounts\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DataQualityMetric\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"account\": \"<string>\",\n      \"type\": \"LIVE_MESSENGER\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ScriptAttribute\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"account\": \"<string>\",\n      \"type\": \"AOL\"\n    }\n  ],\n  \"websites\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Classification\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"url\": \"<string>\",\n      \"type\": \"LINKEDIN\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"JdbcDriverFile\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"url\": \"<string>\",\n      \"type\": \"WEBSITE\"\n    }\n  ],\n  \"passwordConfirmation\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId"
											],
											"variable": [
												{
													"key": "userId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "bulk",
					"item": [
						{
							"name": "Adds multiple new users",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"emailAddress\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"gender\": \"MALE\",\n    \"language\": \"<string>\",\n    \"userGroupIds\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ],\n    \"licenseType\": \"AUTHOR\",\n    \"addresses\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Attachment\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"city\": \"<string>\",\n        \"street\": \"<string>\",\n        \"number\": \"<string>\",\n        \"state\": \"<string>\",\n        \"country\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"type\": \"HOME\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"JdbcDriver\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"city\": \"<string>\",\n        \"street\": \"<string>\",\n        \"number\": \"<string>\",\n        \"state\": \"<string>\",\n        \"country\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"type\": \"HOME\"\n      }\n    ],\n    \"phones\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"MultiValueListAttributeType\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"type\": \"PRIVATE\",\n        \"phoneNumber\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"CsvIngestionProperties\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"type\": \"OTHER\",\n        \"phoneNumber\": \"<string>\"\n      }\n    ],\n    \"additionalEmailAddresses\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Email\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"emailAddress\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"MultiValueListAttributeType\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"emailAddress\": \"<string>\"\n      }\n    ],\n    \"instantMessagingAccounts\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"View\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"account\": \"<string>\",\n        \"type\": \"YAHOO_MESSENGER\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Job\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"account\": \"<string>\",\n        \"type\": \"SKYPE\"\n      }\n    ],\n    \"websites\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ComplexRelation\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"url\": \"<string>\",\n        \"type\": \"FACEBOOK\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"PhysicalDataConnector\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"url\": \"<string>\",\n        \"type\": \"TWITTER\"\n      }\n    ]\n  },\n  {\n    \"emailAddress\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"gender\": \"MALE\",\n    \"language\": \"<string>\",\n    \"userGroupIds\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ],\n    \"licenseType\": \"AUTHOR\",\n    \"addresses\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ExcelIngestionProperties\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"city\": \"<string>\",\n        \"street\": \"<string>\",\n        \"number\": \"<string>\",\n        \"state\": \"<string>\",\n        \"country\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"type\": \"HOME\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"StringAttribute\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"city\": \"<string>\",\n        \"street\": \"<string>\",\n        \"number\": \"<string>\",\n        \"state\": \"<string>\",\n        \"country\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"type\": \"HOME\"\n      }\n    ],\n    \"phones\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Community\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"type\": \"FAX\",\n        \"phoneNumber\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ExcelIngestionProperties\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"type\": \"MOBILE\",\n        \"phoneNumber\": \"<string>\"\n      }\n    ],\n    \"additionalEmailAddresses\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"MultiValueListAttributeType\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"emailAddress\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"MultiValueListAttribute\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"emailAddress\": \"<string>\"\n      }\n    ],\n    \"instantMessagingAccounts\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"User\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"account\": \"<string>\",\n        \"type\": \"SKYPE\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"MultiValueListAttributeType\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"account\": \"<string>\",\n        \"type\": \"SKYPE\"\n      }\n    ],\n    \"websites\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"FormProperty\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"url\": \"<string>\",\n        \"type\": \"LINKEDIN\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Domain\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"url\": \"<string>\",\n        \"type\": \"FACEBOOK\"\n      }\n    ]\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"bulk"
									]
								},
								"description": "Adds multiple new users. The username can contain only unicode printable characters and cannot contain leading and trailing spaces."
							},
							"response": [
								{
									"name": "Users successfully added.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"emailAddress\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"gender\": \"MALE\",\n    \"language\": \"<string>\",\n    \"userGroupIds\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ],\n    \"licenseType\": \"AUTHOR\",\n    \"addresses\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Attachment\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"city\": \"<string>\",\n        \"street\": \"<string>\",\n        \"number\": \"<string>\",\n        \"state\": \"<string>\",\n        \"country\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"type\": \"HOME\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"JdbcDriver\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"city\": \"<string>\",\n        \"street\": \"<string>\",\n        \"number\": \"<string>\",\n        \"state\": \"<string>\",\n        \"country\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"type\": \"HOME\"\n      }\n    ],\n    \"phones\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"MultiValueListAttributeType\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"type\": \"PRIVATE\",\n        \"phoneNumber\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"CsvIngestionProperties\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"type\": \"OTHER\",\n        \"phoneNumber\": \"<string>\"\n      }\n    ],\n    \"additionalEmailAddresses\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Email\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"emailAddress\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"MultiValueListAttributeType\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"emailAddress\": \"<string>\"\n      }\n    ],\n    \"instantMessagingAccounts\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"View\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"account\": \"<string>\",\n        \"type\": \"YAHOO_MESSENGER\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Job\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"account\": \"<string>\",\n        \"type\": \"SKYPE\"\n      }\n    ],\n    \"websites\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ComplexRelation\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"url\": \"<string>\",\n        \"type\": \"FACEBOOK\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"PhysicalDataConnector\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"url\": \"<string>\",\n        \"type\": \"TWITTER\"\n      }\n    ]\n  },\n  {\n    \"emailAddress\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"gender\": \"MALE\",\n    \"language\": \"<string>\",\n    \"userGroupIds\": [\n      \"<uuid>\",\n      \"<uuid>\"\n    ],\n    \"licenseType\": \"AUTHOR\",\n    \"addresses\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ExcelIngestionProperties\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"city\": \"<string>\",\n        \"street\": \"<string>\",\n        \"number\": \"<string>\",\n        \"state\": \"<string>\",\n        \"country\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"type\": \"HOME\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"StringAttribute\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"city\": \"<string>\",\n        \"street\": \"<string>\",\n        \"number\": \"<string>\",\n        \"state\": \"<string>\",\n        \"country\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"type\": \"HOME\"\n      }\n    ],\n    \"phones\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Community\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"type\": \"FAX\",\n        \"phoneNumber\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ExcelIngestionProperties\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"type\": \"MOBILE\",\n        \"phoneNumber\": \"<string>\"\n      }\n    ],\n    \"additionalEmailAddresses\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"MultiValueListAttributeType\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"emailAddress\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"MultiValueListAttribute\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"emailAddress\": \"<string>\"\n      }\n    ],\n    \"instantMessagingAccounts\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"User\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"account\": \"<string>\",\n        \"type\": \"SKYPE\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"MultiValueListAttributeType\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"account\": \"<string>\",\n        \"type\": \"SKYPE\"\n      }\n    ],\n    \"websites\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"FormProperty\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"url\": \"<string>\",\n        \"type\": \"LINKEDIN\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Domain\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"url\": \"<string>\",\n        \"type\": \"FACEBOOK\"\n      }\n    ]\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"bulk"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"CsvIngestionProperties\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"userName\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"emailAddress\": \"<string>\",\n    \"gender\": \"MALE\",\n    \"language\": \"<string>\",\n    \"additionalEmailAddresses\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"DataQualityMetric\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"emailAddress\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"JdbcIngestionProperties\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"emailAddress\": \"<string>\"\n      }\n    ],\n    \"phoneNumbers\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Activity\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"type\": \"PAGER\",\n        \"phoneNumber\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ScriptAttributeType\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"type\": \"FAX\",\n        \"phoneNumber\": \"<string>\"\n      }\n    ],\n    \"instantMessagingAccounts\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"AdvancedDataType\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"account\": \"<string>\",\n        \"type\": \"ICQ\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"DiagramPicture\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"account\": \"<string>\",\n        \"type\": \"LIVE_MESSENGER\"\n      }\n    ],\n    \"websites\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ExcelIngestionProperties\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"url\": \"<string>\",\n        \"type\": \"LINKEDIN\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"AdvancedDataType\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"url\": \"<string>\",\n        \"type\": \"FACEBOOK\"\n      }\n    ],\n    \"addresses\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Asset\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"city\": \"<string>\",\n        \"street\": \"<string>\",\n        \"number\": \"<string>\",\n        \"state\": \"<string>\",\n        \"country\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"type\": \"HOME\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Classification\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"city\": \"<string>\",\n        \"street\": \"<string>\",\n        \"number\": \"<string>\",\n        \"state\": \"<string>\",\n        \"country\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"type\": \"WORK\"\n      }\n    ],\n    \"activated\": \"<boolean>\",\n    \"enabled\": \"<boolean>\",\n    \"ldapUser\": \"<boolean>\",\n    \"userSource\": \"INTERNAL\",\n    \"guestUser\": \"<boolean>\",\n    \"apiUser\": \"<boolean>\",\n    \"licenseType\": \"AUTHOR\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"MultiValueListAttributeType\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"userName\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"emailAddress\": \"<string>\",\n    \"gender\": \"MALE\",\n    \"language\": \"<string>\",\n    \"additionalEmailAddresses\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Scope\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"emailAddress\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"CsvIngestionProperties\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"emailAddress\": \"<string>\"\n      }\n    ],\n    \"phoneNumbers\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"DiagramPictureAssignmentRule\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"type\": \"MOBILE\",\n        \"phoneNumber\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Assignment\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"type\": \"OTHER\",\n        \"phoneNumber\": \"<string>\"\n      }\n    ],\n    \"instantMessagingAccounts\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"WorkflowInstance\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"account\": \"<string>\",\n        \"type\": \"ICQ\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ScriptAttribute\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"account\": \"<string>\",\n        \"type\": \"AOL\"\n      }\n    ],\n    \"websites\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"AdvancedDataType\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"url\": \"<string>\",\n        \"type\": \"FACEBOOK\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"AssignedCharacteristicType\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"url\": \"<string>\",\n        \"type\": \"TWITTER\"\n      }\n    ],\n    \"addresses\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"CsvIngestionProperties\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"city\": \"<string>\",\n        \"street\": \"<string>\",\n        \"number\": \"<string>\",\n        \"state\": \"<string>\",\n        \"country\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"type\": \"WORK\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"StringAttributeType\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"city\": \"<string>\",\n        \"street\": \"<string>\",\n        \"number\": \"<string>\",\n        \"state\": \"<string>\",\n        \"country\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"type\": \"WORK\"\n      }\n    ],\n    \"activated\": \"<boolean>\",\n    \"enabled\": \"<boolean>\",\n    \"ldapUser\": \"<boolean>\",\n    \"userSource\": \"INTERNAL\",\n    \"guestUser\": \"<boolean>\",\n    \"apiUser\": \"<boolean>\",\n    \"licenseType\": \"CONSUMER\"\n  }\n]"
								}
							]
						}
					]
				},
				{
					"name": "current",
					"item": [
						{
							"name": "globalPermissions",
							"item": [
								{
									"name": "Returns the current user global permissions, if logged in",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/current/globalPermissions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"current",
												"globalPermissions"
											]
										},
										"description": "If the user is not logged in, global permissions of the Guest user are returned"
									},
									"response": [
										{
											"name": "User permissions",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/current/globalPermissions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"current",
														"globalPermissions"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"globalPermissions\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "permissions",
							"item": [
								{
									"name": "Returns the current user global permissions in, if logged in. DEPRECATED: use /current/globalPermissions instead",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/current/permissions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"current",
												"permissions"
											]
										},
										"description": "If the user is not logged in, global permissions of the Guest user are returned"
									},
									"response": [
										{
											"name": "User permissions",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/current/permissions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"current",
														"permissions"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"globalPermissions\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Returns the current user, if logged in",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/current",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"current"
									]
								},
								"description": "If the user is not logged in, <code>null</code> is returned"
							},
							"response": [
								{
									"name": "User succesfully retrieved",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/current",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"current"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Notification\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"userName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"emailAddress\": \"<string>\",\n  \"gender\": \"UNKNOWN\",\n  \"language\": \"<string>\",\n  \"additionalEmailAddresses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationAttributeType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"emailAddress\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ActivityChange\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"emailAddress\": \"<string>\"\n    }\n  ],\n  \"phoneNumbers\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"WorkflowInstance\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"type\": \"WORK\",\n      \"phoneNumber\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ExcelIngestionProperties\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"type\": \"PAGER\",\n      \"phoneNumber\": \"<string>\"\n    }\n  ],\n  \"instantMessagingAccounts\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DataQualityMetric\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"account\": \"<string>\",\n      \"type\": \"GTALK\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationLeg\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"account\": \"<string>\",\n      \"type\": \"JABBER\"\n    }\n  ],\n  \"websites\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Tag\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"url\": \"<string>\",\n      \"type\": \"MYSPACE\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"RelationType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"url\": \"<string>\",\n      \"type\": \"TWITTER\"\n    }\n  ],\n  \"addresses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"NumericAttributeType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"city\": \"<string>\",\n      \"street\": \"<string>\",\n      \"number\": \"<string>\",\n      \"state\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"type\": \"HOME\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"NumericAttributeType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"city\": \"<string>\",\n      \"street\": \"<string>\",\n      \"number\": \"<string>\",\n      \"state\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"type\": \"WORK\"\n    }\n  ],\n  \"activated\": \"<boolean>\",\n  \"enabled\": \"<boolean>\",\n  \"ldapUser\": \"<boolean>\",\n  \"userSource\": \"SSO\",\n  \"guestUser\": \"<boolean>\",\n  \"apiUser\": \"<boolean>\",\n  \"licenseType\": \"AUTHOR\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "email",
					"item": [
						{
							"name": "{emailAddress}",
							"item": [
								{
									"name": "Gets the user identified by given e-mail address",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/email/:emailAddress",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"email",
												":emailAddress"
											],
											"variable": [
												{
													"key": "emailAddress",
													"value": "<string>",
													"description": "(Required) The e-mail address of the user"
												}
											]
										},
										"description": "Gets the user identified by given e-mail address. This endpoint will be removed in the future. Plese use GET /users with parameters instead."
									},
									"response": [
										{
											"name": "User successfully retrieved",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/email/:emailAddress",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"email",
														":emailAddress"
													],
													"variable": [
														{
															"key": "emailAddress"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Notification\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"userName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"emailAddress\": \"<string>\",\n  \"gender\": \"UNKNOWN\",\n  \"language\": \"<string>\",\n  \"additionalEmailAddresses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationAttributeType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"emailAddress\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ActivityChange\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"emailAddress\": \"<string>\"\n    }\n  ],\n  \"phoneNumbers\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"WorkflowInstance\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"type\": \"WORK\",\n      \"phoneNumber\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ExcelIngestionProperties\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"type\": \"PAGER\",\n      \"phoneNumber\": \"<string>\"\n    }\n  ],\n  \"instantMessagingAccounts\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DataQualityMetric\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"account\": \"<string>\",\n      \"type\": \"GTALK\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationLeg\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"account\": \"<string>\",\n      \"type\": \"JABBER\"\n    }\n  ],\n  \"websites\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Tag\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"url\": \"<string>\",\n      \"type\": \"MYSPACE\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"RelationType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"url\": \"<string>\",\n      \"type\": \"TWITTER\"\n    }\n  ],\n  \"addresses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"NumericAttributeType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"city\": \"<string>\",\n      \"street\": \"<string>\",\n      \"number\": \"<string>\",\n      \"state\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"type\": \"HOME\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"NumericAttributeType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"city\": \"<string>\",\n      \"street\": \"<string>\",\n      \"number\": \"<string>\",\n      \"state\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"type\": \"WORK\"\n    }\n  ],\n  \"activated\": \"<boolean>\",\n  \"enabled\": \"<boolean>\",\n  \"ldapUser\": \"<boolean>\",\n  \"userSource\": \"SSO\",\n  \"guestUser\": \"<boolean>\",\n  \"apiUser\": \"<boolean>\",\n  \"licenseType\": \"AUTHOR\"\n}"
										},
										{
											"name": "User with given e-mail not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/email/:emailAddress",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"email",
														":emailAddress"
													],
													"variable": [
														{
															"key": "emailAddress"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Returns users matching the given search criteria",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users?offset=0&limit=0&countLimit=-1&userId=<string>&userId=<string>&name=<string>&nameSearchFields=EMAIL&nameSearchFields=FIRSTNAME_LASTNAME&groupId=<uuid>&onlyLoggedIn=<boolean>&includeDisabled=<boolean>&sortOrder=ASC&sortField=USERNAME",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
								},
								{
									"key": "limit",
									"value": "0",
									"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
								},
								{
									"key": "countLimit",
									"value": "-1",
									"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
								},
								{
									"key": "userId",
									"value": "<string>",
									"description": "The list of user IDs to look for. The query parameter must be passed for each user ID."
								},
								{
									"key": "userId",
									"value": "<string>",
									"description": "The list of user IDs to look for. The query parameter must be passed for each user ID."
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "The name of the user. The search will take place in the fields specified by the 'nameSearchFields' parameter."
								},
								{
									"key": "nameSearchFields",
									"value": "EMAIL",
									"description": "The user fields that will be searched for occurrences of the 'name' parameter. It defaults to USERNAME, FIRSTNAME, LASTNAME, FIRSTNAME_LASTNAME and LASTNAME_FIRSTNAME."
								},
								{
									"key": "nameSearchFields",
									"value": "FIRSTNAME_LASTNAME",
									"description": "The user fields that will be searched for occurrences of the 'name' parameter. It defaults to USERNAME, FIRSTNAME, LASTNAME, FIRSTNAME_LASTNAME and LASTNAME_FIRSTNAME."
								},
								{
									"key": "groupId",
									"value": "<uuid>",
									"description": "The ID of the group the searched users should belong to."
								},
								{
									"key": "onlyLoggedIn",
									"value": "<boolean>",
									"description": "Whether only currently logged in users should be returned."
								},
								{
									"key": "includeDisabled",
									"value": "<boolean>",
									"description": "Whether disabled users should be included in the search results."
								},
								{
									"key": "sortOrder",
									"value": "ASC",
									"description": "The order of sorting."
								},
								{
									"key": "sortField",
									"value": "USERNAME",
									"description": "The field for sorting."
								}
							]
						},
						"description": "Only parameters that are specified in this request and have not <code>null</code> values are used for filtering. All other parameters are ignored.<p>The returned users satisfy all constraints that are specified in this search criteria.</p><p>By default a result containing 1000 users is returned.</p>"
					},
					"response": [
						{
							"name": "Users successfully retrieved",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users?offset=0&limit=0&countLimit=-1&userId=<string>&name=<string>&nameSearchFields=FIRSTNAME_LASTNAME&groupId=<uuid>&onlyLoggedIn=<boolean>&includeDisabled=<boolean>&sortOrder=ASC&sortField=USERNAME",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
										},
										{
											"key": "userId",
											"value": "<string>",
											"description": "The list of user IDs to look for. The query parameter must be passed for each user ID."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "The name of the user. The search will take place in the fields specified by the 'nameSearchFields' parameter."
										},
										{
											"key": "nameSearchFields",
											"value": "FIRSTNAME_LASTNAME",
											"description": "The user fields that will be searched for occurrences of the 'name' parameter. It defaults to USERNAME, FIRSTNAME, LASTNAME, FIRSTNAME_LASTNAME and LASTNAME_FIRSTNAME."
										},
										{
											"key": "groupId",
											"value": "<uuid>",
											"description": "The ID of the group the searched users should belong to."
										},
										{
											"key": "onlyLoggedIn",
											"value": "<boolean>",
											"description": "Whether only currently logged in users should be returned."
										},
										{
											"key": "includeDisabled",
											"value": "<boolean>",
											"description": "Whether disabled users should be included in the search results."
										},
										{
											"key": "sortOrder",
											"value": "ASC",
											"description": "The order of sorting."
										},
										{
											"key": "sortField",
											"value": "USERNAME",
											"description": "The field for sorting."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": \"<long>\",\n  \"offset\": \"<long>\",\n  \"limit\": \"<long>\",\n  \"results\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelation\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"userName\": \"<string>\",\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"emailAddress\": \"<string>\",\n      \"gender\": \"UNKNOWN\",\n      \"language\": \"<string>\",\n      \"additionalEmailAddresses\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ConnectionStringParameter\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"emailAddress\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"InstantMessagingAccount\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"emailAddress\": \"<string>\"\n        }\n      ],\n      \"phoneNumbers\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"BooleanAttribute\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"type\": \"OTHER\",\n          \"phoneNumber\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"StringAttribute\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"type\": \"WORK\",\n          \"phoneNumber\": \"<string>\"\n        }\n      ],\n      \"instantMessagingAccounts\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"DiagramPictureSharingRule\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"account\": \"<string>\",\n          \"type\": \"ICQ\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"BooleanAttributeType\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"account\": \"<string>\",\n          \"type\": \"AOL\"\n        }\n      ],\n      \"websites\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"User\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"url\": \"<string>\",\n          \"type\": \"WEBSITE\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"BooleanAttribute\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"url\": \"<string>\",\n          \"type\": \"TWITTER\"\n        }\n      ],\n      \"addresses\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ComplexRelation\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"city\": \"<string>\",\n          \"street\": \"<string>\",\n          \"number\": \"<string>\",\n          \"state\": \"<string>\",\n          \"country\": \"<string>\",\n          \"postalCode\": \"<string>\",\n          \"type\": \"HOME\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"JdbcDriver\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"city\": \"<string>\",\n          \"street\": \"<string>\",\n          \"number\": \"<string>\",\n          \"state\": \"<string>\",\n          \"country\": \"<string>\",\n          \"postalCode\": \"<string>\",\n          \"type\": \"HOME\"\n        }\n      ],\n      \"activated\": \"<boolean>\",\n      \"enabled\": \"<boolean>\",\n      \"ldapUser\": \"<boolean>\",\n      \"userSource\": \"LDAP\",\n      \"guestUser\": \"<boolean>\",\n      \"apiUser\": \"<boolean>\",\n      \"licenseType\": \"AUTHOR\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Scope\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"userName\": \"<string>\",\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"emailAddress\": \"<string>\",\n      \"gender\": \"FEMALE\",\n      \"language\": \"<string>\",\n      \"additionalEmailAddresses\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ScriptAttributeType\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"emailAddress\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ViewSharingRule\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"emailAddress\": \"<string>\"\n        }\n      ],\n      \"phoneNumbers\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Attachment\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"type\": \"OTHER\",\n          \"phoneNumber\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Asset\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"type\": \"PAGER\",\n          \"phoneNumber\": \"<string>\"\n        }\n      ],\n      \"instantMessagingAccounts\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"DiagramPictureSharingRule\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"account\": \"<string>\",\n          \"type\": \"GTALK\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"RelationType\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"account\": \"<string>\",\n          \"type\": \"AOL\"\n        }\n      ],\n      \"websites\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ViewSharingRule\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"url\": \"<string>\",\n          \"type\": \"WEBSITE\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Tag\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"url\": \"<string>\",\n          \"type\": \"LINKEDIN\"\n        }\n      ],\n      \"addresses\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Attachment\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"city\": \"<string>\",\n          \"street\": \"<string>\",\n          \"number\": \"<string>\",\n          \"state\": \"<string>\",\n          \"country\": \"<string>\",\n          \"postalCode\": \"<string>\",\n          \"type\": \"WORK\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Context\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"city\": \"<string>\",\n          \"street\": \"<string>\",\n          \"number\": \"<string>\",\n          \"state\": \"<string>\",\n          \"country\": \"<string>\",\n          \"postalCode\": \"<string>\",\n          \"type\": \"WORK\"\n        }\n      ],\n      \"activated\": \"<boolean>\",\n      \"enabled\": \"<boolean>\",\n      \"ldapUser\": \"<boolean>\",\n      \"userSource\": \"INTERNAL\",\n      \"guestUser\": \"<boolean>\",\n      \"apiUser\": \"<boolean>\",\n      \"licenseType\": \"CONSUMER\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Adds a new user",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"emailAddress\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"gender\": \"UNKNOWN\",\n  \"language\": \"<string>\",\n  \"userGroupIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"licenseType\": \"CONSUMER\",\n  \"addresses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DiagramPictureSharingRule\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"city\": \"<string>\",\n      \"street\": \"<string>\",\n      \"number\": \"<string>\",\n      \"state\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"type\": \"WORK\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"StringAttributeType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"city\": \"<string>\",\n      \"street\": \"<string>\",\n      \"number\": \"<string>\",\n      \"state\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"type\": \"HOME\"\n    }\n  ],\n  \"phones\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Activity\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"type\": \"MOBILE\",\n      \"phoneNumber\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationLegType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"type\": \"MOBILE\",\n      \"phoneNumber\": \"<string>\"\n    }\n  ],\n  \"additionalEmailAddresses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"MultiValueListAttribute\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"emailAddress\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationLeg\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"emailAddress\": \"<string>\"\n    }\n  ],\n  \"instantMessagingAccounts\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Job\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"account\": \"<string>\",\n      \"type\": \"LIVE_MESSENGER\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"NumericAttribute\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"account\": \"<string>\",\n      \"type\": \"JABBER\"\n    }\n  ],\n  \"websites\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Rating\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"url\": \"<string>\",\n      \"type\": \"WEBSITE\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Attachment\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"url\": \"<string>\",\n      \"type\": \"WEBSITE\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						},
						"description": "Adds a new user. The username can contain only unicode printable characters and cannot contain leading and trailing spaces."
					},
					"response": [
						{
							"name": "User successfully added.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"emailAddress\": \"<string>\",\n  \"userName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"gender\": \"UNKNOWN\",\n  \"language\": \"<string>\",\n  \"userGroupIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"licenseType\": \"CONSUMER\",\n  \"addresses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DiagramPictureSharingRule\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"city\": \"<string>\",\n      \"street\": \"<string>\",\n      \"number\": \"<string>\",\n      \"state\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"type\": \"WORK\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"StringAttributeType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"city\": \"<string>\",\n      \"street\": \"<string>\",\n      \"number\": \"<string>\",\n      \"state\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"type\": \"HOME\"\n    }\n  ],\n  \"phones\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Activity\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"type\": \"MOBILE\",\n      \"phoneNumber\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationLegType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"type\": \"MOBILE\",\n      \"phoneNumber\": \"<string>\"\n    }\n  ],\n  \"additionalEmailAddresses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"MultiValueListAttribute\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"emailAddress\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationLeg\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"emailAddress\": \"<string>\"\n    }\n  ],\n  \"instantMessagingAccounts\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Job\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"account\": \"<string>\",\n      \"type\": \"LIVE_MESSENGER\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"NumericAttribute\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"account\": \"<string>\",\n      \"type\": \"JABBER\"\n    }\n  ],\n  \"websites\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Rating\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"url\": \"<string>\",\n      \"type\": \"WEBSITE\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Attachment\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"url\": \"<string>\",\n      \"type\": \"WEBSITE\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Notification\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"userName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"emailAddress\": \"<string>\",\n  \"gender\": \"UNKNOWN\",\n  \"language\": \"<string>\",\n  \"additionalEmailAddresses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationAttributeType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"emailAddress\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ActivityChange\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"emailAddress\": \"<string>\"\n    }\n  ],\n  \"phoneNumbers\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"WorkflowInstance\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"type\": \"WORK\",\n      \"phoneNumber\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ExcelIngestionProperties\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"type\": \"PAGER\",\n      \"phoneNumber\": \"<string>\"\n    }\n  ],\n  \"instantMessagingAccounts\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DataQualityMetric\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"account\": \"<string>\",\n      \"type\": \"GTALK\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationLeg\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"account\": \"<string>\",\n      \"type\": \"JABBER\"\n    }\n  ],\n  \"websites\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Tag\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"url\": \"<string>\",\n      \"type\": \"MYSPACE\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"RelationType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"url\": \"<string>\",\n      \"type\": \"TWITTER\"\n    }\n  ],\n  \"addresses\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"NumericAttributeType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"city\": \"<string>\",\n      \"street\": \"<string>\",\n      \"number\": \"<string>\",\n      \"state\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"type\": \"HOME\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"NumericAttributeType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"city\": \"<string>\",\n      \"street\": \"<string>\",\n      \"number\": \"<string>\",\n      \"state\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postalCode\": \"<string>\",\n      \"type\": \"WORK\"\n    }\n  ],\n  \"activated\": \"<boolean>\",\n  \"enabled\": \"<boolean>\",\n  \"ldapUser\": \"<boolean>\",\n  \"userSource\": \"SSO\",\n  \"guestUser\": \"<boolean>\",\n  \"apiUser\": \"<boolean>\",\n  \"licenseType\": \"AUTHOR\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "userGroups",
			"item": [
				{
					"name": "{userGroupId}",
					"item": [
						{
							"name": "users",
							"item": [
								{
									"name": "Add users to user group",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"userGroupId\": \"<uuid>\",\n  \"userIds\": [\n    \"<uuid>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/userGroups/:userGroupId/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userGroups",
												":userGroupId",
												"users"
											],
											"variable": [
												{
													"key": "userGroupId",
													"value": "<uuid>",
													"description": "(Required) The ID of the user group"
												}
											]
										},
										"description": "Adds users to an existing user group."
									},
									"response": [
										{
											"name": "Users successfully added to user group.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userGroupId\": \"<uuid>\",\n  \"userIds\": [\n    \"<uuid>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/userGroups/:userGroupId/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"userGroups",
														":userGroupId",
														"users"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"CsvIngestionProperties\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"userName\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"emailAddress\": \"<string>\",\n    \"gender\": \"MALE\",\n    \"language\": \"<string>\",\n    \"additionalEmailAddresses\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"DataQualityMetric\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"emailAddress\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"JdbcIngestionProperties\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"emailAddress\": \"<string>\"\n      }\n    ],\n    \"phoneNumbers\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Activity\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"type\": \"PAGER\",\n        \"phoneNumber\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ScriptAttributeType\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"type\": \"FAX\",\n        \"phoneNumber\": \"<string>\"\n      }\n    ],\n    \"instantMessagingAccounts\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"AdvancedDataType\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"account\": \"<string>\",\n        \"type\": \"ICQ\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"DiagramPicture\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"account\": \"<string>\",\n        \"type\": \"LIVE_MESSENGER\"\n      }\n    ],\n    \"websites\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ExcelIngestionProperties\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"url\": \"<string>\",\n        \"type\": \"LINKEDIN\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"AdvancedDataType\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"url\": \"<string>\",\n        \"type\": \"FACEBOOK\"\n      }\n    ],\n    \"addresses\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Asset\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"city\": \"<string>\",\n        \"street\": \"<string>\",\n        \"number\": \"<string>\",\n        \"state\": \"<string>\",\n        \"country\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"type\": \"HOME\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Classification\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"city\": \"<string>\",\n        \"street\": \"<string>\",\n        \"number\": \"<string>\",\n        \"state\": \"<string>\",\n        \"country\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"type\": \"WORK\"\n      }\n    ],\n    \"activated\": \"<boolean>\",\n    \"enabled\": \"<boolean>\",\n    \"ldapUser\": \"<boolean>\",\n    \"userSource\": \"INTERNAL\",\n    \"guestUser\": \"<boolean>\",\n    \"apiUser\": \"<boolean>\",\n    \"licenseType\": \"AUTHOR\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"MultiValueListAttributeType\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"userName\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"emailAddress\": \"<string>\",\n    \"gender\": \"MALE\",\n    \"language\": \"<string>\",\n    \"additionalEmailAddresses\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Scope\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"emailAddress\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"CsvIngestionProperties\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"emailAddress\": \"<string>\"\n      }\n    ],\n    \"phoneNumbers\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"DiagramPictureAssignmentRule\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"type\": \"MOBILE\",\n        \"phoneNumber\": \"<string>\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Assignment\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"type\": \"OTHER\",\n        \"phoneNumber\": \"<string>\"\n      }\n    ],\n    \"instantMessagingAccounts\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"WorkflowInstance\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"account\": \"<string>\",\n        \"type\": \"ICQ\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ScriptAttribute\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"account\": \"<string>\",\n        \"type\": \"AOL\"\n      }\n    ],\n    \"websites\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"AdvancedDataType\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"url\": \"<string>\",\n        \"type\": \"FACEBOOK\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"AssignedCharacteristicType\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"url\": \"<string>\",\n        \"type\": \"TWITTER\"\n      }\n    ],\n    \"addresses\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"CsvIngestionProperties\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"city\": \"<string>\",\n        \"street\": \"<string>\",\n        \"number\": \"<string>\",\n        \"state\": \"<string>\",\n        \"country\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"type\": \"WORK\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"StringAttributeType\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"city\": \"<string>\",\n        \"street\": \"<string>\",\n        \"number\": \"<string>\",\n        \"state\": \"<string>\",\n        \"country\": \"<string>\",\n        \"postalCode\": \"<string>\",\n        \"type\": \"WORK\"\n      }\n    ],\n    \"activated\": \"<boolean>\",\n    \"enabled\": \"<boolean>\",\n    \"ldapUser\": \"<boolean>\",\n    \"userSource\": \"INTERNAL\",\n    \"guestUser\": \"<boolean>\",\n    \"apiUser\": \"<boolean>\",\n    \"licenseType\": \"CONSUMER\"\n  }\n]"
										},
										{
											"name": "User group not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userGroupId\": \"<uuid>\",\n  \"userIds\": [\n    \"<uuid>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/userGroups/:userGroupId/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"userGroups",
														":userGroupId",
														"users"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Remove users from user group",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"userGroupId\": \"<uuid>\",\n  \"userIds\": [\n    \"<uuid>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/userGroups/:userGroupId/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userGroups",
												":userGroupId",
												"users"
											],
											"variable": [
												{
													"key": "userGroupId",
													"value": "<uuid>",
													"description": "(Required) The ID of the user group"
												}
											]
										},
										"description": "Removes users from the user group with the given ID"
									},
									"response": [
										{
											"name": "Users removed from user group",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userGroupId\": \"<uuid>\",\n  \"userIds\": [\n    \"<uuid>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/userGroups/:userGroupId/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"userGroups",
														":userGroupId",
														"users"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User group not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userGroupId\": \"<uuid>\",\n  \"userIds\": [\n    \"<uuid>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/userGroups/:userGroupId/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"userGroups",
														":userGroupId",
														"users"
													],
													"variable": [
														{
															"key": "userGroupId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get user group",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userGroups/:userGroupId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userGroups",
										":userGroupId"
									],
									"variable": [
										{
											"key": "userGroupId",
											"value": "<uuid>",
											"description": "(Required) The ID of the user group"
										}
									]
								},
								"description": "Returns the user group with the given ID."
							},
							"response": [
								{
									"name": "User group found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userGroups/:userGroupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userGroups",
												":userGroupId"
											],
											"variable": [
												{
													"key": "userGroupId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"BaseDataType\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"locallyManaged\": \"<boolean>\"\n}"
								},
								{
									"name": "User group not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userGroups/:userGroupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userGroups",
												":userGroupId"
											],
											"variable": [
												{
													"key": "userGroupId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Remove user group",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/userGroups/:userGroupId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userGroups",
										":userGroupId"
									],
									"variable": [
										{
											"key": "userGroupId",
											"value": "<uuid>",
											"description": "(Required) The ID of the user group"
										}
									]
								},
								"description": "Removes the user group with the given ID"
							},
							"response": [
								{
									"name": "User group removed",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userGroups/:userGroupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userGroups",
												":userGroupId"
											],
											"variable": [
												{
													"key": "userGroupId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User group not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/userGroups/:userGroupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userGroups",
												":userGroupId"
											],
											"variable": [
												{
													"key": "userGroupId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Change user group",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"locallyManaged\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/userGroups/:userGroupId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userGroups",
										":userGroupId"
									],
									"variable": [
										{
											"key": "userGroupId",
											"value": "<uuid>",
											"description": "(Required) The ID of the user group"
										}
									]
								},
								"description": "Changes the user group with the information that is present in the request. Only properties that are specified in this request and have not <code>null</code> values are updated. All other properties are ignored."
							},
							"response": [
								{
									"name": "User group changed",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"locallyManaged\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/userGroups/:userGroupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userGroups",
												":userGroupId"
											],
											"variable": [
												{
													"key": "userGroupId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"BaseDataType\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"locallyManaged\": \"<boolean>\"\n}"
								},
								{
									"name": "User group not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"locallyManaged\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/userGroups/:userGroupId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"userGroups",
												":userGroupId"
											],
											"variable": [
												{
													"key": "userGroupId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Find user groups",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/userGroups?offset=0&limit=0&countLimit=-1&name=<string>&nameMatchMode=ANYWHERE&userId=<uuid>&includeEveryone=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"userGroups"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
								},
								{
									"key": "limit",
									"value": "0",
									"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
								},
								{
									"key": "countLimit",
									"value": "-1",
									"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "The name of the user group."
								},
								{
									"key": "nameMatchMode",
									"value": "ANYWHERE",
									"description": "The match mode used to compare <code>name</code>. If the match mode is <code>EXACT</code> the search is case-sensitive, otherwise the search is case-insensitive."
								},
								{
									"key": "userId",
									"value": "<uuid>",
									"description": "The ID of the user who should belong to searched user groups."
								},
								{
									"key": "includeEveryone",
									"value": "<boolean>",
									"description": "Indicates if we should include the everyone group or not."
								}
							]
						},
						"description": "Returns user groups matching the given search criteria. Only parameters that are specified in this request and have not <code>null</code> values are used for filtering. All other parameters are ignored. By default a result containing 1000 user groups is returned."
					},
					"response": [
						{
							"name": "Search completed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/userGroups?offset=0&limit=0&countLimit=-1&name=<string>&nameMatchMode=ANYWHERE&userId=<uuid>&includeEveryone=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userGroups"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "The name of the user group."
										},
										{
											"key": "nameMatchMode",
											"value": "ANYWHERE",
											"description": "The match mode used to compare <code>name</code>. If the match mode is <code>EXACT</code> the search is case-sensitive, otherwise the search is case-insensitive."
										},
										{
											"key": "userId",
											"value": "<uuid>",
											"description": "The ID of the user who should belong to searched user groups."
										},
										{
											"key": "includeEveryone",
											"value": "<boolean>",
											"description": "Indicates if we should include the everyone group or not."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": \"<long>\",\n  \"offset\": \"<long>\",\n  \"limit\": \"<long>\",\n  \"results\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"BooleanAttribute\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"locallyManaged\": \"<boolean>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"NumericAttributeType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"locallyManaged\": \"<boolean>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Add new user group",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"locallyManaged\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/userGroups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"userGroups"
							]
						},
						"description": "Adds a new user group."
					},
					"response": [
						{
							"name": "User group successfully added.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"locallyManaged\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/userGroups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"userGroups"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"BaseDataType\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"locallyManaged\": \"<boolean>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "validation",
			"item": [
				{
					"name": "{assetId}",
					"item": [
						{
							"name": "Validates a single asset.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/validation/:assetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"validation",
										":assetId"
									],
									"variable": [
										{
											"key": "assetId",
											"value": "<uuid>",
											"description": "(Required) the unique identifier of the asset to be validated"
										}
									]
								},
								"description": "Validates a single asset."
							},
							"response": [
								{
									"name": "The asset has been validated successfully.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/validation/:assetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"validation",
												":assetId"
											],
											"variable": [
												{
													"key": "assetId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"DiagramPicture\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"asset\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"PhysicalDataConnector\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"validationRule\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"MultiValueListAttribute\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"result\": \"<boolean>\",\n    \"message\": \"<string>\",\n    \"jobId\": \"<uuid>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"DiagramPicture\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"asset\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"InstantMessagingAccount\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"validationRule\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"AdvancedDataType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"result\": \"<boolean>\",\n    \"message\": \"<string>\",\n    \"jobId\": \"<uuid>\"\n  }\n]"
								}
							]
						}
					]
				},
				{
					"name": "bulk",
					"item": [
						{
							"name": "Validates multiple assets.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"assetIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"sendNotification\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/validation/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"validation",
										"bulk"
									]
								},
								"description": "Validates multiple assets."
							},
							"response": [
								{
									"name": "Validation Job successfully started.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"assetIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"sendNotification\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/validation/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"validation",
												"bulk"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Website\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"userId\": \"<uuid>\",\n  \"visibility\": \"<integer>\",\n  \"progressPercentage\": \"<double>\",\n  \"cancelable\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"state\": \"CANCELING\",\n  \"result\": \"NOT_SET\",\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Returns the validation results matching the given search criteria.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/validation?offset=0&limit=0&countLimit=-1&assetId=<uuid>&jobId=<uuid>&validationRuleId=<uuid>&mostRecentJob=<boolean>&mostRecentExecution=<boolean>&result=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"validation"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
								},
								{
									"key": "limit",
									"value": "0",
									"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
								},
								{
									"key": "countLimit",
									"value": "-1",
									"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
								},
								{
									"key": "assetId",
									"value": "<uuid>",
									"description": "The unique identifier of the asset for which we are searching validation results."
								},
								{
									"key": "jobId",
									"value": "<uuid>",
									"description": "The unique identifier of the job for which we are searching validation results."
								},
								{
									"key": "validationRuleId",
									"value": "<uuid>",
									"description": "The unique identifier of the validation rule for which we are searching validation results."
								},
								{
									"key": "mostRecentJob",
									"value": "<boolean>",
									"description": "Check the validationResults of only the most recent job according to the other criteria."
								},
								{
									"key": "mostRecentExecution",
									"value": "<boolean>",
									"description": "Check the validationResults of only the most recent execution (inside or outside a validation job) according to the other criteria."
								},
								{
									"key": "result",
									"value": "<boolean>",
									"description": "Filter on the result of validation results."
								}
							]
						},
						"description": "Returns the validation results matching the given search criteria. Only parameters that are specified in this request and have not <code>null</code> values are used for filtering. All other parameters are ignored. The returned validation results satisfy all constraints that are specified in this search criteria. By default a result containing at most 1000 validation results is returned. "
					},
					"response": [
						{
							"name": "The paged response with found ValidationResults.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/validation?offset=0&limit=0&countLimit=-1&assetId=<uuid>&jobId=<uuid>&validationRuleId=<uuid>&mostRecentJob=<boolean>&mostRecentExecution=<boolean>&result=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"validation"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
										},
										{
											"key": "assetId",
											"value": "<uuid>",
											"description": "The unique identifier of the asset for which we are searching validation results."
										},
										{
											"key": "jobId",
											"value": "<uuid>",
											"description": "The unique identifier of the job for which we are searching validation results."
										},
										{
											"key": "validationRuleId",
											"value": "<uuid>",
											"description": "The unique identifier of the validation rule for which we are searching validation results."
										},
										{
											"key": "mostRecentJob",
											"value": "<boolean>",
											"description": "Check the validationResults of only the most recent job according to the other criteria."
										},
										{
											"key": "mostRecentExecution",
											"value": "<boolean>",
											"description": "Check the validationResults of only the most recent execution (inside or outside a validation job) according to the other criteria."
										},
										{
											"key": "result",
											"value": "<boolean>",
											"description": "Filter on the result of validation results."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": \"<long>\",\n  \"offset\": \"<long>\",\n  \"limit\": \"<long>\",\n  \"results\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"WorkflowInstance\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"asset\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ConnectionStringParameter\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"validationRule\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"AttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"result\": \"<boolean>\",\n      \"message\": \"<string>\",\n      \"jobId\": \"<uuid>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"PhoneNumber\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"asset\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"AssetType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"validationRule\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Asset\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"result\": \"<boolean>\",\n      \"message\": \"<string>\",\n      \"jobId\": \"<uuid>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "viewPermissions",
			"item": [
				{
					"name": "{viewPermissionId}",
					"item": [
						{
							"name": "Retrieves a view permission.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/viewPermissions/:viewPermissionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"viewPermissions",
										":viewPermissionId"
									],
									"variable": [
										{
											"key": "viewPermissionId",
											"value": "<string>",
											"description": "(Required) Identifier of the view permission to retrieve."
										}
									]
								},
								"description": "Retrieves a view permission."
							},
							"response": [
								{
									"name": "default response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/viewPermissions/:viewPermissionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"viewPermissions",
												":viewPermissionId"
											],
											"variable": [
												{
													"key": "viewPermissionId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Tag\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"userId\": \"<uuid>\",\n  \"userGroupId\": \"<uuid>\",\n  \"baseResource\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Scope\",\n    \"resourceDiscriminator\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Removes a view permission.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/viewPermissions/:viewPermissionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"viewPermissions",
										":viewPermissionId"
									],
									"variable": [
										{
											"key": "viewPermissionId",
											"value": "<string>",
											"description": "(Required) Identifier of the view permission to remove."
										}
									]
								},
								"description": "Removes a view permission."
							},
							"response": [
								{
									"name": "default response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/viewPermissions/:viewPermissionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"viewPermissions",
												":viewPermissionId"
											],
											"variable": [
												{
													"key": "viewPermissionId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Finds view permissions with given criteria.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/viewPermissions?offset=0&limit=0&countLimit=-1&userId=<uuid>&userGroupId=<uuid>&resourceId=<uuid>&resourceType=RelationTrace&includeInherited=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"viewPermissions"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
								},
								{
									"key": "limit",
									"value": "0",
									"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
								},
								{
									"key": "countLimit",
									"value": "-1",
									"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
								},
								{
									"key": "userId",
									"value": "<uuid>",
									"description": "The ID of the user for whom the view permission applies."
								},
								{
									"key": "userGroupId",
									"value": "<uuid>",
									"description": "The ID of the user group for whose members the view permission applies."
								},
								{
									"key": "resourceId",
									"value": "<uuid>",
									"description": "The ID of the community or domain to which the view permissions apply."
								},
								{
									"key": "resourceType",
									"value": "RelationTrace",
									"description": "Deprecated. Use <code>Community</code> or <code>Domain</code> to only retrieve view permissions assigned directly on a community or domain respectively. Do not use this filter in conjunction with the <code>resourceId</code> parameter."
								},
								{
									"key": "includeInherited",
									"value": "<boolean>",
									"description": "When you provide a <code>resourceId</code>, setting this parameter to <code>true</code> also returns the view permissions inherited from a parent community."
								}
							]
						},
						"description": "Finds view permissions with given criteria."
					},
					"response": [
						{
							"name": "default response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/viewPermissions?offset=0&limit=0&countLimit=-1&userId=<uuid>&userGroupId=<uuid>&resourceId=<uuid>&resourceType=RelationTrace&includeInherited=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"viewPermissions"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
										},
										{
											"key": "userId",
											"value": "<uuid>",
											"description": "The ID of the user for whom the view permission applies."
										},
										{
											"key": "userGroupId",
											"value": "<uuid>",
											"description": "The ID of the user group for whose members the view permission applies."
										},
										{
											"key": "resourceId",
											"value": "<uuid>",
											"description": "The ID of the community or domain to which the view permissions apply."
										},
										{
											"key": "resourceType",
											"value": "RelationTrace",
											"description": "Deprecated. Use <code>Community</code> or <code>Domain</code> to only retrieve view permissions assigned directly on a community or domain respectively. Do not use this filter in conjunction with the <code>resourceId</code> parameter."
										},
										{
											"key": "includeInherited",
											"value": "<boolean>",
											"description": "When you provide a <code>resourceId</code>, setting this parameter to <code>true</code> also returns the view permissions inherited from a parent community."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": \"<long>\",\n  \"offset\": \"<long>\",\n  \"limit\": \"<long>\",\n  \"results\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"AssetType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"userId\": \"<uuid>\",\n      \"userGroupId\": \"<uuid>\",\n      \"baseResource\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Rating\",\n        \"resourceDiscriminator\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"AssetType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"userId\": \"<uuid>\",\n      \"userGroupId\": \"<uuid>\",\n      \"baseResource\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"AdvancedDataType\",\n        \"resourceDiscriminator\": \"<string>\"\n      }\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Adds a view permission. It can be applied only to 'Community' and 'Domain' resource types.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"baseResource\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"AttributeType\",\n    \"resourceDiscriminator\": \"<string>\"\n  },\n  \"userId\": \"<uuid>\",\n  \"userGroupId\": \"<uuid>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/viewPermissions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"viewPermissions"
							]
						},
						"description": "Adds a view permission. It can be applied only to 'Community' and 'Domain' resource types."
					},
					"response": [
						{
							"name": "View permission successfully added.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"baseResource\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"AttributeType\",\n    \"resourceDiscriminator\": \"<string>\"\n  },\n  \"userId\": \"<uuid>\",\n  \"userGroupId\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/viewPermissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"viewPermissions"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Tag\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"userId\": \"<uuid>\",\n  \"userGroupId\": \"<uuid>\",\n  \"baseResource\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Scope\",\n    \"resourceDiscriminator\": \"<string>\"\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "workflowDefinitions",
			"item": [
				{
					"name": "{workflowDefinitionId}",
					"item": [
						{
							"name": "assetTypeAssignmentRules",
							"item": [
								{
									"name": "{ruleId}",
									"item": [
										{
											"name": "Change asset type assignment rule.",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"assetTypeId\": \"<uuid>\",\n  \"domainId\": \"<uuid>\",\n  \"communityId\": \"<uuid>\",\n  \"statusId\": \"<uuid>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/workflowDefinitions/:workflowDefinitionId/assetTypeAssignmentRules/:ruleId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"workflowDefinitions",
														":workflowDefinitionId",
														"assetTypeAssignmentRules",
														":ruleId"
													],
													"variable": [
														{
															"key": "workflowDefinitionId",
															"value": "<uuid>",
															"description": "(Required) The ID of the workflow definition."
														},
														{
															"key": "ruleId",
															"value": "<uuid>",
															"description": "(Required) The ID of the assignment rule to be changed."
														}
													]
												},
												"description": "Modifies the asset type assignment rule with the specified ID of the workflow definition with the specified ID.<p>Only properties that are specified in this request and have not <code>null</code> values are updated.<p>All other properties are ignored."
											},
											"response": [
												{
													"name": "The asset type assignment rule has been successfully updated.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"assetTypeId\": \"<uuid>\",\n  \"domainId\": \"<uuid>\",\n  \"communityId\": \"<uuid>\",\n  \"statusId\": \"<uuid>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/workflowDefinitions/:workflowDefinitionId/assetTypeAssignmentRules/:ruleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"workflowDefinitions",
																":workflowDefinitionId",
																"assetTypeAssignmentRules",
																":ruleId"
															],
															"variable": [
																{
																	"key": "workflowDefinitionId"
																},
																{
																	"key": "ruleId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<uuid>\",\n  \"assetType\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"AssignedCharacteristicType\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"domain\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"ValidationRule\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"community\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"NumericAttributeType\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"status\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"ComplexRelationLeg\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Add asset type assignment rule.",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"assetTypeId\": \"<uuid>\",\n  \"domainId\": \"<uuid>\",\n  \"communityId\": \"<uuid>\",\n  \"statusId\": \"<uuid>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/workflowDefinitions/:workflowDefinitionId/assetTypeAssignmentRules",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"workflowDefinitions",
												":workflowDefinitionId",
												"assetTypeAssignmentRules"
											],
											"variable": [
												{
													"key": "workflowDefinitionId",
													"value": "<uuid>",
													"description": "(Required) The ID of the workflow definition."
												}
											]
										},
										"description": "Adds an asset type assignment rule to the workflow definition with the specified ID."
									},
									"response": [
										{
											"name": "Asset type assignment rule successfully added.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"assetTypeId\": \"<uuid>\",\n  \"domainId\": \"<uuid>\",\n  \"communityId\": \"<uuid>\",\n  \"statusId\": \"<uuid>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/workflowDefinitions/:workflowDefinitionId/assetTypeAssignmentRules",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"workflowDefinitions",
														":workflowDefinitionId",
														"assetTypeAssignmentRules"
													],
													"variable": [
														{
															"key": "workflowDefinitionId"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"assetType\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"AssignedCharacteristicType\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"domain\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"ValidationRule\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"community\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"NumericAttributeType\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"status\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"ComplexRelationLeg\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "domainTypeAssignmentRules",
							"item": [
								{
									"name": "{ruleId}",
									"item": [
										{
											"name": "Change domain type assignment rule.",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domainTypeId\": \"<uuid>\",\n  \"communityId\": \"<uuid>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/workflowDefinitions/:workflowDefinitionId/domainTypeAssignmentRules/:ruleId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"workflowDefinitions",
														":workflowDefinitionId",
														"domainTypeAssignmentRules",
														":ruleId"
													],
													"variable": [
														{
															"key": "workflowDefinitionId",
															"value": "<uuid>",
															"description": "(Required) The ID of the workflow definition."
														},
														{
															"key": "ruleId",
															"value": "<uuid>",
															"description": "(Required) The ID of the assignment rule to be changed."
														}
													]
												},
												"description": "Modifies the domain type assignment rule with the specified ID of the workflow definition with the specified ID.<p>Only properties that are specified in this request and have not <code>null</code> values are updated.<p>All other properties are ignored."
											},
											"response": [
												{
													"name": "The domain type assignment rule has been successfully updated.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"domainTypeId\": \"<uuid>\",\n  \"communityId\": \"<uuid>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/workflowDefinitions/:workflowDefinitionId/domainTypeAssignmentRules/:ruleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"workflowDefinitions",
																":workflowDefinitionId",
																"domainTypeAssignmentRules",
																":ruleId"
															],
															"variable": [
																{
																	"key": "workflowDefinitionId"
																},
																{
																	"key": "ruleId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<uuid>\",\n  \"assetType\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"AssignedCharacteristicType\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"domain\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"ValidationRule\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"community\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"NumericAttributeType\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"status\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"ComplexRelationLeg\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  }\n}"
												}
											]
										}
									]
								},
								{
									"name": "Add domain type assignment rule.",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"domainTypeId\": \"<uuid>\",\n  \"communityId\": \"<uuid>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/workflowDefinitions/:workflowDefinitionId/domainTypeAssignmentRules",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"workflowDefinitions",
												":workflowDefinitionId",
												"domainTypeAssignmentRules"
											],
											"variable": [
												{
													"key": "workflowDefinitionId",
													"value": "<uuid>",
													"description": "(Required) The ID of the workflow definition."
												}
											]
										},
										"description": "Adds a domain type assignment rule to the workflow definition with the specified ID."
									},
									"response": [
										{
											"name": "Domain type assignment rule successfully added.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domainTypeId\": \"<uuid>\",\n  \"communityId\": \"<uuid>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/workflowDefinitions/:workflowDefinitionId/domainTypeAssignmentRules",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"workflowDefinitions",
														":workflowDefinitionId",
														"domainTypeAssignmentRules"
													],
													"variable": [
														{
															"key": "workflowDefinitionId"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"assetType\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"AssignedCharacteristicType\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"domain\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"ValidationRule\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"community\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"NumericAttributeType\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  \"status\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"ComplexRelationLeg\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "diagram",
							"item": [
								{
									"name": "Get process diagram.",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/workflowDefinitions/:workflowDefinitionId/diagram",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"workflowDefinitions",
												":workflowDefinitionId",
												"diagram"
											],
											"variable": [
												{
													"key": "workflowDefinitionId",
													"value": "<uuid>",
													"description": "(Required) The ID of the workflow definition."
												}
											]
										},
										"description": "Returns the process diagram of the workflow definition with the specified ID. The diagram input stream returned can be null as deployed workflow definitions without graphical notation included do not have a diagram."
									},
									"response": [
										{
											"name": "The workflow definition diagram successfully found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/workflowDefinitions/:workflowDefinitionId/diagram",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"workflowDefinitions",
														":workflowDefinitionId",
														"diagram"
													],
													"variable": [
														{
															"key": "workflowDefinitionId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "No diagram has been found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/workflowDefinitions/:workflowDefinitionId/diagram",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"workflowDefinitions",
														":workflowDefinitionId",
														"diagram"
													],
													"variable": [
														{
															"key": "workflowDefinitionId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "xml",
							"item": [
								{
									"name": "Get XML of workflow definition.",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/xml"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/workflowDefinitions/:workflowDefinitionId/xml",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"workflowDefinitions",
												":workflowDefinitionId",
												"xml"
											],
											"variable": [
												{
													"key": "workflowDefinitionId",
													"value": "<uuid>",
													"description": "(Required) The ID of the workflow definition."
												}
											]
										},
										"description": "Returns the XML source of the workflow definition with the specified ID."
									},
									"response": [
										{
											"name": "The workflow definition XML successfully found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/xml"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/workflowDefinitions/:workflowDefinitionId/xml",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"workflowDefinitions",
														":workflowDefinitionId",
														"xml"
													],
													"variable": [
														{
															"key": "workflowDefinitionId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "xml",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/xml"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "assignmentRules",
							"item": [
								{
									"name": "{ruleId}",
									"item": [
										{
											"name": "Remove assignment rule.",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/workflowDefinitions/:workflowDefinitionId/assignmentRules/:ruleId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"workflowDefinitions",
														":workflowDefinitionId",
														"assignmentRules",
														":ruleId"
													],
													"variable": [
														{
															"key": "workflowDefinitionId",
															"value": "<uuid>",
															"description": "(Required) The ID of the workflow definition."
														},
														{
															"key": "ruleId",
															"value": "<uuid>",
															"description": "(Required) The ID of the assignment rule."
														}
													]
												},
												"description": "Removes the assignment rule with the specified ID from the workflow definition with the specified ID."
											},
											"response": [
												{
													"name": "Assignment rule has been removed.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/workflowDefinitions/:workflowDefinitionId/assignmentRules/:ruleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"workflowDefinitions",
																":workflowDefinitionId",
																"assignmentRules",
																":ruleId"
															],
															"variable": [
																{
																	"key": "workflowDefinitionId"
																},
																{
																	"key": "ruleId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "Get workflow definition.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/workflowDefinitions/:workflowDefinitionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflowDefinitions",
										":workflowDefinitionId"
									],
									"variable": [
										{
											"key": "workflowDefinitionId",
											"value": "<uuid>",
											"description": "(Required) The ID of the workflow definition."
										}
									]
								},
								"description": "Returns the workflow definition with the specified ID."
							},
							"response": [
								{
									"name": "The workflow definition successfully found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/workflowDefinitions/:workflowDefinitionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"workflowDefinitions",
												":workflowDefinitionId"
											],
											"variable": [
												{
													"key": "workflowDefinitionId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"WorkflowInstance\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"processId\": \"<string>\",\n  \"startLabel\": \"<string>\",\n  \"formRequired\": \"<boolean>\",\n  \"startFormKeyAvailable\": \"<boolean>\",\n  \"startFormJsonModelAvailable\": \"<boolean>\",\n  \"enabled\": \"<boolean>\",\n  \"domainAssignmentRules\": [\n    {\n      \"id\": \"<uuid>\",\n      \"assetType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ViewAssignmentRule\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"domain\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"DiagramPictureAssignmentRule\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"community\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"PhysicalDataConnector\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"status\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"JdbcDriverFile\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"assetType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ComplexRelationAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"domain\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"AdvancedDataType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"community\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ComplexRelation\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"status\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"JdbcDriverFile\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    }\n  ],\n  \"assetAssignmentRules\": [\n    {\n      \"id\": \"<uuid>\",\n      \"assetType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ValidationRule\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"domain\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"DateAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"community\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"MultiValueListAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"status\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Role\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"assetType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"SingleValueListAttribute\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"domain\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"SingleValueListAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"community\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Address\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"status\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"MultiValueListAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    }\n  ],\n  \"businessItemResourceType\": \"GLOBAL\",\n  \"exclusivity\": \"UNCONSTRAINED\",\n  \"guestUserAccessible\": \"<boolean>\",\n  \"registeredUserAccessible\": \"<boolean>\",\n  \"candidateUserCheckEnabled\": \"<boolean>\",\n  \"globalCreate\": \"<boolean>\",\n  \"startEvents\": [\n    \"ASSET_STATUS_CHANGED\",\n    \"ASSET_DISPLAY_NAME_CHANGED\"\n  ],\n  \"configurationVariables\": {\n    \"qui_1\": \"<string>\",\n    \"deserunt_4e\": \"<string>\",\n    \"proident_469\": \"<string>\"\n  },\n  \"startRoles\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"AssetType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"global\": \"<boolean>\",\n      \"permissionList\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"permissions\": [\n        \"REPORTING_VIEW_INSIGHTS_REPORTS\",\n        \"REPORTING_DOWNLOAD_INSIGHTS_DATA\"\n      ]\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Assignment\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"global\": \"<boolean>\",\n      \"permissionList\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"permissions\": [\n        \"RATING_REMOVE\",\n        \"INSIGHTS_SUMMARY\"\n      ]\n    }\n  ],\n  \"stopRoles\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"UserGroup\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"global\": \"<boolean>\",\n      \"permissionList\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"permissions\": [\n        \"VIEW_MANAGE_ALL\",\n        \"COMMUNITY_CHANGE\"\n      ]\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Classification\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"global\": \"<boolean>\",\n      \"permissionList\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"permissions\": [\n        \"ATTACHMENT_ADD\",\n        \"VIEW_PERMISSIONS_CHANGE\"\n      ]\n    }\n  ],\n  \"reassignRoles\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Role\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"global\": \"<boolean>\",\n      \"permissionList\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"permissions\": [\n        \"REGISTER_PROFILING_INFORMATION\",\n        \"ASSET_RESPONSIBILITY_CHANGE\"\n      ]\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"NumericAttributeType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"global\": \"<boolean>\",\n      \"permissionList\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"permissions\": [\n        \"COMMUNITY_RESPONSIBILITY_REMOVE\",\n        \"ASSET_RESPONSIBILITY_ADD\"\n      ]\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Remove workflow definition.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflowDefinitions/:workflowDefinitionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflowDefinitions",
										":workflowDefinitionId"
									],
									"variable": [
										{
											"key": "workflowDefinitionId",
											"value": "<uuid>",
											"description": "(Required) The ID of the workflow definition."
										}
									]
								},
								"description": "Removes the workflow definition with the specified ID. The workflow definition will be completely removed from the application, including any history."
							},
							"response": [
								{
									"name": "The workflow definition has been successfully removed.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/workflowDefinitions/:workflowDefinitionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"workflowDefinitions",
												":workflowDefinitionId"
											],
											"variable": [
												{
													"key": "workflowDefinitionId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Change workflow definition.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"configurationVariables\": {\n    \"Excepteur6e\": \"<string>\"\n  },\n  \"startEvents\": [\n    \"CLASSIFICATION_MATCH_REMOVED\",\n    \"ASSET_ATTRIBUTE_REMOVED\"\n  ],\n  \"businessItemResourceType\": \"ASSET\",\n  \"exclusivity\": \"DEFINITION_EXCLUSIVITY\",\n  \"guestUserAccessible\": \"<boolean>\",\n  \"registeredUserAccessible\": \"<boolean>\",\n  \"candidateUserCheckDisabled\": \"<boolean>\",\n  \"candidateUserCheckEnabled\": \"<boolean>\",\n  \"globalCreate\": \"<boolean>\",\n  \"enable\": \"<boolean>\",\n  \"startLabel\": \"<string>\",\n  \"startRoleIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"stopRoleIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"reassignRoleIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/workflowDefinitions/:workflowDefinitionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflowDefinitions",
										":workflowDefinitionId"
									],
									"variable": [
										{
											"key": "workflowDefinitionId",
											"value": "<uuid>",
											"description": "(Required) The ID of the workflow definition."
										}
									]
								},
								"description": "Modifies the workflow definition with the specified ID.<p>Only properties that are specified in this request and have not <code>null</code> values are updated.<p>All other properties are ignored."
							},
							"response": [
								{
									"name": "The workflow definition has been successfully updated.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"configurationVariables\": {\n    \"Excepteur6e\": \"<string>\"\n  },\n  \"startEvents\": [\n    \"CLASSIFICATION_MATCH_REMOVED\",\n    \"ASSET_ATTRIBUTE_REMOVED\"\n  ],\n  \"businessItemResourceType\": \"ASSET\",\n  \"exclusivity\": \"DEFINITION_EXCLUSIVITY\",\n  \"guestUserAccessible\": \"<boolean>\",\n  \"registeredUserAccessible\": \"<boolean>\",\n  \"candidateUserCheckDisabled\": \"<boolean>\",\n  \"candidateUserCheckEnabled\": \"<boolean>\",\n  \"globalCreate\": \"<boolean>\",\n  \"enable\": \"<boolean>\",\n  \"startLabel\": \"<string>\",\n  \"startRoleIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"stopRoleIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"reassignRoleIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/workflowDefinitions/:workflowDefinitionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"workflowDefinitions",
												":workflowDefinitionId"
											],
											"variable": [
												{
													"key": "workflowDefinitionId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"WorkflowInstance\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"processId\": \"<string>\",\n  \"startLabel\": \"<string>\",\n  \"formRequired\": \"<boolean>\",\n  \"startFormKeyAvailable\": \"<boolean>\",\n  \"startFormJsonModelAvailable\": \"<boolean>\",\n  \"enabled\": \"<boolean>\",\n  \"domainAssignmentRules\": [\n    {\n      \"id\": \"<uuid>\",\n      \"assetType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ViewAssignmentRule\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"domain\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"DiagramPictureAssignmentRule\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"community\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"PhysicalDataConnector\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"status\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"JdbcDriverFile\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"assetType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ComplexRelationAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"domain\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"AdvancedDataType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"community\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ComplexRelation\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"status\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"JdbcDriverFile\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    }\n  ],\n  \"assetAssignmentRules\": [\n    {\n      \"id\": \"<uuid>\",\n      \"assetType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ValidationRule\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"domain\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"DateAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"community\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"MultiValueListAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"status\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Role\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"assetType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"SingleValueListAttribute\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"domain\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"SingleValueListAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"community\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Address\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"status\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"MultiValueListAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    }\n  ],\n  \"businessItemResourceType\": \"GLOBAL\",\n  \"exclusivity\": \"UNCONSTRAINED\",\n  \"guestUserAccessible\": \"<boolean>\",\n  \"registeredUserAccessible\": \"<boolean>\",\n  \"candidateUserCheckEnabled\": \"<boolean>\",\n  \"globalCreate\": \"<boolean>\",\n  \"startEvents\": [\n    \"ASSET_STATUS_CHANGED\",\n    \"ASSET_DISPLAY_NAME_CHANGED\"\n  ],\n  \"configurationVariables\": {\n    \"qui_1\": \"<string>\",\n    \"deserunt_4e\": \"<string>\",\n    \"proident_469\": \"<string>\"\n  },\n  \"startRoles\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"AssetType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"global\": \"<boolean>\",\n      \"permissionList\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"permissions\": [\n        \"REPORTING_VIEW_INSIGHTS_REPORTS\",\n        \"REPORTING_DOWNLOAD_INSIGHTS_DATA\"\n      ]\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Assignment\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"global\": \"<boolean>\",\n      \"permissionList\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"permissions\": [\n        \"RATING_REMOVE\",\n        \"INSIGHTS_SUMMARY\"\n      ]\n    }\n  ],\n  \"stopRoles\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"UserGroup\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"global\": \"<boolean>\",\n      \"permissionList\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"permissions\": [\n        \"VIEW_MANAGE_ALL\",\n        \"COMMUNITY_CHANGE\"\n      ]\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Classification\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"global\": \"<boolean>\",\n      \"permissionList\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"permissions\": [\n        \"ATTACHMENT_ADD\",\n        \"VIEW_PERMISSIONS_CHANGE\"\n      ]\n    }\n  ],\n  \"reassignRoles\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Role\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"global\": \"<boolean>\",\n      \"permissionList\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"permissions\": [\n        \"REGISTER_PROFILING_INFORMATION\",\n        \"ASSET_RESPONSIBILITY_CHANGE\"\n      ]\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"NumericAttributeType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"global\": \"<boolean>\",\n      \"permissionList\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"permissions\": [\n        \"COMMUNITY_RESPONSIBILITY_REMOVE\",\n        \"ASSET_RESPONSIBILITY_ADD\"\n      ]\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "workflowDefinition",
					"item": [
						{
							"name": "{workflowDefinitionId}",
							"item": [
								{
									"name": "configurationStartFormData",
									"item": [
										{
											"name": "Get configuration start form data.",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/workflowDefinitions/workflowDefinition/:workflowDefinitionId/configurationStartFormData?formPropertyType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"workflowDefinitions",
														"workflowDefinition",
														":workflowDefinitionId",
														"configurationStartFormData"
													],
													"query": [
														{
															"key": "formPropertyType",
															"value": "<string>",
															"description": "The form type to be returned."
														}
													],
													"variable": [
														{
															"key": "workflowDefinitionId",
															"value": "<uuid>",
															"description": "(Required) The ID of the workflow definition that should be used for the form data retrieval."
														}
													]
												},
												"description": "Returns the task configuration start form data of the workflow definition with the specified ID."
											},
											"response": [
												{
													"name": "The configuration start form data for workflow definition.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/workflowDefinitions/workflowDefinition/:workflowDefinitionId/configurationStartFormData?formPropertyType=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"workflowDefinitions",
																"workflowDefinition",
																":workflowDefinitionId",
																"configurationStartFormData"
															],
															"query": [
																{
																	"key": "formPropertyType",
																	"value": "<string>",
																	"description": "The form type to be returned."
																}
															],
															"variable": [
																{
																	"key": "workflowDefinitionId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"formKey\": \"<string>\",\n  \"formProperties\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"value\": \"<string>\",\n      \"writable\": \"<boolean>\",\n      \"required\": \"<boolean>\",\n      \"enumValues\": [\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        },\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        }\n      ],\n      \"checkButtons\": [\n        {\n          \"label\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"label\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"radioButtons\": [\n        {\n          \"label\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"label\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"defaultDropdownValues\": [\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        },\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        }\n      ],\n      \"proposedDropdownValues\": [\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        },\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        }\n      ],\n      \"dateTimeType\": \"<string>\",\n      \"multiValue\": \"<boolean>\",\n      \"proposedFixed\": \"<boolean>\",\n      \"defaultFromResource\": \"<boolean>\",\n      \"multiDefaultDropdownValues\": {\n        \"labore3ab\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ]\n      },\n      \"multiProposedDropdownValues\": {\n        \"adipisicing4_\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ],\n        \"ut2a\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ],\n        \"labore08\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ]\n      },\n      \"assetType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"CsvIngestionProperties\",\n        \"resourceDiscriminator\": \"<string>\"\n      },\n      \"assetTypeIds\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ],\n      \"communityIds\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ],\n      \"domainIds\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ],\n      \"statusIds\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ],\n      \"helpText\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"value\": \"<string>\",\n      \"writable\": \"<boolean>\",\n      \"required\": \"<boolean>\",\n      \"enumValues\": [\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        },\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        }\n      ],\n      \"checkButtons\": [\n        {\n          \"label\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"label\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"radioButtons\": [\n        {\n          \"label\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"label\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"defaultDropdownValues\": [\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        },\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        }\n      ],\n      \"proposedDropdownValues\": [\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        },\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        }\n      ],\n      \"dateTimeType\": \"<string>\",\n      \"multiValue\": \"<boolean>\",\n      \"proposedFixed\": \"<boolean>\",\n      \"defaultFromResource\": \"<boolean>\",\n      \"multiDefaultDropdownValues\": {\n        \"ut_c9_\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ],\n        \"magna659\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ],\n        \"culpa_2a\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ]\n      },\n      \"multiProposedDropdownValues\": {\n        \"Excepteur_a3\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ],\n        \"adipisicing_\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ]\n      },\n      \"assetType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Domain\",\n        \"resourceDiscriminator\": \"<string>\"\n      },\n      \"assetTypeIds\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ],\n      \"communityIds\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ],\n      \"domainIds\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ],\n      \"statusIds\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ],\n      \"helpText\": \"<string>\"\n    }\n  ],\n  \"processId\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "startFormData",
									"item": [
										{
											"name": "Get start form data.",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/workflowDefinitions/workflowDefinition/:workflowDefinitionId/startFormData?formPropertyType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"workflowDefinitions",
														"workflowDefinition",
														":workflowDefinitionId",
														"startFormData"
													],
													"query": [
														{
															"key": "formPropertyType",
															"value": "<string>",
															"description": "The form type to be returned."
														}
													],
													"variable": [
														{
															"key": "workflowDefinitionId",
															"value": "<uuid>",
															"description": "(Required) The ID of the workflow definition that should be used for the form data retrieval."
														}
													]
												},
												"description": "Returns the task start form data of the workflow definition with the specified ID."
											},
											"response": [
												{
													"name": "The start form data for workflow definition.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/workflowDefinitions/workflowDefinition/:workflowDefinitionId/startFormData?formPropertyType=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"workflowDefinitions",
																"workflowDefinition",
																":workflowDefinitionId",
																"startFormData"
															],
															"query": [
																{
																	"key": "formPropertyType",
																	"value": "<string>",
																	"description": "The form type to be returned."
																}
															],
															"variable": [
																{
																	"key": "workflowDefinitionId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"formKey\": \"<string>\",\n  \"formProperties\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"value\": \"<string>\",\n      \"writable\": \"<boolean>\",\n      \"required\": \"<boolean>\",\n      \"enumValues\": [\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        },\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        }\n      ],\n      \"checkButtons\": [\n        {\n          \"label\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"label\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"radioButtons\": [\n        {\n          \"label\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"label\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"defaultDropdownValues\": [\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        },\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        }\n      ],\n      \"proposedDropdownValues\": [\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        },\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        }\n      ],\n      \"dateTimeType\": \"<string>\",\n      \"multiValue\": \"<boolean>\",\n      \"proposedFixed\": \"<boolean>\",\n      \"defaultFromResource\": \"<boolean>\",\n      \"multiDefaultDropdownValues\": {\n        \"labore3ab\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ]\n      },\n      \"multiProposedDropdownValues\": {\n        \"adipisicing4_\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ],\n        \"ut2a\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ],\n        \"labore08\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ]\n      },\n      \"assetType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"CsvIngestionProperties\",\n        \"resourceDiscriminator\": \"<string>\"\n      },\n      \"assetTypeIds\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ],\n      \"communityIds\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ],\n      \"domainIds\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ],\n      \"statusIds\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ],\n      \"helpText\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"value\": \"<string>\",\n      \"writable\": \"<boolean>\",\n      \"required\": \"<boolean>\",\n      \"enumValues\": [\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        },\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        }\n      ],\n      \"checkButtons\": [\n        {\n          \"label\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"label\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"radioButtons\": [\n        {\n          \"label\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"label\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"defaultDropdownValues\": [\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        },\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        }\n      ],\n      \"proposedDropdownValues\": [\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        },\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        }\n      ],\n      \"dateTimeType\": \"<string>\",\n      \"multiValue\": \"<boolean>\",\n      \"proposedFixed\": \"<boolean>\",\n      \"defaultFromResource\": \"<boolean>\",\n      \"multiDefaultDropdownValues\": {\n        \"ut_c9_\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ],\n        \"magna659\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ],\n        \"culpa_2a\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ]\n      },\n      \"multiProposedDropdownValues\": {\n        \"Excepteur_a3\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ],\n        \"adipisicing_\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ]\n      },\n      \"assetType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Domain\",\n        \"resourceDiscriminator\": \"<string>\"\n      },\n      \"assetTypeIds\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ],\n      \"communityIds\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ],\n      \"domainIds\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ],\n      \"statusIds\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ],\n      \"helpText\": \"<string>\"\n    }\n  ],\n  \"processId\": \"<string>\"\n}"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "startEvents",
					"item": [
						{
							"name": "Get all possible workflow start events",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/workflowDefinitions/startEvents",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflowDefinitions",
										"startEvents"
									]
								},
								"description": "Returns all possible workflow start events, including event name and description"
							},
							"response": [
								{
									"name": "All possible workflow start events with name and description",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/workflowDefinitions/startEvents",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"workflowDefinitions",
												"startEvents"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"eventType\": \"DATABASE_REGISTRATION_FAILED\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  {\n    \"eventType\": \"RELATION_REMOVED_AND_ASSET_WAS_TARGET\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n  }\n]"
								}
							]
						}
					]
				},
				{
					"name": "process",
					"item": [
						{
							"name": "{processId}",
							"item": [
								{
									"name": "Get workflow definition.",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/workflowDefinitions/process/:processId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"workflowDefinitions",
												"process",
												":processId"
											],
											"variable": [
												{
													"key": "processId",
													"value": "<string>",
													"description": "(Required) The process ID of the workflow definition."
												}
											]
										},
										"description": "Returns the workflow definition with the specified process ID."
									},
									"response": [
										{
											"name": "The workflow definition successfully found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/workflowDefinitions/process/:processId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"workflowDefinitions",
														"process",
														":processId"
													],
													"variable": [
														{
															"key": "processId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"WorkflowInstance\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"processId\": \"<string>\",\n  \"startLabel\": \"<string>\",\n  \"formRequired\": \"<boolean>\",\n  \"startFormKeyAvailable\": \"<boolean>\",\n  \"startFormJsonModelAvailable\": \"<boolean>\",\n  \"enabled\": \"<boolean>\",\n  \"domainAssignmentRules\": [\n    {\n      \"id\": \"<uuid>\",\n      \"assetType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ViewAssignmentRule\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"domain\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"DiagramPictureAssignmentRule\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"community\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"PhysicalDataConnector\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"status\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"JdbcDriverFile\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"assetType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ComplexRelationAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"domain\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"AdvancedDataType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"community\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ComplexRelation\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"status\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"JdbcDriverFile\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    }\n  ],\n  \"assetAssignmentRules\": [\n    {\n      \"id\": \"<uuid>\",\n      \"assetType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ValidationRule\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"domain\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"DateAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"community\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"MultiValueListAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"status\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Role\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"assetType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"SingleValueListAttribute\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"domain\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"SingleValueListAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"community\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Address\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"status\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"MultiValueListAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    }\n  ],\n  \"businessItemResourceType\": \"GLOBAL\",\n  \"exclusivity\": \"UNCONSTRAINED\",\n  \"guestUserAccessible\": \"<boolean>\",\n  \"registeredUserAccessible\": \"<boolean>\",\n  \"candidateUserCheckEnabled\": \"<boolean>\",\n  \"globalCreate\": \"<boolean>\",\n  \"startEvents\": [\n    \"ASSET_STATUS_CHANGED\",\n    \"ASSET_DISPLAY_NAME_CHANGED\"\n  ],\n  \"configurationVariables\": {\n    \"qui_1\": \"<string>\",\n    \"deserunt_4e\": \"<string>\",\n    \"proident_469\": \"<string>\"\n  },\n  \"startRoles\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"AssetType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"global\": \"<boolean>\",\n      \"permissionList\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"permissions\": [\n        \"REPORTING_VIEW_INSIGHTS_REPORTS\",\n        \"REPORTING_DOWNLOAD_INSIGHTS_DATA\"\n      ]\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Assignment\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"global\": \"<boolean>\",\n      \"permissionList\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"permissions\": [\n        \"RATING_REMOVE\",\n        \"INSIGHTS_SUMMARY\"\n      ]\n    }\n  ],\n  \"stopRoles\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"UserGroup\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"global\": \"<boolean>\",\n      \"permissionList\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"permissions\": [\n        \"VIEW_MANAGE_ALL\",\n        \"COMMUNITY_CHANGE\"\n      ]\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Classification\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"global\": \"<boolean>\",\n      \"permissionList\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"permissions\": [\n        \"ATTACHMENT_ADD\",\n        \"VIEW_PERMISSIONS_CHANGE\"\n      ]\n    }\n  ],\n  \"reassignRoles\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Role\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"global\": \"<boolean>\",\n      \"permissionList\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"permissions\": [\n        \"REGISTER_PROFILING_INFORMATION\",\n        \"ASSET_RESPONSIBILITY_CHANGE\"\n      ]\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"NumericAttributeType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"global\": \"<boolean>\",\n      \"permissionList\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"permissions\": [\n        \"COMMUNITY_RESPONSIBILITY_REMOVE\",\n        \"ASSET_RESPONSIBILITY_ADD\"\n      ]\n    }\n  ]\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "removalJobs",
					"item": [
						{
							"name": "Remove multiple workflow definitions.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/workflowDefinitions/removalJobs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflowDefinitions",
										"removalJobs"
									]
								},
								"description": "Removes multiple workflow definitions asynchronously. The workflow definition(s) will be completely removed from the application, including any history."
							},
							"response": [
								{
									"name": "The job for removal workflow definitions has been created.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<uuid>\",\n  \"<uuid>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/workflowDefinitions/removalJobs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"workflowDefinitions",
												"removalJobs"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Website\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"userId\": \"<uuid>\",\n  \"visibility\": \"<integer>\",\n  \"progressPercentage\": \"<double>\",\n  \"cancelable\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"state\": \"CANCELING\",\n  \"result\": \"NOT_SET\",\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Find workflow definitions.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/workflowDefinitions?offset=0&limit=0&countLimit=-1&assetId=<uuid>&assetId=<uuid>&domainId=<uuid>&domainId=<uuid>&communityId=<uuid>&communityId=<uuid>&enabled=<boolean>&global=<boolean>&name=<string>&sortOrder=ASC&sortField=NAME&description=<string>&guardrailsValidationResult=VALID",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflowDefinitions"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
								},
								{
									"key": "limit",
									"value": "0",
									"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
								},
								{
									"key": "countLimit",
									"value": "-1",
									"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
								},
								{
									"key": "assetId",
									"value": "<uuid>",
									"description": "The list of the IDs of business items (assets) for which the workflow definitions should be found."
								},
								{
									"key": "assetId",
									"value": "<uuid>",
									"description": "The list of the IDs of business items (assets) for which the workflow definitions should be found."
								},
								{
									"key": "domainId",
									"value": "<uuid>",
									"description": "The list of the IDs of business items (domains) for which the workflow definitions should be found."
								},
								{
									"key": "domainId",
									"value": "<uuid>",
									"description": "The list of the IDs of business items (domains) for which the workflow definitions should be found."
								},
								{
									"key": "communityId",
									"value": "<uuid>",
									"description": "The list of the IDs of business items (communities) for which the workflow definitions should be found."
								},
								{
									"key": "communityId",
									"value": "<uuid>",
									"description": "The list of the IDs of business items (communities) for which the workflow definitions should be found."
								},
								{
									"key": "enabled",
									"value": "<boolean>",
									"description": "Whether the found workflow definitions should be enabled."
								},
								{
									"key": "global",
									"value": "<boolean>",
									"description": "Whether the found workflow definitions should be global."
								},
								{
									"key": "name",
									"value": "<string>",
									"description": "The name (could be partial) of the workflow definition to search for."
								},
								{
									"key": "sortOrder",
									"value": "ASC",
									"description": "The sorting order."
								},
								{
									"key": "sortField",
									"value": "NAME",
									"description": "The field on which the results are sorted."
								},
								{
									"key": "description",
									"value": "<string>",
									"description": "The description (could be partial) of the workflow definition to search for."
								},
								{
									"key": "guardrailsValidationResult",
									"value": "VALID",
									"description": "The result of the guardrails validation of this workflow definition"
								}
							]
						},
						"description": "Finds the workflow definitions matching the criteria described in the request object. By default, the result contains up to 1000 workflow definitions."
					},
					"response": [
						{
							"name": "The paged response with found workflow definitions.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/workflowDefinitions?offset=0&limit=0&countLimit=-1&assetId=<uuid>&domainId=<uuid>&communityId=<uuid>&enabled=<boolean>&global=<boolean>&name=<string>&sortOrder=ASC&sortField=NAME&description=<string>&guardrailsValidationResult=VALID",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflowDefinitions"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
										},
										{
											"key": "assetId",
											"value": "<uuid>",
											"description": "The list of the IDs of business items (assets) for which the workflow definitions should be found."
										},
										{
											"key": "domainId",
											"value": "<uuid>",
											"description": "The list of the IDs of business items (domains) for which the workflow definitions should be found."
										},
										{
											"key": "communityId",
											"value": "<uuid>",
											"description": "The list of the IDs of business items (communities) for which the workflow definitions should be found."
										},
										{
											"key": "enabled",
											"value": "<boolean>",
											"description": "Whether the found workflow definitions should be enabled."
										},
										{
											"key": "global",
											"value": "<boolean>",
											"description": "Whether the found workflow definitions should be global."
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "The name (could be partial) of the workflow definition to search for."
										},
										{
											"key": "sortOrder",
											"value": "ASC",
											"description": "The sorting order."
										},
										{
											"key": "sortField",
											"value": "NAME",
											"description": "The field on which the results are sorted."
										},
										{
											"key": "description",
											"value": "<string>",
											"description": "The description (could be partial) of the workflow definition to search for."
										},
										{
											"key": "guardrailsValidationResult",
											"value": "VALID",
											"description": "The result of the guardrails validation of this workflow definition"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": \"<long>\",\n  \"offset\": \"<long>\",\n  \"limit\": \"<long>\",\n  \"results\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"BaseDataType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"processId\": \"<string>\",\n      \"startLabel\": \"<string>\",\n      \"formRequired\": \"<boolean>\",\n      \"startFormKeyAvailable\": \"<boolean>\",\n      \"startFormJsonModelAvailable\": \"<boolean>\",\n      \"enabled\": \"<boolean>\",\n      \"domainAssignmentRules\": [\n        {\n          \"id\": \"<uuid>\",\n          \"assetType\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"Attribute\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"domain\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"DateAttributeType\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"community\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"BaseDataType\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"status\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"NumericAttribute\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          }\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"assetType\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"StringAttributeType\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"domain\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"StringAttributeType\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"community\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"StringAttributeType\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"status\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"Workflow\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          }\n        }\n      ],\n      \"assetAssignmentRules\": [\n        {\n          \"id\": \"<uuid>\",\n          \"assetType\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"MultiValueListAttribute\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"domain\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"ComplexRelationType\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"community\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"ComplexRelationType\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"status\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"Community\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          }\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"assetType\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"ViewSharingRule\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"domain\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"ScriptAttribute\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"community\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"StringAttributeType\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"status\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"Status\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          }\n        }\n      ],\n      \"businessItemResourceType\": \"COMMUNITY\",\n      \"exclusivity\": \"UNCONSTRAINED\",\n      \"guestUserAccessible\": \"<boolean>\",\n      \"registeredUserAccessible\": \"<boolean>\",\n      \"candidateUserCheckEnabled\": \"<boolean>\",\n      \"globalCreate\": \"<boolean>\",\n      \"startEvents\": [\n        \"COMMENT_REMOVED\",\n        \"CLASSIFICATION_MATCH_REMOVED\"\n      ],\n      \"configurationVariables\": {\n        \"cillumd\": \"<string>\",\n        \"elit8\": \"<string>\"\n      },\n      \"startRoles\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ComplexRelationType\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"name\": \"<string>\",\n          \"description\": \"<string>\",\n          \"global\": \"<boolean>\",\n          \"permissionList\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"permissions\": [\n            \"RELATION_TYPE_ADD\",\n            \"EDGE_INTEGRATION_CAPABILITY_MANAGE\"\n          ]\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"AssignedCharacteristicType\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"name\": \"<string>\",\n          \"description\": \"<string>\",\n          \"global\": \"<boolean>\",\n          \"permissionList\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"permissions\": [\n            \"METADATA_LAKE\",\n            \"VIEW_MANAGE\"\n          ]\n        }\n      ],\n      \"stopRoles\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"FormProperty\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"name\": \"<string>\",\n          \"description\": \"<string>\",\n          \"global\": \"<boolean>\",\n          \"permissionList\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"permissions\": [\n            \"DOMAIN_CHANGE\",\n            \"RATING_CHANGE\"\n          ]\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ViewSharingRule\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"name\": \"<string>\",\n          \"description\": \"<string>\",\n          \"global\": \"<boolean>\",\n          \"permissionList\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"permissions\": [\n            \"COMMUNITY_RESPONSIBILITY_CHANGE\",\n            \"VIEW_PERMISSIONS_VIEW_ALL\"\n          ]\n        }\n      ],\n      \"reassignRoles\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"DiagramPicture\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"name\": \"<string>\",\n          \"description\": \"<string>\",\n          \"global\": \"<boolean>\",\n          \"permissionList\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"permissions\": [\n            \"EDGE_SITE_ADMINISTER\",\n            \"VALIDATION_EXECUTION\"\n          ]\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"NumericAttribute\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"name\": \"<string>\",\n          \"description\": \"<string>\",\n          \"global\": \"<boolean>\",\n          \"permissionList\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"permissions\": [\n            \"TECHNICAL_LINEAGE\",\n            \"CATALOG\"\n          ]\n        }\n      ]\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"PhysicalDataConnector\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"processId\": \"<string>\",\n      \"startLabel\": \"<string>\",\n      \"formRequired\": \"<boolean>\",\n      \"startFormKeyAvailable\": \"<boolean>\",\n      \"startFormJsonModelAvailable\": \"<boolean>\",\n      \"enabled\": \"<boolean>\",\n      \"domainAssignmentRules\": [\n        {\n          \"id\": \"<uuid>\",\n          \"assetType\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"DateTimeAttributeType\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"domain\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"JdbcDriverFile\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"community\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"Relation\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"status\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"Domain\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          }\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"assetType\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"StringAttribute\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"domain\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"RelationTrace\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"community\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"Attribute\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"status\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"ExcelIngestionProperties\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          }\n        }\n      ],\n      \"assetAssignmentRules\": [\n        {\n          \"id\": \"<uuid>\",\n          \"assetType\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"SingleValueListAttributeType\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"domain\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"Status\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"community\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"JdbcDriver\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"status\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"PhysicalDataConnector\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          }\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"assetType\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"Attachment\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"domain\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"WorkflowInstance\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"community\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"Context\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          },\n          \"status\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"ActivityChange\",\n            \"resourceDiscriminator\": \"<string>\",\n            \"name\": \"<string>\"\n          }\n        }\n      ],\n      \"businessItemResourceType\": \"GLOBAL\",\n      \"exclusivity\": \"DEFINITION_EXCLUSIVITY\",\n      \"guestUserAccessible\": \"<boolean>\",\n      \"registeredUserAccessible\": \"<boolean>\",\n      \"candidateUserCheckEnabled\": \"<boolean>\",\n      \"globalCreate\": \"<boolean>\",\n      \"startEvents\": [\n        \"RELATION_REMOVED_AND_ASSET_WAS_SOURCE\",\n        \"ASSET_NAME_CHANGED\"\n      ],\n      \"configurationVariables\": {\n        \"ut2d\": \"<string>\",\n        \"nostrud_e\": \"<string>\"\n      },\n      \"startRoles\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"StringAttribute\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"name\": \"<string>\",\n          \"description\": \"<string>\",\n          \"global\": \"<boolean>\",\n          \"permissionList\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"permissions\": [\n            \"ATTACHMENT_CHANGE\",\n            \"COMMENT_ADD\"\n          ]\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Assignment\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"name\": \"<string>\",\n          \"description\": \"<string>\",\n          \"global\": \"<boolean>\",\n          \"permissionList\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"permissions\": [\n            \"VIEW_PERMISSIONS_CHANGE\",\n            \"ATTACHMENT_ADD\"\n          ]\n        }\n      ],\n      \"stopRoles\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"SingleValueListAttribute\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"name\": \"<string>\",\n          \"description\": \"<string>\",\n          \"global\": \"<boolean>\",\n          \"permissionList\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"permissions\": [\n            \"ADVANCED_DATA_TYPE_ADD\",\n            \"CONFIGURATION_EDIT\"\n          ]\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"AssignedCharacteristicType\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"name\": \"<string>\",\n          \"description\": \"<string>\",\n          \"global\": \"<boolean>\",\n          \"permissionList\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"permissions\": [\n            \"ASSET_ATTRIBUTE_REMOVE\",\n            \"COMMENT_ADD\"\n          ]\n        }\n      ],\n      \"reassignRoles\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ExcelIngestionProperties\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"name\": \"<string>\",\n          \"description\": \"<string>\",\n          \"global\": \"<boolean>\",\n          \"permissionList\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"permissions\": [\n            \"CONFIGURATION_EDIT\",\n            \"ADVANCED_DATA_TYPE_ADD\"\n          ]\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"DataQualityRule\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"name\": \"<string>\",\n          \"description\": \"<string>\",\n          \"global\": \"<boolean>\",\n          \"permissionList\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"permissions\": [\n            \"DOMAIN_CHANGE\",\n            \"PROTECT_EDIT\"\n          ]\n        }\n      ]\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Deploy workflow definition.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "The file with described workflow definition.",
									"type": "file",
									"src": []
								},
								{
									"key": "fileName",
									"value": "<string>",
									"description": "The name of the file.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/workflowDefinitions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflowDefinitions"
							]
						},
						"description": "Deploys workflow definition (the business process and resources) using the specified request.<p> The input stream can represent a single file(e.g: .bpmn20.xml or .bpmn) or an archive file (e.g: .zip or .bar). It is not allowed to deploy a resource containing more than one process definition."
					},
					"response": [
						{
							"name": "The workflow definition has been deployed successfully.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "The file with described workflow definition.",
											"type": "file",
											"src": []
										},
										{
											"key": "fileName",
											"value": "<string>",
											"description": "The name of the file.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/workflowDefinitions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflowDefinitions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"WorkflowInstance\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"processId\": \"<string>\",\n  \"startLabel\": \"<string>\",\n  \"formRequired\": \"<boolean>\",\n  \"startFormKeyAvailable\": \"<boolean>\",\n  \"startFormJsonModelAvailable\": \"<boolean>\",\n  \"enabled\": \"<boolean>\",\n  \"domainAssignmentRules\": [\n    {\n      \"id\": \"<uuid>\",\n      \"assetType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ViewAssignmentRule\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"domain\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"DiagramPictureAssignmentRule\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"community\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"PhysicalDataConnector\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"status\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"JdbcDriverFile\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"assetType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ComplexRelationAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"domain\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"AdvancedDataType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"community\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ComplexRelation\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"status\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"JdbcDriverFile\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    }\n  ],\n  \"assetAssignmentRules\": [\n    {\n      \"id\": \"<uuid>\",\n      \"assetType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ValidationRule\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"domain\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"DateAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"community\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"MultiValueListAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"status\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Role\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"assetType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"SingleValueListAttribute\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"domain\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"SingleValueListAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"community\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Address\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      },\n      \"status\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"MultiValueListAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    }\n  ],\n  \"businessItemResourceType\": \"GLOBAL\",\n  \"exclusivity\": \"UNCONSTRAINED\",\n  \"guestUserAccessible\": \"<boolean>\",\n  \"registeredUserAccessible\": \"<boolean>\",\n  \"candidateUserCheckEnabled\": \"<boolean>\",\n  \"globalCreate\": \"<boolean>\",\n  \"startEvents\": [\n    \"ASSET_STATUS_CHANGED\",\n    \"ASSET_DISPLAY_NAME_CHANGED\"\n  ],\n  \"configurationVariables\": {\n    \"qui_1\": \"<string>\",\n    \"deserunt_4e\": \"<string>\",\n    \"proident_469\": \"<string>\"\n  },\n  \"startRoles\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"AssetType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"global\": \"<boolean>\",\n      \"permissionList\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"permissions\": [\n        \"REPORTING_VIEW_INSIGHTS_REPORTS\",\n        \"REPORTING_DOWNLOAD_INSIGHTS_DATA\"\n      ]\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Assignment\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"global\": \"<boolean>\",\n      \"permissionList\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"permissions\": [\n        \"RATING_REMOVE\",\n        \"INSIGHTS_SUMMARY\"\n      ]\n    }\n  ],\n  \"stopRoles\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"UserGroup\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"global\": \"<boolean>\",\n      \"permissionList\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"permissions\": [\n        \"VIEW_MANAGE_ALL\",\n        \"COMMUNITY_CHANGE\"\n      ]\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Classification\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"global\": \"<boolean>\",\n      \"permissionList\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"permissions\": [\n        \"ATTACHMENT_ADD\",\n        \"VIEW_PERMISSIONS_CHANGE\"\n      ]\n    }\n  ],\n  \"reassignRoles\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Role\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"global\": \"<boolean>\",\n      \"permissionList\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"permissions\": [\n        \"REGISTER_PROFILING_INFORMATION\",\n        \"ASSET_RESPONSIBILITY_CHANGE\"\n      ]\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"NumericAttributeType\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"global\": \"<boolean>\",\n      \"permissionList\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"permissions\": [\n        \"COMMUNITY_RESPONSIBILITY_REMOVE\",\n        \"ASSET_RESPONSIBILITY_ADD\"\n      ]\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "workflowInstances",
			"item": [
				{
					"name": "{workflowInstanceId}",
					"item": [
						{
							"name": "canceled",
							"item": [
								{
									"name": "Cancel workflow instance.",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<string>",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/workflowInstances/:workflowInstanceId/canceled",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"workflowInstances",
												":workflowInstanceId",
												"canceled"
											],
											"variable": [
												{
													"key": "workflowInstanceId",
													"value": "<uuid>",
													"description": "(Required) The identifier of the workflow instance to be cancelled."
												}
											]
										},
										"description": "Cancels the workflow instance with the specified ID with a reason. Canceling the workflow instance also cancels the workflow sub-processes."
									},
									"response": [
										{
											"name": "The workflow instance has been successfully canceled.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/workflowInstances/:workflowInstanceId/canceled",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"workflowInstances",
														":workflowInstanceId",
														"canceled"
													],
													"variable": [
														{
															"key": "workflowInstanceId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "diagram",
							"item": [
								{
									"name": "Returns the file representing the diagram of workflow instance identified by the given ID.",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "image/png"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/workflowInstances/:workflowInstanceId/diagram",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"workflowInstances",
												":workflowInstanceId",
												"diagram"
											],
											"variable": [
												{
													"key": "workflowInstanceId",
													"value": "<uuid>",
													"description": "(Required) The ID of the workflow instance to return the diagram for."
												}
											]
										},
										"description": "Returns the file representing the diagram of workflow instance identified by the given ID. The diagram input stream returned can be null as deployed workflow defintions without graphical notation included don't have a diagram"
									},
									"response": [
										{
											"name": "The input stream containing the diagram of the workflow instance.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "image/png"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/workflowInstances/:workflowInstanceId/diagram",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"workflowInstances",
														":workflowInstanceId",
														"diagram"
													],
													"variable": [
														{
															"key": "workflowInstanceId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "image/png"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "No diagram has been found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/workflowInstances/:workflowInstanceId/diagram",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"workflowInstances",
														":workflowInstanceId",
														"diagram"
													],
													"variable": [
														{
															"key": "workflowInstanceId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "{processInstanceId}",
					"item": [
						{
							"name": "messageEvents",
							"item": [
								{
									"name": "{messageName}",
									"item": [
										{
											"name": "Pass message event to workflow engine.",
											"request": {
												"auth": {
													"type": "basic",
													"basic": [
														{
															"key": "username",
															"value": "{{basicAuthUsername}}",
															"type": "string"
														},
														{
															"key": "password",
															"value": "{{basicAuthPassword}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"variables\": {\n    \"sit_c\": {}\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/workflowInstances/:processInstanceId/messageEvents/:messageName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"workflowInstances",
														":processInstanceId",
														"messageEvents",
														":messageName"
													],
													"variable": [
														{
															"key": "processInstanceId",
															"value": "<string>",
															"description": "(Required) The ID of an instance of a process. Given process instance should have only one execution running at the time. Otherwise this method will fail."
														},
														{
															"key": "messageName",
															"value": "<string>",
															"description": "(Required) The name of the message to trigger."
														}
													]
												},
												"description": "Passes the message event to the workflow engine. It will pass on this specific event to the engine with the given name, process instance and variables."
											},
											"response": [
												{
													"name": "The message event has been successfully passed.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Basic <credentials>",
																"description": "Added as a part of security scheme: basic"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"variables\": {\n    \"sit_c\": {}\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/workflowInstances/:processInstanceId/messageEvents/:messageName",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"workflowInstances",
																":processInstanceId",
																"messageEvents",
																":messageName"
															],
															"variable": [
																{
																	"key": "processInstanceId"
																},
																{
																	"key": "messageName"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "startJobs",
					"item": [
						{
							"name": "Start workflow instances.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"workflowDefinitionId\": \"<uuid>\",\n  \"businessItemIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"businessItemType\": \"GLOBAL\",\n  \"formProperties\": {\n    \"mollit039\": \"<string>\",\n    \"nulla_2a9\": \"<string>\"\n  },\n  \"guestUserId\": \"<uuid>\",\n  \"sendNotification\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/workflowInstances/startJobs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflowInstances",
										"startJobs"
									]
								},
								"description": "Starts multiple workflow instances asynchronously based on the provided request."
							},
							"response": [
								{
									"name": "Workflow instances successfully started.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"workflowDefinitionId\": \"<uuid>\",\n  \"businessItemIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"businessItemType\": \"GLOBAL\",\n  \"formProperties\": {\n    \"mollit039\": \"<string>\",\n    \"nulla_2a9\": \"<string>\"\n  },\n  \"guestUserId\": \"<uuid>\",\n  \"sendNotification\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/workflowInstances/startJobs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"workflowInstances",
												"startJobs"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"Website\",\n  \"createdBy\": \"<uuid>\",\n  \"createdOn\": \"<long>\",\n  \"lastModifiedBy\": \"<uuid>\",\n  \"lastModifiedOn\": \"<long>\",\n  \"system\": \"<boolean>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"userId\": \"<uuid>\",\n  \"visibility\": \"<integer>\",\n  \"progressPercentage\": \"<double>\",\n  \"cancelable\": \"<boolean>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"state\": \"CANCELING\",\n  \"result\": \"NOT_SET\",\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Find workflow instances.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/workflowInstances?offset=0&limit=0&countLimit=-1&businessItemName=<string>&businessItemId=<uuid>&workflowDefinitionId=<string>&workflowDefinitionName=<string>&sortField=START_DATE&sortOrder=DESC&parentWorkflowInstanceId=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflowInstances"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
								},
								{
									"key": "limit",
									"value": "0",
									"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
								},
								{
									"key": "countLimit",
									"value": "-1",
									"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
								},
								{
									"key": "businessItemName",
									"value": "<string>",
									"description": "The display name of the business item that should be contained by the searched workflows."
								},
								{
									"key": "businessItemId",
									"value": "<uuid>",
									"description": "The ID of the business item that should be contained by the searched workflows."
								},
								{
									"key": "workflowDefinitionId",
									"value": "<string>",
									"description": "The ID of the workflow definition."
								},
								{
									"key": "workflowDefinitionName",
									"value": "<string>",
									"description": "The name (or a part of it) of the workflow definition."
								},
								{
									"key": "sortField",
									"value": "START_DATE",
									"description": "The field on which the results are sorted."
								},
								{
									"key": "sortOrder",
									"value": "DESC",
									"description": "The sorting order."
								},
								{
									"key": "parentWorkflowInstanceId",
									"value": "<string>",
									"description": "The ID of the parent workflow instance."
								}
							]
						},
						"description": "Returns workflow instances matching given search criteria.<p>Only parameters that are specified in this request and have not <code>null</code> values are used for filtering. All other parameters are ignored. The returned workflow instances satisfy all constraints that are specified in this search criteria."
					},
					"response": [
						{
							"name": "The found workflow instances.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/workflowInstances?offset=0&limit=0&countLimit=-1&businessItemName=<string>&businessItemId=<uuid>&workflowDefinitionId=<string>&workflowDefinitionName=<string>&sortField=START_DATE&sortOrder=DESC&parentWorkflowInstanceId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflowInstances"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
										},
										{
											"key": "businessItemName",
											"value": "<string>",
											"description": "The display name of the business item that should be contained by the searched workflows."
										},
										{
											"key": "businessItemId",
											"value": "<uuid>",
											"description": "The ID of the business item that should be contained by the searched workflows."
										},
										{
											"key": "workflowDefinitionId",
											"value": "<string>",
											"description": "The ID of the workflow definition."
										},
										{
											"key": "workflowDefinitionName",
											"value": "<string>",
											"description": "The name (or a part of it) of the workflow definition."
										},
										{
											"key": "sortField",
											"value": "START_DATE",
											"description": "The field on which the results are sorted."
										},
										{
											"key": "sortOrder",
											"value": "DESC",
											"description": "The sorting order."
										},
										{
											"key": "parentWorkflowInstanceId",
											"value": "<string>",
											"description": "The ID of the parent workflow instance."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": \"<long>\",\n  \"offset\": \"<long>\",\n  \"limit\": \"<long>\"\n}"
						}
					]
				},
				{
					"name": "Start workflow instances.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"workflowDefinitionId\": \"<uuid>\",\n  \"businessItemIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"businessItemType\": \"GLOBAL\",\n  \"formProperties\": {\n    \"mollit039\": \"<string>\",\n    \"nulla_2a9\": \"<string>\"\n  },\n  \"guestUserId\": \"<uuid>\",\n  \"sendNotification\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/workflowInstances",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflowInstances"
							]
						},
						"description": "Starts multiple workflow instances based on the provided request."
					},
					"response": [
						{
							"name": "Workflow instances successfully started.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"workflowDefinitionId\": \"<uuid>\",\n  \"businessItemIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"businessItemType\": \"GLOBAL\",\n  \"formProperties\": {\n    \"mollit039\": \"<string>\",\n    \"nulla_2a9\": \"<string>\"\n  },\n  \"guestUserId\": \"<uuid>\",\n  \"sendNotification\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/workflowInstances",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflowInstances"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"DataQualityMetric\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"workflowDefinition\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationLeg\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\",\n      \"processId\": \"<string>\"\n    },\n    \"subInstances\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/WorkflowInstance detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/WorkflowInstance detected>\"\n      }\n    ],\n    \"subProcessInstancesCount\": \"<long>\",\n    \"parentWorkflowInstanceId\": \"<string>\",\n    \"businessItem\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Responsibility\",\n      \"resourceDiscriminator\": \"<string>\"\n    },\n    \"tasks\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"AssetType\",\n        \"system\": \"<boolean>\",\n        \"workflowDefinition\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"AttributeType\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\",\n          \"processId\": \"<string>\"\n        },\n        \"workflowInstanceId\": \"<uuid>\",\n        \"key\": \"<string>\",\n        \"type\": \"<string>\",\n        \"aggregationKey\": \"<string>\",\n        \"priority\": \"<integer>\",\n        \"owner\": \"<string>\",\n        \"candidateUsers\": [\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"DiagramPicture\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"userName\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"emailAddress\": \"<string>\",\n            \"gender\": \"FEMALE\",\n            \"language\": \"<string>\",\n            \"additionalEmailAddresses\": [\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"RelationType\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"emailAddress\": \"<string>\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"Website\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"emailAddress\": \"<string>\"\n              }\n            ],\n            \"phoneNumbers\": [\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"ExcelIngestionProperties\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"type\": \"MOBILE\",\n                \"phoneNumber\": \"<string>\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"Responsibility\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"type\": \"MOBILE\",\n                \"phoneNumber\": \"<string>\"\n              }\n            ],\n            \"instantMessagingAccounts\": [\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"UserGroup\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"account\": \"<string>\",\n                \"type\": \"SKYPE\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"AdvancedDataType\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"account\": \"<string>\",\n                \"type\": \"SKYPE\"\n              }\n            ],\n            \"websites\": [\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"ExcelIngestionProperties\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"url\": \"<string>\",\n                \"type\": \"LINKEDIN\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"RelationType\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"url\": \"<string>\",\n                \"type\": \"WEBSITE\"\n              }\n            ],\n            \"addresses\": [\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"AssetType\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"city\": \"<string>\",\n                \"street\": \"<string>\",\n                \"number\": \"<string>\",\n                \"state\": \"<string>\",\n                \"country\": \"<string>\",\n                \"postalCode\": \"<string>\",\n                \"type\": \"HOME\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"DataQualityRule\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"city\": \"<string>\",\n                \"street\": \"<string>\",\n                \"number\": \"<string>\",\n                \"state\": \"<string>\",\n                \"country\": \"<string>\",\n                \"postalCode\": \"<string>\",\n                \"type\": \"HOME\"\n              }\n            ],\n            \"activated\": \"<boolean>\",\n            \"enabled\": \"<boolean>\",\n            \"ldapUser\": \"<boolean>\",\n            \"userSource\": \"INTERNAL\",\n            \"guestUser\": \"<boolean>\",\n            \"apiUser\": \"<boolean>\",\n            \"licenseType\": \"AUTHOR\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"Asset\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"userName\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"emailAddress\": \"<string>\",\n            \"gender\": \"MALE\",\n            \"language\": \"<string>\",\n            \"additionalEmailAddresses\": [\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"PhoneNumber\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"emailAddress\": \"<string>\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"DataQualityRule\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"emailAddress\": \"<string>\"\n              }\n            ],\n            \"phoneNumbers\": [\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"ComplexRelationAttributeType\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"type\": \"PAGER\",\n                \"phoneNumber\": \"<string>\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"ExcelIngestionProperties\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"type\": \"PRIVATE\",\n                \"phoneNumber\": \"<string>\"\n              }\n            ],\n            \"instantMessagingAccounts\": [\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"PhysicalDataConnector\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"account\": \"<string>\",\n                \"type\": \"AOL\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"Attribute\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"account\": \"<string>\",\n                \"type\": \"YAHOO_MESSENGER\"\n              }\n            ],\n            \"websites\": [\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"PhysicalDataConnector\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"url\": \"<string>\",\n                \"type\": \"LINKEDIN\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"Assignment\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"url\": \"<string>\",\n                \"type\": \"TWITTER\"\n              }\n            ],\n            \"addresses\": [\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"Scope\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"city\": \"<string>\",\n                \"street\": \"<string>\",\n                \"number\": \"<string>\",\n                \"state\": \"<string>\",\n                \"country\": \"<string>\",\n                \"postalCode\": \"<string>\",\n                \"type\": \"HOME\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"Attribute\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"city\": \"<string>\",\n                \"street\": \"<string>\",\n                \"number\": \"<string>\",\n                \"state\": \"<string>\",\n                \"country\": \"<string>\",\n                \"postalCode\": \"<string>\",\n                \"type\": \"HOME\"\n              }\n            ],\n            \"activated\": \"<boolean>\",\n            \"enabled\": \"<boolean>\",\n            \"ldapUser\": \"<boolean>\",\n            \"userSource\": \"LDAP\",\n            \"guestUser\": \"<boolean>\",\n            \"apiUser\": \"<boolean>\",\n            \"licenseType\": \"AUTHOR\"\n          }\n        ],\n        \"createTime\": \"<long>\",\n        \"dueDate\": \"<long>\",\n        \"cancelable\": \"<boolean>\",\n        \"reassignable\": \"<boolean>\",\n        \"formRequired\": \"<boolean>\",\n        \"formKeyAvailable\": \"<boolean>\",\n        \"containsActivityStream\": \"<boolean>\",\n        \"inError\": \"<boolean>\",\n        \"errorMessage\": \"<string>\",\n        \"customButtons\": [\n          {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"writable\": \"<boolean>\",\n            \"required\": \"<boolean>\",\n            \"enumValues\": [\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              },\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              }\n            ],\n            \"checkButtons\": [\n              {\n                \"label\": \"<string>\",\n                \"value\": \"<string>\"\n              },\n              {\n                \"label\": \"<string>\",\n                \"value\": \"<string>\"\n              }\n            ],\n            \"radioButtons\": [\n              {\n                \"label\": \"<string>\",\n                \"value\": \"<string>\"\n              },\n              {\n                \"label\": \"<string>\",\n                \"value\": \"<string>\"\n              }\n            ],\n            \"defaultDropdownValues\": [\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              },\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              }\n            ],\n            \"proposedDropdownValues\": [\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              },\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              }\n            ],\n            \"dateTimeType\": \"<string>\",\n            \"multiValue\": \"<boolean>\",\n            \"proposedFixed\": \"<boolean>\",\n            \"defaultFromResource\": \"<boolean>\",\n            \"multiDefaultDropdownValues\": {\n              \"reprehenderit3a\": [\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                },\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                }\n              ],\n              \"cillum_b3\": [\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                },\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                }\n              ]\n            },\n            \"multiProposedDropdownValues\": {\n              \"tempor7a\": [\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                },\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                }\n              ],\n              \"do_27\": [\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                },\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                }\n              ],\n              \"id823\": [\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                },\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                }\n              ]\n            },\n            \"assetType\": {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"WorkflowTask\",\n              \"resourceDiscriminator\": \"<string>\"\n            },\n            \"assetTypeIds\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ],\n            \"communityIds\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ],\n            \"domainIds\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ],\n            \"statusIds\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ],\n            \"helpText\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"writable\": \"<boolean>\",\n            \"required\": \"<boolean>\",\n            \"enumValues\": [\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              },\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              }\n            ],\n            \"checkButtons\": [\n              {\n                \"label\": \"<string>\",\n                \"value\": \"<string>\"\n              },\n              {\n                \"label\": \"<string>\",\n                \"value\": \"<string>\"\n              }\n            ],\n            \"radioButtons\": [\n              {\n                \"label\": \"<string>\",\n                \"value\": \"<string>\"\n              },\n              {\n                \"label\": \"<string>\",\n                \"value\": \"<string>\"\n              }\n            ],\n            \"defaultDropdownValues\": [\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              },\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              }\n            ],\n            \"proposedDropdownValues\": [\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              },\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              }\n            ],\n            \"dateTimeType\": \"<string>\",\n            \"multiValue\": \"<boolean>\",\n            \"proposedFixed\": \"<boolean>\",\n            \"defaultFromResource\": \"<boolean>\",\n            \"multiDefaultDropdownValues\": {\n              \"labore_0f9\": [\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                },\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                }\n              ],\n              \"dolore0_\": [\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                },\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                }\n              ],\n              \"sit_1\": [\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                },\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                }\n              ],\n              \"tempor5_\": [\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                },\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                }\n              ]\n            },\n            \"multiProposedDropdownValues\": {\n              \"nisi2ff\": [\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                },\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                }\n              ]\n            },\n            \"assetType\": {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"ScriptAttributeType\",\n              \"resourceDiscriminator\": \"<string>\"\n            },\n            \"assetTypeIds\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ],\n            \"communityIds\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ],\n            \"domainIds\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ],\n            \"statusIds\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ],\n            \"helpText\": \"<string>\"\n          }\n        ],\n        \"description\": \"<string>\",\n        \"title\": \"<string>\",\n        \"businessItem\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Tag\",\n          \"resourceDiscriminator\": \"<string>\"\n        },\n        \"businessItemReference\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"DateAttribute\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"PhysicalDataConnector\",\n        \"system\": \"<boolean>\",\n        \"workflowDefinition\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"InstantMessagingAccount\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\",\n          \"processId\": \"<string>\"\n        },\n        \"workflowInstanceId\": \"<uuid>\",\n        \"key\": \"<string>\",\n        \"type\": \"<string>\",\n        \"aggregationKey\": \"<string>\",\n        \"priority\": \"<integer>\",\n        \"owner\": \"<string>\",\n        \"candidateUsers\": [\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"AdvancedDataType\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"userName\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"emailAddress\": \"<string>\",\n            \"gender\": \"UNKNOWN\",\n            \"language\": \"<string>\",\n            \"additionalEmailAddresses\": [\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"Address\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"emailAddress\": \"<string>\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"InstantMessagingAccount\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"emailAddress\": \"<string>\"\n              }\n            ],\n            \"phoneNumbers\": [\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"ExcelIngestionProperties\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"type\": \"FAX\",\n                \"phoneNumber\": \"<string>\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"Address\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"type\": \"MOBILE\",\n                \"phoneNumber\": \"<string>\"\n              }\n            ],\n            \"instantMessagingAccounts\": [\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"PhysicalDataConnector\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"account\": \"<string>\",\n                \"type\": \"SKYPE\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"PhoneNumber\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"account\": \"<string>\",\n                \"type\": \"YAHOO_MESSENGER\"\n              }\n            ],\n            \"websites\": [\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"AdvancedDataType\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"url\": \"<string>\",\n                \"type\": \"MYSPACE\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"CsvIngestionProperties\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"url\": \"<string>\",\n                \"type\": \"MYSPACE\"\n              }\n            ],\n            \"addresses\": [\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"Assignment\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"city\": \"<string>\",\n                \"street\": \"<string>\",\n                \"number\": \"<string>\",\n                \"state\": \"<string>\",\n                \"country\": \"<string>\",\n                \"postalCode\": \"<string>\",\n                \"type\": \"WORK\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"Workflow\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"city\": \"<string>\",\n                \"street\": \"<string>\",\n                \"number\": \"<string>\",\n                \"state\": \"<string>\",\n                \"country\": \"<string>\",\n                \"postalCode\": \"<string>\",\n                \"type\": \"WORK\"\n              }\n            ],\n            \"activated\": \"<boolean>\",\n            \"enabled\": \"<boolean>\",\n            \"ldapUser\": \"<boolean>\",\n            \"userSource\": \"SSO\",\n            \"guestUser\": \"<boolean>\",\n            \"apiUser\": \"<boolean>\",\n            \"licenseType\": \"CONSUMER\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"ExcelIngestionProperties\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"userName\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"emailAddress\": \"<string>\",\n            \"gender\": \"UNKNOWN\",\n            \"language\": \"<string>\",\n            \"additionalEmailAddresses\": [\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"RelationTrace\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"emailAddress\": \"<string>\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"Notification\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"emailAddress\": \"<string>\"\n              }\n            ],\n            \"phoneNumbers\": [\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"Notification\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"type\": \"FAX\",\n                \"phoneNumber\": \"<string>\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"ComplexRelationType\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"type\": \"WORK\",\n                \"phoneNumber\": \"<string>\"\n              }\n            ],\n            \"instantMessagingAccounts\": [\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"UserGroup\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"account\": \"<string>\",\n                \"type\": \"ICQ\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"Domain\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"account\": \"<string>\",\n                \"type\": \"AOL\"\n              }\n            ],\n            \"websites\": [\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"Rating\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"url\": \"<string>\",\n                \"type\": \"TWITTER\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"Attachment\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"url\": \"<string>\",\n                \"type\": \"FACEBOOK\"\n              }\n            ],\n            \"addresses\": [\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"JdbcDriverFile\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"city\": \"<string>\",\n                \"street\": \"<string>\",\n                \"number\": \"<string>\",\n                \"state\": \"<string>\",\n                \"country\": \"<string>\",\n                \"postalCode\": \"<string>\",\n                \"type\": \"WORK\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"ConnectionStringParameter\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"city\": \"<string>\",\n                \"street\": \"<string>\",\n                \"number\": \"<string>\",\n                \"state\": \"<string>\",\n                \"country\": \"<string>\",\n                \"postalCode\": \"<string>\",\n                \"type\": \"HOME\"\n              }\n            ],\n            \"activated\": \"<boolean>\",\n            \"enabled\": \"<boolean>\",\n            \"ldapUser\": \"<boolean>\",\n            \"userSource\": \"INTERNAL\",\n            \"guestUser\": \"<boolean>\",\n            \"apiUser\": \"<boolean>\",\n            \"licenseType\": \"AUTHOR\"\n          }\n        ],\n        \"createTime\": \"<long>\",\n        \"dueDate\": \"<long>\",\n        \"cancelable\": \"<boolean>\",\n        \"reassignable\": \"<boolean>\",\n        \"formRequired\": \"<boolean>\",\n        \"formKeyAvailable\": \"<boolean>\",\n        \"containsActivityStream\": \"<boolean>\",\n        \"inError\": \"<boolean>\",\n        \"errorMessage\": \"<string>\",\n        \"customButtons\": [\n          {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"writable\": \"<boolean>\",\n            \"required\": \"<boolean>\",\n            \"enumValues\": [\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              },\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              }\n            ],\n            \"checkButtons\": [\n              {\n                \"label\": \"<string>\",\n                \"value\": \"<string>\"\n              },\n              {\n                \"label\": \"<string>\",\n                \"value\": \"<string>\"\n              }\n            ],\n            \"radioButtons\": [\n              {\n                \"label\": \"<string>\",\n                \"value\": \"<string>\"\n              },\n              {\n                \"label\": \"<string>\",\n                \"value\": \"<string>\"\n              }\n            ],\n            \"defaultDropdownValues\": [\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              },\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              }\n            ],\n            \"proposedDropdownValues\": [\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              },\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              }\n            ],\n            \"dateTimeType\": \"<string>\",\n            \"multiValue\": \"<boolean>\",\n            \"proposedFixed\": \"<boolean>\",\n            \"defaultFromResource\": \"<boolean>\",\n            \"multiDefaultDropdownValues\": {\n              \"minim_db\": [\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                },\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                }\n              ],\n              \"voluptate0\": [\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                },\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                }\n              ],\n              \"commodo84\": [\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                },\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                }\n              ]\n            },\n            \"multiProposedDropdownValues\": {\n              \"irure9\": [\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                },\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                }\n              ],\n              \"reprehenderit__\": [\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                },\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                }\n              ]\n            },\n            \"assetType\": {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"WorkflowTask\",\n              \"resourceDiscriminator\": \"<string>\"\n            },\n            \"assetTypeIds\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ],\n            \"communityIds\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ],\n            \"domainIds\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ],\n            \"statusIds\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ],\n            \"helpText\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"writable\": \"<boolean>\",\n            \"required\": \"<boolean>\",\n            \"enumValues\": [\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              },\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              }\n            ],\n            \"checkButtons\": [\n              {\n                \"label\": \"<string>\",\n                \"value\": \"<string>\"\n              },\n              {\n                \"label\": \"<string>\",\n                \"value\": \"<string>\"\n              }\n            ],\n            \"radioButtons\": [\n              {\n                \"label\": \"<string>\",\n                \"value\": \"<string>\"\n              },\n              {\n                \"label\": \"<string>\",\n                \"value\": \"<string>\"\n              }\n            ],\n            \"defaultDropdownValues\": [\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              },\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              }\n            ],\n            \"proposedDropdownValues\": [\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              },\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              }\n            ],\n            \"dateTimeType\": \"<string>\",\n            \"multiValue\": \"<boolean>\",\n            \"proposedFixed\": \"<boolean>\",\n            \"defaultFromResource\": \"<boolean>\",\n            \"multiDefaultDropdownValues\": {\n              \"laborum_6\": [\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                },\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                }\n              ],\n              \"Excepteurd\": [\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                },\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                }\n              ]\n            },\n            \"multiProposedDropdownValues\": {\n              \"eu_6\": [\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                },\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                }\n              ],\n              \"quifb7\": [\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                },\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                }\n              ],\n              \"irure8e\": [\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                },\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                }\n              ]\n            },\n            \"assetType\": {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"ComplexRelationLegType\",\n              \"resourceDiscriminator\": \"<string>\"\n            },\n            \"assetTypeIds\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ],\n            \"communityIds\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ],\n            \"domainIds\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ],\n            \"statusIds\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ],\n            \"helpText\": \"<string>\"\n          }\n        ],\n        \"description\": \"<string>\",\n        \"title\": \"<string>\",\n        \"businessItem\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"BooleanAttributeType\",\n          \"resourceDiscriminator\": \"<string>\"\n        },\n        \"businessItemReference\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ConnectionStringParameter\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      }\n    ],\n    \"startDate\": \"<long>\",\n    \"ended\": \"<boolean>\",\n    \"createdAssetId\": \"<uuid>\",\n    \"inError\": \"<boolean>\",\n    \"errorMessage\": \"<string>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Responsibility\",\n    \"createdBy\": \"<uuid>\",\n    \"createdOn\": \"<long>\",\n    \"lastModifiedBy\": \"<uuid>\",\n    \"lastModifiedOn\": \"<long>\",\n    \"system\": \"<boolean>\",\n    \"workflowDefinition\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Scope\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\",\n      \"processId\": \"<string>\"\n    },\n    \"subInstances\": [\n      {\n        \"value\": \"<Circular reference to #/components/schemas/WorkflowInstance detected>\"\n      },\n      {\n        \"value\": \"<Circular reference to #/components/schemas/WorkflowInstance detected>\"\n      }\n    ],\n    \"subProcessInstancesCount\": \"<long>\",\n    \"parentWorkflowInstanceId\": \"<string>\",\n    \"businessItem\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Workflow\",\n      \"resourceDiscriminator\": \"<string>\"\n    },\n    \"tasks\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ComplexRelation\",\n        \"system\": \"<boolean>\",\n        \"workflowDefinition\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"NumericAttribute\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\",\n          \"processId\": \"<string>\"\n        },\n        \"workflowInstanceId\": \"<uuid>\",\n        \"key\": \"<string>\",\n        \"type\": \"<string>\",\n        \"aggregationKey\": \"<string>\",\n        \"priority\": \"<integer>\",\n        \"owner\": \"<string>\",\n        \"candidateUsers\": [\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"DiagramPicture\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"userName\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"emailAddress\": \"<string>\",\n            \"gender\": \"MALE\",\n            \"language\": \"<string>\",\n            \"additionalEmailAddresses\": [\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"NumericAttributeType\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"emailAddress\": \"<string>\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"NumericAttribute\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"emailAddress\": \"<string>\"\n              }\n            ],\n            \"phoneNumbers\": [\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"ScriptAttribute\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"type\": \"PAGER\",\n                \"phoneNumber\": \"<string>\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"ViewSharingRule\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"type\": \"MOBILE\",\n                \"phoneNumber\": \"<string>\"\n              }\n            ],\n            \"instantMessagingAccounts\": [\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"DateAttributeType\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"account\": \"<string>\",\n                \"type\": \"LIVE_MESSENGER\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"ConnectionStringParameter\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"account\": \"<string>\",\n                \"type\": \"LIVE_MESSENGER\"\n              }\n            ],\n            \"websites\": [\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"Assignment\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"url\": \"<string>\",\n                \"type\": \"WEBSITE\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"WorkflowInstance\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"url\": \"<string>\",\n                \"type\": \"FACEBOOK\"\n              }\n            ],\n            \"addresses\": [\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"ComplexRelation\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"city\": \"<string>\",\n                \"street\": \"<string>\",\n                \"number\": \"<string>\",\n                \"state\": \"<string>\",\n                \"country\": \"<string>\",\n                \"postalCode\": \"<string>\",\n                \"type\": \"HOME\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"AssignedCharacteristicType\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"city\": \"<string>\",\n                \"street\": \"<string>\",\n                \"number\": \"<string>\",\n                \"state\": \"<string>\",\n                \"country\": \"<string>\",\n                \"postalCode\": \"<string>\",\n                \"type\": \"HOME\"\n              }\n            ],\n            \"activated\": \"<boolean>\",\n            \"enabled\": \"<boolean>\",\n            \"ldapUser\": \"<boolean>\",\n            \"userSource\": \"SSO\",\n            \"guestUser\": \"<boolean>\",\n            \"apiUser\": \"<boolean>\",\n            \"licenseType\": \"CONSUMER\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"View\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"userName\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"emailAddress\": \"<string>\",\n            \"gender\": \"UNKNOWN\",\n            \"language\": \"<string>\",\n            \"additionalEmailAddresses\": [\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"SingleValueListAttribute\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"emailAddress\": \"<string>\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"Status\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"emailAddress\": \"<string>\"\n              }\n            ],\n            \"phoneNumbers\": [\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"ClassificationMatch\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"type\": \"OTHER\",\n                \"phoneNumber\": \"<string>\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"ViewAssignmentRule\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"type\": \"PAGER\",\n                \"phoneNumber\": \"<string>\"\n              }\n            ],\n            \"instantMessagingAccounts\": [\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"Notification\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"account\": \"<string>\",\n                \"type\": \"JABBER\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"ComplexRelation\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"account\": \"<string>\",\n                \"type\": \"LIVE_MESSENGER\"\n              }\n            ],\n            \"websites\": [\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"Scope\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"url\": \"<string>\",\n                \"type\": \"MYSPACE\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"Assignment\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"url\": \"<string>\",\n                \"type\": \"FACEBOOK\"\n              }\n            ],\n            \"addresses\": [\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"DiagramPictureAssignmentRule\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"city\": \"<string>\",\n                \"street\": \"<string>\",\n                \"number\": \"<string>\",\n                \"state\": \"<string>\",\n                \"country\": \"<string>\",\n                \"postalCode\": \"<string>\",\n                \"type\": \"HOME\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"BooleanAttributeType\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"city\": \"<string>\",\n                \"street\": \"<string>\",\n                \"number\": \"<string>\",\n                \"state\": \"<string>\",\n                \"country\": \"<string>\",\n                \"postalCode\": \"<string>\",\n                \"type\": \"HOME\"\n              }\n            ],\n            \"activated\": \"<boolean>\",\n            \"enabled\": \"<boolean>\",\n            \"ldapUser\": \"<boolean>\",\n            \"userSource\": \"INTERNAL\",\n            \"guestUser\": \"<boolean>\",\n            \"apiUser\": \"<boolean>\",\n            \"licenseType\": \"AUTHOR\"\n          }\n        ],\n        \"createTime\": \"<long>\",\n        \"dueDate\": \"<long>\",\n        \"cancelable\": \"<boolean>\",\n        \"reassignable\": \"<boolean>\",\n        \"formRequired\": \"<boolean>\",\n        \"formKeyAvailable\": \"<boolean>\",\n        \"containsActivityStream\": \"<boolean>\",\n        \"inError\": \"<boolean>\",\n        \"errorMessage\": \"<string>\",\n        \"customButtons\": [\n          {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"writable\": \"<boolean>\",\n            \"required\": \"<boolean>\",\n            \"enumValues\": [\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              },\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              }\n            ],\n            \"checkButtons\": [\n              {\n                \"label\": \"<string>\",\n                \"value\": \"<string>\"\n              },\n              {\n                \"label\": \"<string>\",\n                \"value\": \"<string>\"\n              }\n            ],\n            \"radioButtons\": [\n              {\n                \"label\": \"<string>\",\n                \"value\": \"<string>\"\n              },\n              {\n                \"label\": \"<string>\",\n                \"value\": \"<string>\"\n              }\n            ],\n            \"defaultDropdownValues\": [\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              },\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              }\n            ],\n            \"proposedDropdownValues\": [\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              },\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              }\n            ],\n            \"dateTimeType\": \"<string>\",\n            \"multiValue\": \"<boolean>\",\n            \"proposedFixed\": \"<boolean>\",\n            \"defaultFromResource\": \"<boolean>\",\n            \"multiDefaultDropdownValues\": {\n              \"non__1\": [\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                },\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                }\n              ]\n            },\n            \"multiProposedDropdownValues\": {\n              \"cupidatatbb\": [\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                },\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                }\n              ]\n            },\n            \"assetType\": {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"ViewSharingRule\",\n              \"resourceDiscriminator\": \"<string>\"\n            },\n            \"assetTypeIds\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ],\n            \"communityIds\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ],\n            \"domainIds\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ],\n            \"statusIds\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ],\n            \"helpText\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"writable\": \"<boolean>\",\n            \"required\": \"<boolean>\",\n            \"enumValues\": [\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              },\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              }\n            ],\n            \"checkButtons\": [\n              {\n                \"label\": \"<string>\",\n                \"value\": \"<string>\"\n              },\n              {\n                \"label\": \"<string>\",\n                \"value\": \"<string>\"\n              }\n            ],\n            \"radioButtons\": [\n              {\n                \"label\": \"<string>\",\n                \"value\": \"<string>\"\n              },\n              {\n                \"label\": \"<string>\",\n                \"value\": \"<string>\"\n              }\n            ],\n            \"defaultDropdownValues\": [\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              },\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              }\n            ],\n            \"proposedDropdownValues\": [\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              },\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              }\n            ],\n            \"dateTimeType\": \"<string>\",\n            \"multiValue\": \"<boolean>\",\n            \"proposedFixed\": \"<boolean>\",\n            \"defaultFromResource\": \"<boolean>\",\n            \"multiDefaultDropdownValues\": {\n              \"occaecat_dd\": [\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                },\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                }\n              ]\n            },\n            \"multiProposedDropdownValues\": {\n              \"enim_7\": [\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                },\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                }\n              ],\n              \"dolorec\": [\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                },\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                }\n              ]\n            },\n            \"assetType\": {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"ViewSharingRule\",\n              \"resourceDiscriminator\": \"<string>\"\n            },\n            \"assetTypeIds\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ],\n            \"communityIds\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ],\n            \"domainIds\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ],\n            \"statusIds\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ],\n            \"helpText\": \"<string>\"\n          }\n        ],\n        \"description\": \"<string>\",\n        \"title\": \"<string>\",\n        \"businessItem\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Relation\",\n          \"resourceDiscriminator\": \"<string>\"\n        },\n        \"businessItemReference\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ComplexRelationLeg\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"StringAttributeType\",\n        \"system\": \"<boolean>\",\n        \"workflowDefinition\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Asset\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\",\n          \"processId\": \"<string>\"\n        },\n        \"workflowInstanceId\": \"<uuid>\",\n        \"key\": \"<string>\",\n        \"type\": \"<string>\",\n        \"aggregationKey\": \"<string>\",\n        \"priority\": \"<integer>\",\n        \"owner\": \"<string>\",\n        \"candidateUsers\": [\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"ConnectionStringParameter\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"userName\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"emailAddress\": \"<string>\",\n            \"gender\": \"MALE\",\n            \"language\": \"<string>\",\n            \"additionalEmailAddresses\": [\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"ConnectionStringParameter\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"emailAddress\": \"<string>\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"SingleValueListAttribute\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"emailAddress\": \"<string>\"\n              }\n            ],\n            \"phoneNumbers\": [\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"StringAttribute\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"type\": \"OTHER\",\n                \"phoneNumber\": \"<string>\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"Scope\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"type\": \"MOBILE\",\n                \"phoneNumber\": \"<string>\"\n              }\n            ],\n            \"instantMessagingAccounts\": [\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"AssignedCharacteristicType\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"account\": \"<string>\",\n                \"type\": \"LIVE_MESSENGER\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"ScriptAttribute\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"account\": \"<string>\",\n                \"type\": \"GTALK\"\n              }\n            ],\n            \"websites\": [\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"DiagramPictureSharingRule\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"url\": \"<string>\",\n                \"type\": \"FACEBOOK\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"Status\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"url\": \"<string>\",\n                \"type\": \"MYSPACE\"\n              }\n            ],\n            \"addresses\": [\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"WorkflowInstance\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"city\": \"<string>\",\n                \"street\": \"<string>\",\n                \"number\": \"<string>\",\n                \"state\": \"<string>\",\n                \"country\": \"<string>\",\n                \"postalCode\": \"<string>\",\n                \"type\": \"WORK\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"Comment\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"city\": \"<string>\",\n                \"street\": \"<string>\",\n                \"number\": \"<string>\",\n                \"state\": \"<string>\",\n                \"country\": \"<string>\",\n                \"postalCode\": \"<string>\",\n                \"type\": \"WORK\"\n              }\n            ],\n            \"activated\": \"<boolean>\",\n            \"enabled\": \"<boolean>\",\n            \"ldapUser\": \"<boolean>\",\n            \"userSource\": \"SSO\",\n            \"guestUser\": \"<boolean>\",\n            \"apiUser\": \"<boolean>\",\n            \"licenseType\": \"CONSUMER\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"Workflow\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"userName\": \"<string>\",\n            \"firstName\": \"<string>\",\n            \"lastName\": \"<string>\",\n            \"emailAddress\": \"<string>\",\n            \"gender\": \"UNKNOWN\",\n            \"language\": \"<string>\",\n            \"additionalEmailAddresses\": [\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"Relation\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"emailAddress\": \"<string>\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"Relation\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"emailAddress\": \"<string>\"\n              }\n            ],\n            \"phoneNumbers\": [\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"StringAttributeType\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"type\": \"PRIVATE\",\n                \"phoneNumber\": \"<string>\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"Attachment\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"type\": \"FAX\",\n                \"phoneNumber\": \"<string>\"\n              }\n            ],\n            \"instantMessagingAccounts\": [\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"PhoneNumber\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"account\": \"<string>\",\n                \"type\": \"AOL\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"Activity\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"account\": \"<string>\",\n                \"type\": \"SKYPE\"\n              }\n            ],\n            \"websites\": [\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"Role\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"url\": \"<string>\",\n                \"type\": \"TWITTER\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"DomainType\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"url\": \"<string>\",\n                \"type\": \"FACEBOOK\"\n              }\n            ],\n            \"addresses\": [\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"DateTimeAttributeType\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"city\": \"<string>\",\n                \"street\": \"<string>\",\n                \"number\": \"<string>\",\n                \"state\": \"<string>\",\n                \"country\": \"<string>\",\n                \"postalCode\": \"<string>\",\n                \"type\": \"HOME\"\n              },\n              {\n                \"id\": \"<uuid>\",\n                \"resourceType\": \"Domain\",\n                \"createdBy\": \"<uuid>\",\n                \"createdOn\": \"<long>\",\n                \"lastModifiedBy\": \"<uuid>\",\n                \"lastModifiedOn\": \"<long>\",\n                \"system\": \"<boolean>\",\n                \"city\": \"<string>\",\n                \"street\": \"<string>\",\n                \"number\": \"<string>\",\n                \"state\": \"<string>\",\n                \"country\": \"<string>\",\n                \"postalCode\": \"<string>\",\n                \"type\": \"WORK\"\n              }\n            ],\n            \"activated\": \"<boolean>\",\n            \"enabled\": \"<boolean>\",\n            \"ldapUser\": \"<boolean>\",\n            \"userSource\": \"SSO\",\n            \"guestUser\": \"<boolean>\",\n            \"apiUser\": \"<boolean>\",\n            \"licenseType\": \"CONSUMER\"\n          }\n        ],\n        \"createTime\": \"<long>\",\n        \"dueDate\": \"<long>\",\n        \"cancelable\": \"<boolean>\",\n        \"reassignable\": \"<boolean>\",\n        \"formRequired\": \"<boolean>\",\n        \"formKeyAvailable\": \"<boolean>\",\n        \"containsActivityStream\": \"<boolean>\",\n        \"inError\": \"<boolean>\",\n        \"errorMessage\": \"<string>\",\n        \"customButtons\": [\n          {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"writable\": \"<boolean>\",\n            \"required\": \"<boolean>\",\n            \"enumValues\": [\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              },\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              }\n            ],\n            \"checkButtons\": [\n              {\n                \"label\": \"<string>\",\n                \"value\": \"<string>\"\n              },\n              {\n                \"label\": \"<string>\",\n                \"value\": \"<string>\"\n              }\n            ],\n            \"radioButtons\": [\n              {\n                \"label\": \"<string>\",\n                \"value\": \"<string>\"\n              },\n              {\n                \"label\": \"<string>\",\n                \"value\": \"<string>\"\n              }\n            ],\n            \"defaultDropdownValues\": [\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              },\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              }\n            ],\n            \"proposedDropdownValues\": [\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              },\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              }\n            ],\n            \"dateTimeType\": \"<string>\",\n            \"multiValue\": \"<boolean>\",\n            \"proposedFixed\": \"<boolean>\",\n            \"defaultFromResource\": \"<boolean>\",\n            \"multiDefaultDropdownValues\": {\n              \"irure_58\": [\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                },\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                }\n              ]\n            },\n            \"multiProposedDropdownValues\": {\n              \"incididunt9e\": [\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                },\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                }\n              ],\n              \"id_52\": [\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                },\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                }\n              ]\n            },\n            \"assetType\": {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"UserGroup\",\n              \"resourceDiscriminator\": \"<string>\"\n            },\n            \"assetTypeIds\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ],\n            \"communityIds\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ],\n            \"domainIds\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ],\n            \"statusIds\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ],\n            \"helpText\": \"<string>\"\n          },\n          {\n            \"id\": \"<string>\",\n            \"name\": \"<string>\",\n            \"type\": \"<string>\",\n            \"value\": \"<string>\",\n            \"writable\": \"<boolean>\",\n            \"required\": \"<boolean>\",\n            \"enumValues\": [\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              },\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              }\n            ],\n            \"checkButtons\": [\n              {\n                \"label\": \"<string>\",\n                \"value\": \"<string>\"\n              },\n              {\n                \"label\": \"<string>\",\n                \"value\": \"<string>\"\n              }\n            ],\n            \"radioButtons\": [\n              {\n                \"label\": \"<string>\",\n                \"value\": \"<string>\"\n              },\n              {\n                \"label\": \"<string>\",\n                \"value\": \"<string>\"\n              }\n            ],\n            \"defaultDropdownValues\": [\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              },\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              }\n            ],\n            \"proposedDropdownValues\": [\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              },\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              }\n            ],\n            \"dateTimeType\": \"<string>\",\n            \"multiValue\": \"<boolean>\",\n            \"proposedFixed\": \"<boolean>\",\n            \"defaultFromResource\": \"<boolean>\",\n            \"multiDefaultDropdownValues\": {\n              \"tempor_\": [\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                },\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                }\n              ]\n            },\n            \"multiProposedDropdownValues\": {\n              \"ullamco9_\": [\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                },\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                }\n              ],\n              \"consequat_ce3\": [\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                },\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                }\n              ],\n              \"tempor_6\": [\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                },\n                {\n                  \"idAsString\": \"<string>\",\n                  \"parents\": [\n                    \"<string>\",\n                    \"<string>\"\n                  ],\n                  \"id\": \"<uuid>\",\n                  \"text\": \"<string>\"\n                }\n              ]\n            },\n            \"assetType\": {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"ComplexRelationLeg\",\n              \"resourceDiscriminator\": \"<string>\"\n            },\n            \"assetTypeIds\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ],\n            \"communityIds\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ],\n            \"domainIds\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ],\n            \"statusIds\": [\n              \"<uuid>\",\n              \"<uuid>\"\n            ],\n            \"helpText\": \"<string>\"\n          }\n        ],\n        \"description\": \"<string>\",\n        \"title\": \"<string>\",\n        \"businessItem\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Activity\",\n          \"resourceDiscriminator\": \"<string>\"\n        },\n        \"businessItemReference\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Website\",\n          \"resourceDiscriminator\": \"<string>\",\n          \"name\": \"<string>\"\n        }\n      }\n    ],\n    \"startDate\": \"<long>\",\n    \"ended\": \"<boolean>\",\n    \"createdAssetId\": \"<uuid>\",\n    \"inError\": \"<boolean>\",\n    \"errorMessage\": \"<string>\"\n  }\n]"
						},
						{
							"name": "Workflow definition could not be found.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"workflowDefinitionId\": \"<uuid>\",\n  \"businessItemIds\": [\n    \"<uuid>\",\n    \"<uuid>\"\n  ],\n  \"businessItemType\": \"GLOBAL\",\n  \"formProperties\": {\n    \"mollit039\": \"<string>\",\n    \"nulla_2a9\": \"<string>\"\n  },\n  \"guestUserId\": \"<uuid>\",\n  \"sendNotification\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/workflowInstances",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflowInstances"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "workflowTasks",
			"item": [
				{
					"name": "{workflowTaskId}",
					"item": [
						{
							"name": "canceled",
							"item": [
								{
									"name": "Cancel workflow task.",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<string>",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/workflowTasks/:workflowTaskId/canceled",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"workflowTasks",
												":workflowTaskId",
												"canceled"
											],
											"variable": [
												{
													"key": "workflowTaskId",
													"value": "<uuid>",
													"description": "(Required) The ID of the workflow task."
												}
											]
										},
										"description": "Cancels the workflow task with the specified ID with a reason. If the given workflow is a subprocess, this method makes sure everything is cancelled from the root process instance. If the given task is not found, this method will assume it already was cancelled without throwing any error."
									},
									"response": [
										{
											"name": "Task successfully canceled.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/workflowTasks/:workflowTaskId/canceled",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"workflowTasks",
														":workflowTaskId",
														"canceled"
													],
													"variable": [
														{
															"key": "workflowTaskId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Task not found.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "<string>",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/workflowTasks/:workflowTaskId/canceled",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"workflowTasks",
														":workflowTaskId",
														"canceled"
													],
													"variable": [
														{
															"key": "workflowTaskId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "taskFormData",
							"item": [
								{
									"name": "Get task form data.",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/workflowTasks/:workflowTaskId/taskFormData?formPropertyType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"workflowTasks",
												":workflowTaskId",
												"taskFormData"
											],
											"query": [
												{
													"key": "formPropertyType",
													"value": "<string>",
													"description": "Form property type."
												}
											],
											"variable": [
												{
													"key": "workflowTaskId",
													"value": "<uuid>",
													"description": "(Required) Workflow task ID."
												}
											]
										},
										"description": "Returns the task form data of the workflow task with the specified ID and form property type."
									},
									"response": [
										{
											"name": "Workflow task form data successfully found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/workflowTasks/:workflowTaskId/taskFormData?formPropertyType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"workflowTasks",
														":workflowTaskId",
														"taskFormData"
													],
													"query": [
														{
															"key": "formPropertyType",
															"value": "<string>",
															"description": "Form property type."
														}
													],
													"variable": [
														{
															"key": "workflowTaskId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"formKey\": \"<string>\",\n  \"formProperties\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"value\": \"<string>\",\n      \"writable\": \"<boolean>\",\n      \"required\": \"<boolean>\",\n      \"enumValues\": [\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        },\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        }\n      ],\n      \"checkButtons\": [\n        {\n          \"label\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"label\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"radioButtons\": [\n        {\n          \"label\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"label\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"defaultDropdownValues\": [\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        },\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        }\n      ],\n      \"proposedDropdownValues\": [\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        },\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        }\n      ],\n      \"dateTimeType\": \"<string>\",\n      \"multiValue\": \"<boolean>\",\n      \"proposedFixed\": \"<boolean>\",\n      \"defaultFromResource\": \"<boolean>\",\n      \"multiDefaultDropdownValues\": {\n        \"deserunt_5\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ]\n      },\n      \"multiProposedDropdownValues\": {\n        \"consequate2\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ],\n        \"anime\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ]\n      },\n      \"assetType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Tag\",\n        \"resourceDiscriminator\": \"<string>\"\n      },\n      \"assetTypeIds\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ],\n      \"communityIds\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ],\n      \"domainIds\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ],\n      \"statusIds\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ],\n      \"helpText\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"value\": \"<string>\",\n      \"writable\": \"<boolean>\",\n      \"required\": \"<boolean>\",\n      \"enumValues\": [\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        },\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        }\n      ],\n      \"checkButtons\": [\n        {\n          \"label\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"label\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"radioButtons\": [\n        {\n          \"label\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"label\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"defaultDropdownValues\": [\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        },\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        }\n      ],\n      \"proposedDropdownValues\": [\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        },\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        }\n      ],\n      \"dateTimeType\": \"<string>\",\n      \"multiValue\": \"<boolean>\",\n      \"proposedFixed\": \"<boolean>\",\n      \"defaultFromResource\": \"<boolean>\",\n      \"multiDefaultDropdownValues\": {\n        \"in15\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ],\n        \"ut6_0\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ],\n        \"esse2c3\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ]\n      },\n      \"multiProposedDropdownValues\": {\n        \"in_2b\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ]\n      },\n      \"assetType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Activity\",\n        \"resourceDiscriminator\": \"<string>\"\n      },\n      \"assetTypeIds\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ],\n      \"communityIds\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ],\n      \"domainIds\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ],\n      \"statusIds\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ],\n      \"helpText\": \"<string>\"\n    }\n  ],\n  \"taskId\": \"<string>\",\n  \"containsActivityStream\": \"<boolean>\",\n  \"subtitle\": \"<string>\"\n}"
										},
										{
											"name": "User don't have permission for given task",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/workflowTasks/:workflowTaskId/taskFormData?formPropertyType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"workflowTasks",
														":workflowTaskId",
														"taskFormData"
													],
													"query": [
														{
															"key": "formPropertyType",
															"value": "<string>",
															"description": "Form property type."
														}
													],
													"variable": [
														{
															"key": "workflowTaskId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Workflow task form data could not be found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/workflowTasks/:workflowTaskId/taskFormData?formPropertyType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"workflowTasks",
														":workflowTaskId",
														"taskFormData"
													],
													"query": [
														{
															"key": "formPropertyType",
															"value": "<string>",
															"description": "Form property type."
														}
													],
													"variable": [
														{
															"key": "workflowTaskId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "reassign",
							"item": [
								{
									"name": "Reassign task.",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{basicAuthUsername}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{basicAuthPassword}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/workflowTasks/:workflowTaskId/reassign?users=<uuid>&users=<uuid>&groups=<uuid>&groups=<uuid>&roles=<uuid>&roles=<uuid>&communities=<uuid>&communities=<uuid>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"workflowTasks",
												":workflowTaskId",
												"reassign"
											],
											"query": [
												{
													"key": "users",
													"value": "<uuid>",
													"description": "The user IDs to reassign to."
												},
												{
													"key": "users",
													"value": "<uuid>",
													"description": "The user IDs to reassign to."
												},
												{
													"key": "groups",
													"value": "<uuid>",
													"description": "The group IDs to reassign to."
												},
												{
													"key": "groups",
													"value": "<uuid>",
													"description": "The group IDs to reassign to."
												},
												{
													"key": "roles",
													"value": "<uuid>",
													"description": "The role IDs to reassign to."
												},
												{
													"key": "roles",
													"value": "<uuid>",
													"description": "The role IDs to reassign to."
												},
												{
													"key": "communities",
													"value": "<uuid>",
													"description": "The Community IDs of the specified roles to reassign to."
												},
												{
													"key": "communities",
													"value": "<uuid>",
													"description": "The Community IDs of the specified roles to reassign to."
												}
											],
											"variable": [
												{
													"key": "workflowTaskId",
													"value": "<uuid>",
													"description": "(Required) The ID of the workflow task."
												}
											]
										},
										"description": "Reassigns the task with the specified ID to one or more users, groups or roles. Caller needs to provide at least one of the value list for users, groups or roles. If roles are provided then the same number of communities needs to be provided also."
									},
									"response": [
										{
											"name": "Task successfully reassigned.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/workflowTasks/:workflowTaskId/reassign?users=<uuid>&groups=<uuid>&roles=<uuid>&communities=<uuid>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"workflowTasks",
														":workflowTaskId",
														"reassign"
													],
													"query": [
														{
															"key": "users",
															"value": "<uuid>",
															"description": "The user IDs to reassign to."
														},
														{
															"key": "groups",
															"value": "<uuid>",
															"description": "The group IDs to reassign to."
														},
														{
															"key": "roles",
															"value": "<uuid>",
															"description": "The role IDs to reassign to."
														},
														{
															"key": "communities",
															"value": "<uuid>",
															"description": "The Community IDs of the specified roles to reassign to."
														}
													],
													"variable": [
														{
															"key": "workflowTaskId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Task not found.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic <credentials>",
														"description": "Added as a part of security scheme: basic"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/workflowTasks/:workflowTaskId/reassign?users=<uuid>&groups=<uuid>&roles=<uuid>&communities=<uuid>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"workflowTasks",
														":workflowTaskId",
														"reassign"
													],
													"query": [
														{
															"key": "users",
															"value": "<uuid>",
															"description": "The user IDs to reassign to."
														},
														{
															"key": "groups",
															"value": "<uuid>",
															"description": "The group IDs to reassign to."
														},
														{
															"key": "roles",
															"value": "<uuid>",
															"description": "The role IDs to reassign to."
														},
														{
															"key": "communities",
															"value": "<uuid>",
															"description": "The Community IDs of the specified roles to reassign to."
														}
													],
													"variable": [
														{
															"key": "workflowTaskId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get workflow task.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/workflowTasks/:workflowTaskId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflowTasks",
										":workflowTaskId"
									],
									"variable": [
										{
											"key": "workflowTaskId",
											"value": "<uuid>",
											"description": "(Required) The ID of the workflow task to return."
										}
									]
								},
								"description": "Returns the workflow task with the specified ID. A task will only be returned when the user has the correct permission to view it."
							},
							"response": [
								{
									"name": "Workflow task successfully found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/workflowTasks/:workflowTaskId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"workflowTasks",
												":workflowTaskId"
											],
											"variable": [
												{
													"key": "workflowTaskId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"resourceType\": \"RelationType\",\n  \"system\": \"<boolean>\",\n  \"workflowDefinition\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Workflow\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\",\n    \"processId\": \"<string>\"\n  },\n  \"workflowInstanceId\": \"<uuid>\",\n  \"key\": \"<string>\",\n  \"type\": \"<string>\",\n  \"aggregationKey\": \"<string>\",\n  \"priority\": \"<integer>\",\n  \"owner\": \"<string>\",\n  \"candidateUsers\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Relation\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"userName\": \"<string>\",\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"emailAddress\": \"<string>\",\n      \"gender\": \"FEMALE\",\n      \"language\": \"<string>\",\n      \"additionalEmailAddresses\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"CsvIngestionProperties\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"emailAddress\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"NumericAttributeType\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"emailAddress\": \"<string>\"\n        }\n      ],\n      \"phoneNumbers\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Asset\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"type\": \"OTHER\",\n          \"phoneNumber\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"WorkflowTask\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"type\": \"MOBILE\",\n          \"phoneNumber\": \"<string>\"\n        }\n      ],\n      \"instantMessagingAccounts\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Relation\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"account\": \"<string>\",\n          \"type\": \"SKYPE\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Scope\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"account\": \"<string>\",\n          \"type\": \"YAHOO_MESSENGER\"\n        }\n      ],\n      \"websites\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ArticulationRule\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"url\": \"<string>\",\n          \"type\": \"FACEBOOK\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ConnectionStringParameter\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"url\": \"<string>\",\n          \"type\": \"MYSPACE\"\n        }\n      ],\n      \"addresses\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Status\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"city\": \"<string>\",\n          \"street\": \"<string>\",\n          \"number\": \"<string>\",\n          \"state\": \"<string>\",\n          \"country\": \"<string>\",\n          \"postalCode\": \"<string>\",\n          \"type\": \"WORK\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"StringAttribute\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"city\": \"<string>\",\n          \"street\": \"<string>\",\n          \"number\": \"<string>\",\n          \"state\": \"<string>\",\n          \"country\": \"<string>\",\n          \"postalCode\": \"<string>\",\n          \"type\": \"WORK\"\n        }\n      ],\n      \"activated\": \"<boolean>\",\n      \"enabled\": \"<boolean>\",\n      \"ldapUser\": \"<boolean>\",\n      \"userSource\": \"INTERNAL\",\n      \"guestUser\": \"<boolean>\",\n      \"apiUser\": \"<boolean>\",\n      \"licenseType\": \"AUTHOR\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"PhysicalDataConnector\",\n      \"createdBy\": \"<uuid>\",\n      \"createdOn\": \"<long>\",\n      \"lastModifiedBy\": \"<uuid>\",\n      \"lastModifiedOn\": \"<long>\",\n      \"system\": \"<boolean>\",\n      \"userName\": \"<string>\",\n      \"firstName\": \"<string>\",\n      \"lastName\": \"<string>\",\n      \"emailAddress\": \"<string>\",\n      \"gender\": \"FEMALE\",\n      \"language\": \"<string>\",\n      \"additionalEmailAddresses\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"View\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"emailAddress\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"DataQualityMetric\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"emailAddress\": \"<string>\"\n        }\n      ],\n      \"phoneNumbers\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"DateAttribute\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"type\": \"MOBILE\",\n          \"phoneNumber\": \"<string>\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Rating\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"type\": \"WORK\",\n          \"phoneNumber\": \"<string>\"\n        }\n      ],\n      \"instantMessagingAccounts\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"WorkflowInstance\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"account\": \"<string>\",\n          \"type\": \"SKYPE\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"StringAttributeType\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"account\": \"<string>\",\n          \"type\": \"ICQ\"\n        }\n      ],\n      \"websites\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"InstantMessagingAccount\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"url\": \"<string>\",\n          \"type\": \"MYSPACE\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ScriptAttributeType\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"url\": \"<string>\",\n          \"type\": \"TWITTER\"\n        }\n      ],\n      \"addresses\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Assignment\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"city\": \"<string>\",\n          \"street\": \"<string>\",\n          \"number\": \"<string>\",\n          \"state\": \"<string>\",\n          \"country\": \"<string>\",\n          \"postalCode\": \"<string>\",\n          \"type\": \"HOME\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ScriptAttribute\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"city\": \"<string>\",\n          \"street\": \"<string>\",\n          \"number\": \"<string>\",\n          \"state\": \"<string>\",\n          \"country\": \"<string>\",\n          \"postalCode\": \"<string>\",\n          \"type\": \"HOME\"\n        }\n      ],\n      \"activated\": \"<boolean>\",\n      \"enabled\": \"<boolean>\",\n      \"ldapUser\": \"<boolean>\",\n      \"userSource\": \"INTERNAL\",\n      \"guestUser\": \"<boolean>\",\n      \"apiUser\": \"<boolean>\",\n      \"licenseType\": \"CONSUMER\"\n    }\n  ],\n  \"createTime\": \"<long>\",\n  \"dueDate\": \"<long>\",\n  \"cancelable\": \"<boolean>\",\n  \"reassignable\": \"<boolean>\",\n  \"formRequired\": \"<boolean>\",\n  \"formKeyAvailable\": \"<boolean>\",\n  \"containsActivityStream\": \"<boolean>\",\n  \"inError\": \"<boolean>\",\n  \"errorMessage\": \"<string>\",\n  \"customButtons\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"value\": \"<string>\",\n      \"writable\": \"<boolean>\",\n      \"required\": \"<boolean>\",\n      \"enumValues\": [\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        },\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        }\n      ],\n      \"checkButtons\": [\n        {\n          \"label\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"label\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"radioButtons\": [\n        {\n          \"label\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"label\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"defaultDropdownValues\": [\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        },\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        }\n      ],\n      \"proposedDropdownValues\": [\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        },\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        }\n      ],\n      \"dateTimeType\": \"<string>\",\n      \"multiValue\": \"<boolean>\",\n      \"proposedFixed\": \"<boolean>\",\n      \"defaultFromResource\": \"<boolean>\",\n      \"multiDefaultDropdownValues\": {\n        \"irure_9\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ]\n      },\n      \"multiProposedDropdownValues\": {\n        \"in_bbf\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ],\n        \"laborum34\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ],\n        \"veniam_f\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ]\n      },\n      \"assetType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Context\",\n        \"resourceDiscriminator\": \"<string>\"\n      },\n      \"assetTypeIds\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ],\n      \"communityIds\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ],\n      \"domainIds\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ],\n      \"statusIds\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ],\n      \"helpText\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"value\": \"<string>\",\n      \"writable\": \"<boolean>\",\n      \"required\": \"<boolean>\",\n      \"enumValues\": [\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        },\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        }\n      ],\n      \"checkButtons\": [\n        {\n          \"label\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"label\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"radioButtons\": [\n        {\n          \"label\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"label\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"defaultDropdownValues\": [\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        },\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        }\n      ],\n      \"proposedDropdownValues\": [\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        },\n        {\n          \"idAsString\": \"<string>\",\n          \"parents\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"id\": \"<uuid>\",\n          \"text\": \"<string>\"\n        }\n      ],\n      \"dateTimeType\": \"<string>\",\n      \"multiValue\": \"<boolean>\",\n      \"proposedFixed\": \"<boolean>\",\n      \"defaultFromResource\": \"<boolean>\",\n      \"multiDefaultDropdownValues\": {\n        \"ex__b1\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ]\n      },\n      \"multiProposedDropdownValues\": {\n        \"sit_e82\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ]\n      },\n      \"assetType\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Address\",\n        \"resourceDiscriminator\": \"<string>\"\n      },\n      \"assetTypeIds\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ],\n      \"communityIds\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ],\n      \"domainIds\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ],\n      \"statusIds\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ],\n      \"helpText\": \"<string>\"\n    }\n  ],\n  \"description\": \"<string>\",\n  \"title\": \"<string>\",\n  \"businessItem\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"RelationType\",\n    \"resourceDiscriminator\": \"<string>\"\n  },\n  \"businessItemReference\": {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"InstantMessagingAccount\",\n    \"resourceDiscriminator\": \"<string>\",\n    \"name\": \"<string>\"\n  }\n}"
								},
								{
									"name": "User don't have permission for given task",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/workflowTasks/:workflowTaskId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"workflowTasks",
												":workflowTaskId"
											],
											"variable": [
												{
													"key": "workflowTaskId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Workflow task could not be found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/workflowTasks/:workflowTaskId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"workflowTasks",
												":workflowTaskId"
											],
											"variable": [
												{
													"key": "workflowTaskId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "completed",
					"item": [
						{
							"name": "Complete workflow tasks.",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{basicAuthUsername}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{basicAuthPassword}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"taskIds\": [\n    \"<uuid>\"\n  ],\n  \"formProperties\": {\n    \"consectetur_efc\": \"<string>\",\n    \"suntb9\": \"<string>\",\n    \"tempore\": \"<string>\",\n    \"aute0fd\": \"<string>\"\n  },\n  \"taskFormProperties\": {\n    \"veniam_5f\": {},\n    \"occaecat_7\": {},\n    \"aute6c\": {},\n    \"ad_b\": {},\n    \"ipsum_\": {}\n  },\n  \"guestUserId\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/workflowTasks/completed",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflowTasks",
										"completed"
									]
								},
								"description": "Completes tasks based on the provided request and returns the following tasks, if the same user is assigned to them."
							},
							"response": [
								{
									"name": "The following tasks, if the calling user is assigned to them. Empty response otherwise.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"taskIds\": [\n    \"<uuid>\"\n  ],\n  \"formProperties\": {\n    \"consectetur_efc\": \"<string>\",\n    \"suntb9\": \"<string>\",\n    \"tempore\": \"<string>\",\n    \"aute0fd\": \"<string>\"\n  },\n  \"taskFormProperties\": {\n    \"veniam_5f\": {},\n    \"occaecat_7\": {},\n    \"aute6c\": {},\n    \"ad_b\": {},\n    \"ipsum_\": {}\n  },\n  \"guestUserId\": \"<uuid>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/workflowTasks/completed",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"workflowTasks",
												"completed"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"Rating\",\n    \"system\": \"<boolean>\",\n    \"workflowDefinition\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ViewSharingRule\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\",\n      \"processId\": \"<string>\"\n    },\n    \"workflowInstanceId\": \"<uuid>\",\n    \"key\": \"<string>\",\n    \"type\": \"<string>\",\n    \"aggregationKey\": \"<string>\",\n    \"priority\": \"<integer>\",\n    \"owner\": \"<string>\",\n    \"candidateUsers\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"SingleValueListAttributeType\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"userName\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"emailAddress\": \"<string>\",\n        \"gender\": \"MALE\",\n        \"language\": \"<string>\",\n        \"additionalEmailAddresses\": [\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"JdbcDriver\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"emailAddress\": \"<string>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"AssignedCharacteristicType\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"emailAddress\": \"<string>\"\n          }\n        ],\n        \"phoneNumbers\": [\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"Community\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"type\": \"MOBILE\",\n            \"phoneNumber\": \"<string>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"ComplexRelationType\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"type\": \"MOBILE\",\n            \"phoneNumber\": \"<string>\"\n          }\n        ],\n        \"instantMessagingAccounts\": [\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"DataQualityMetric\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"account\": \"<string>\",\n            \"type\": \"JABBER\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"JdbcDriverFile\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"account\": \"<string>\",\n            \"type\": \"SKYPE\"\n          }\n        ],\n        \"websites\": [\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"Scope\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"url\": \"<string>\",\n            \"type\": \"WEBSITE\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"AssetType\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"url\": \"<string>\",\n            \"type\": \"MYSPACE\"\n          }\n        ],\n        \"addresses\": [\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"SingleValueListAttribute\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"number\": \"<string>\",\n            \"state\": \"<string>\",\n            \"country\": \"<string>\",\n            \"postalCode\": \"<string>\",\n            \"type\": \"HOME\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"ActivityChange\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"number\": \"<string>\",\n            \"state\": \"<string>\",\n            \"country\": \"<string>\",\n            \"postalCode\": \"<string>\",\n            \"type\": \"WORK\"\n          }\n        ],\n        \"activated\": \"<boolean>\",\n        \"enabled\": \"<boolean>\",\n        \"ldapUser\": \"<boolean>\",\n        \"userSource\": \"SSO\",\n        \"guestUser\": \"<boolean>\",\n        \"apiUser\": \"<boolean>\",\n        \"licenseType\": \"CONSUMER\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Tag\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"userName\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"emailAddress\": \"<string>\",\n        \"gender\": \"FEMALE\",\n        \"language\": \"<string>\",\n        \"additionalEmailAddresses\": [\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"Job\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"emailAddress\": \"<string>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"Job\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"emailAddress\": \"<string>\"\n          }\n        ],\n        \"phoneNumbers\": [\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"Assignment\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"type\": \"MOBILE\",\n            \"phoneNumber\": \"<string>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"Relation\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"type\": \"FAX\",\n            \"phoneNumber\": \"<string>\"\n          }\n        ],\n        \"instantMessagingAccounts\": [\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"Notification\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"account\": \"<string>\",\n            \"type\": \"AOL\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"Address\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"account\": \"<string>\",\n            \"type\": \"GTALK\"\n          }\n        ],\n        \"websites\": [\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"JdbcDriver\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"url\": \"<string>\",\n            \"type\": \"FACEBOOK\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"RelationType\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"url\": \"<string>\",\n            \"type\": \"MYSPACE\"\n          }\n        ],\n        \"addresses\": [\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"JdbcDriverFile\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"number\": \"<string>\",\n            \"state\": \"<string>\",\n            \"country\": \"<string>\",\n            \"postalCode\": \"<string>\",\n            \"type\": \"WORK\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"ScriptAttribute\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"number\": \"<string>\",\n            \"state\": \"<string>\",\n            \"country\": \"<string>\",\n            \"postalCode\": \"<string>\",\n            \"type\": \"WORK\"\n          }\n        ],\n        \"activated\": \"<boolean>\",\n        \"enabled\": \"<boolean>\",\n        \"ldapUser\": \"<boolean>\",\n        \"userSource\": \"LDAP\",\n        \"guestUser\": \"<boolean>\",\n        \"apiUser\": \"<boolean>\",\n        \"licenseType\": \"AUTHOR\"\n      }\n    ],\n    \"createTime\": \"<long>\",\n    \"dueDate\": \"<long>\",\n    \"cancelable\": \"<boolean>\",\n    \"reassignable\": \"<boolean>\",\n    \"formRequired\": \"<boolean>\",\n    \"formKeyAvailable\": \"<boolean>\",\n    \"containsActivityStream\": \"<boolean>\",\n    \"inError\": \"<boolean>\",\n    \"errorMessage\": \"<string>\",\n    \"customButtons\": [\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"writable\": \"<boolean>\",\n        \"required\": \"<boolean>\",\n        \"enumValues\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ],\n        \"checkButtons\": [\n          {\n            \"label\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"radioButtons\": [\n          {\n            \"label\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"defaultDropdownValues\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ],\n        \"proposedDropdownValues\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ],\n        \"dateTimeType\": \"<string>\",\n        \"multiValue\": \"<boolean>\",\n        \"proposedFixed\": \"<boolean>\",\n        \"defaultFromResource\": \"<boolean>\",\n        \"multiDefaultDropdownValues\": {\n          \"nonc_9\": [\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            },\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            }\n          ]\n        },\n        \"multiProposedDropdownValues\": {\n          \"incididunt_6\": [\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            },\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            }\n          ],\n          \"Excepteur23\": [\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            },\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            }\n          ],\n          \"ea_f3\": [\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            },\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            }\n          ]\n        },\n        \"assetType\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"Email\",\n          \"resourceDiscriminator\": \"<string>\"\n        },\n        \"assetTypeIds\": [\n          \"<uuid>\",\n          \"<uuid>\"\n        ],\n        \"communityIds\": [\n          \"<uuid>\",\n          \"<uuid>\"\n        ],\n        \"domainIds\": [\n          \"<uuid>\",\n          \"<uuid>\"\n        ],\n        \"statusIds\": [\n          \"<uuid>\",\n          \"<uuid>\"\n        ],\n        \"helpText\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"writable\": \"<boolean>\",\n        \"required\": \"<boolean>\",\n        \"enumValues\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ],\n        \"checkButtons\": [\n          {\n            \"label\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"radioButtons\": [\n          {\n            \"label\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"defaultDropdownValues\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ],\n        \"proposedDropdownValues\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ],\n        \"dateTimeType\": \"<string>\",\n        \"multiValue\": \"<boolean>\",\n        \"proposedFixed\": \"<boolean>\",\n        \"defaultFromResource\": \"<boolean>\",\n        \"multiDefaultDropdownValues\": {\n          \"nulla_0\": [\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            },\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            }\n          ]\n        },\n        \"multiProposedDropdownValues\": {\n          \"aute15\": [\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            },\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            }\n          ]\n        },\n        \"assetType\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ComplexRelationLeg\",\n          \"resourceDiscriminator\": \"<string>\"\n        },\n        \"assetTypeIds\": [\n          \"<uuid>\",\n          \"<uuid>\"\n        ],\n        \"communityIds\": [\n          \"<uuid>\",\n          \"<uuid>\"\n        ],\n        \"domainIds\": [\n          \"<uuid>\",\n          \"<uuid>\"\n        ],\n        \"statusIds\": [\n          \"<uuid>\",\n          \"<uuid>\"\n        ],\n        \"helpText\": \"<string>\"\n      }\n    ],\n    \"description\": \"<string>\",\n    \"title\": \"<string>\",\n    \"businessItem\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"Relation\",\n      \"resourceDiscriminator\": \"<string>\"\n    },\n    \"businessItemReference\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ViewSharingRule\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"resourceType\": \"View\",\n    \"system\": \"<boolean>\",\n    \"workflowDefinition\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"DataQualityRule\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\",\n      \"processId\": \"<string>\"\n    },\n    \"workflowInstanceId\": \"<uuid>\",\n    \"key\": \"<string>\",\n    \"type\": \"<string>\",\n    \"aggregationKey\": \"<string>\",\n    \"priority\": \"<integer>\",\n    \"owner\": \"<string>\",\n    \"candidateUsers\": [\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ComplexRelationAttributeType\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"userName\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"emailAddress\": \"<string>\",\n        \"gender\": \"MALE\",\n        \"language\": \"<string>\",\n        \"additionalEmailAddresses\": [\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"AdvancedDataType\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"emailAddress\": \"<string>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"DiagramPictureSharingRule\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"emailAddress\": \"<string>\"\n          }\n        ],\n        \"phoneNumbers\": [\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"Classification\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"type\": \"OTHER\",\n            \"phoneNumber\": \"<string>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"WorkflowTask\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"type\": \"OTHER\",\n            \"phoneNumber\": \"<string>\"\n          }\n        ],\n        \"instantMessagingAccounts\": [\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"ConnectionStringParameter\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"account\": \"<string>\",\n            \"type\": \"SKYPE\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"RelationType\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"account\": \"<string>\",\n            \"type\": \"GTALK\"\n          }\n        ],\n        \"websites\": [\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"Classification\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"url\": \"<string>\",\n            \"type\": \"FACEBOOK\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"ClassificationMatch\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"url\": \"<string>\",\n            \"type\": \"WEBSITE\"\n          }\n        ],\n        \"addresses\": [\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"WorkflowInstance\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"number\": \"<string>\",\n            \"state\": \"<string>\",\n            \"country\": \"<string>\",\n            \"postalCode\": \"<string>\",\n            \"type\": \"WORK\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"Attribute\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"number\": \"<string>\",\n            \"state\": \"<string>\",\n            \"country\": \"<string>\",\n            \"postalCode\": \"<string>\",\n            \"type\": \"HOME\"\n          }\n        ],\n        \"activated\": \"<boolean>\",\n        \"enabled\": \"<boolean>\",\n        \"ldapUser\": \"<boolean>\",\n        \"userSource\": \"SSO\",\n        \"guestUser\": \"<boolean>\",\n        \"apiUser\": \"<boolean>\",\n        \"licenseType\": \"AUTHOR\"\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"NumericAttribute\",\n        \"createdBy\": \"<uuid>\",\n        \"createdOn\": \"<long>\",\n        \"lastModifiedBy\": \"<uuid>\",\n        \"lastModifiedOn\": \"<long>\",\n        \"system\": \"<boolean>\",\n        \"userName\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"emailAddress\": \"<string>\",\n        \"gender\": \"UNKNOWN\",\n        \"language\": \"<string>\",\n        \"additionalEmailAddresses\": [\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"Attachment\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"emailAddress\": \"<string>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"Assignment\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"emailAddress\": \"<string>\"\n          }\n        ],\n        \"phoneNumbers\": [\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"NumericAttribute\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"type\": \"PAGER\",\n            \"phoneNumber\": \"<string>\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"RelationTrace\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"type\": \"PRIVATE\",\n            \"phoneNumber\": \"<string>\"\n          }\n        ],\n        \"instantMessagingAccounts\": [\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"Comment\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"account\": \"<string>\",\n            \"type\": \"LIVE_MESSENGER\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"CsvIngestionProperties\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"account\": \"<string>\",\n            \"type\": \"AOL\"\n          }\n        ],\n        \"websites\": [\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"FormProperty\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"url\": \"<string>\",\n            \"type\": \"LINKEDIN\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"DiagramPictureAssignmentRule\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"url\": \"<string>\",\n            \"type\": \"TWITTER\"\n          }\n        ],\n        \"addresses\": [\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"DataQualityRule\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"number\": \"<string>\",\n            \"state\": \"<string>\",\n            \"country\": \"<string>\",\n            \"postalCode\": \"<string>\",\n            \"type\": \"HOME\"\n          },\n          {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"MultiValueListAttributeType\",\n            \"createdBy\": \"<uuid>\",\n            \"createdOn\": \"<long>\",\n            \"lastModifiedBy\": \"<uuid>\",\n            \"lastModifiedOn\": \"<long>\",\n            \"system\": \"<boolean>\",\n            \"city\": \"<string>\",\n            \"street\": \"<string>\",\n            \"number\": \"<string>\",\n            \"state\": \"<string>\",\n            \"country\": \"<string>\",\n            \"postalCode\": \"<string>\",\n            \"type\": \"HOME\"\n          }\n        ],\n        \"activated\": \"<boolean>\",\n        \"enabled\": \"<boolean>\",\n        \"ldapUser\": \"<boolean>\",\n        \"userSource\": \"LDAP\",\n        \"guestUser\": \"<boolean>\",\n        \"apiUser\": \"<boolean>\",\n        \"licenseType\": \"AUTHOR\"\n      }\n    ],\n    \"createTime\": \"<long>\",\n    \"dueDate\": \"<long>\",\n    \"cancelable\": \"<boolean>\",\n    \"reassignable\": \"<boolean>\",\n    \"formRequired\": \"<boolean>\",\n    \"formKeyAvailable\": \"<boolean>\",\n    \"containsActivityStream\": \"<boolean>\",\n    \"inError\": \"<boolean>\",\n    \"errorMessage\": \"<string>\",\n    \"customButtons\": [\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"writable\": \"<boolean>\",\n        \"required\": \"<boolean>\",\n        \"enumValues\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ],\n        \"checkButtons\": [\n          {\n            \"label\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"radioButtons\": [\n          {\n            \"label\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"defaultDropdownValues\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ],\n        \"proposedDropdownValues\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ],\n        \"dateTimeType\": \"<string>\",\n        \"multiValue\": \"<boolean>\",\n        \"proposedFixed\": \"<boolean>\",\n        \"defaultFromResource\": \"<boolean>\",\n        \"multiDefaultDropdownValues\": {\n          \"adipisicing7f\": [\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            },\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            }\n          ],\n          \"est2e\": [\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            },\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            }\n          ]\n        },\n        \"multiProposedDropdownValues\": {\n          \"commodo_d5\": [\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            },\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            }\n          ]\n        },\n        \"assetType\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ComplexRelationLeg\",\n          \"resourceDiscriminator\": \"<string>\"\n        },\n        \"assetTypeIds\": [\n          \"<uuid>\",\n          \"<uuid>\"\n        ],\n        \"communityIds\": [\n          \"<uuid>\",\n          \"<uuid>\"\n        ],\n        \"domainIds\": [\n          \"<uuid>\",\n          \"<uuid>\"\n        ],\n        \"statusIds\": [\n          \"<uuid>\",\n          \"<uuid>\"\n        ],\n        \"helpText\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"type\": \"<string>\",\n        \"value\": \"<string>\",\n        \"writable\": \"<boolean>\",\n        \"required\": \"<boolean>\",\n        \"enumValues\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ],\n        \"checkButtons\": [\n          {\n            \"label\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"radioButtons\": [\n          {\n            \"label\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"label\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ],\n        \"defaultDropdownValues\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ],\n        \"proposedDropdownValues\": [\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          },\n          {\n            \"idAsString\": \"<string>\",\n            \"parents\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"id\": \"<uuid>\",\n            \"text\": \"<string>\"\n          }\n        ],\n        \"dateTimeType\": \"<string>\",\n        \"multiValue\": \"<boolean>\",\n        \"proposedFixed\": \"<boolean>\",\n        \"defaultFromResource\": \"<boolean>\",\n        \"multiDefaultDropdownValues\": {\n          \"suntb_\": [\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            },\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            }\n          ],\n          \"irurebf7\": [\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            },\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            }\n          ],\n          \"Ut676\": [\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            },\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            }\n          ],\n          \"veniambc_\": [\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            },\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            }\n          ]\n        },\n        \"multiProposedDropdownValues\": {\n          \"laborumc\": [\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            },\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            }\n          ]\n        },\n        \"assetType\": {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ScriptAttributeType\",\n          \"resourceDiscriminator\": \"<string>\"\n        },\n        \"assetTypeIds\": [\n          \"<uuid>\",\n          \"<uuid>\"\n        ],\n        \"communityIds\": [\n          \"<uuid>\",\n          \"<uuid>\"\n        ],\n        \"domainIds\": [\n          \"<uuid>\",\n          \"<uuid>\"\n        ],\n        \"statusIds\": [\n          \"<uuid>\",\n          \"<uuid>\"\n        ],\n        \"helpText\": \"<string>\"\n      }\n    ],\n    \"description\": \"<string>\",\n    \"title\": \"<string>\",\n    \"businessItem\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"RelationType\",\n      \"resourceDiscriminator\": \"<string>\"\n    },\n    \"businessItemReference\": {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ScriptAttributeType\",\n      \"resourceDiscriminator\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  }\n]"
								},
								{
									"name": "Requested workflow task does not exist.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"taskIds\": [\n    \"<uuid>\"\n  ],\n  \"formProperties\": {\n    \"consectetur_efc\": \"<string>\",\n    \"suntb9\": \"<string>\",\n    \"tempore\": \"<string>\",\n    \"aute0fd\": \"<string>\"\n  },\n  \"taskFormProperties\": {\n    \"veniam_5f\": {},\n    \"occaecat_7\": {},\n    \"aute6c\": {},\n    \"ad_b\": {},\n    \"ipsum_\": {}\n  },\n  \"guestUserId\": \"<uuid>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/workflowTasks/completed",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"workflowTasks",
												"completed"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Current user is not candidate user for workflow task.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": "Added as a part of security scheme: basic"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"taskIds\": [\n    \"<uuid>\"\n  ],\n  \"formProperties\": {\n    \"consectetur_efc\": \"<string>\",\n    \"suntb9\": \"<string>\",\n    \"tempore\": \"<string>\",\n    \"aute0fd\": \"<string>\"\n  },\n  \"taskFormProperties\": {\n    \"veniam_5f\": {},\n    \"occaecat_7\": {},\n    \"aute6c\": {},\n    \"ad_b\": {},\n    \"ipsum_\": {}\n  },\n  \"guestUserId\": \"<uuid>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/workflowTasks/completed",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"workflowTasks",
												"completed"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Find workflow tasks.",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{basicAuthUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{basicAuthPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/workflowTasks?offset=0&limit=0&countLimit=-1&businessItemId=<uuid>&businessItemType=DOMAIN&workflowTaskUserRelation=ALL&businessItemName=<string>&description=<string>&userId=<uuid>&createDate=<long>&dueDate=<long>&title=<string>&type=<string>&sortField=DUE_DATE&sortOrder=DESC",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflowTasks"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
								},
								{
									"key": "limit",
									"value": "0",
									"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
								},
								{
									"key": "countLimit",
									"value": "-1",
									"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
								},
								{
									"key": "businessItemId",
									"value": "<uuid>",
									"description": "The ID of the business item"
								},
								{
									"key": "businessItemType",
									"value": "DOMAIN",
									"description": "The type of the business item"
								},
								{
									"key": "workflowTaskUserRelation",
									"value": "ALL",
									"description": "The type of relation between user and searched tasks. This could be either set to search for all the tasks the user is permitted to view or just those assigned to the user."
								},
								{
									"key": "businessItemName",
									"value": "<string>",
									"description": "The part of the name of the business item."
								},
								{
									"key": "description",
									"value": "<string>",
									"description": "The part of the task description."
								},
								{
									"key": "userId",
									"value": "<uuid>",
									"description": "The ID of the user for which the tasks need to be returned. If empty, the current logged in user will be used"
								},
								{
									"key": "createDate",
									"value": "<long>",
									"description": "The creation date of the task. It is the timestamp (in UTC time standard)"
								},
								{
									"key": "dueDate",
									"value": "<long>",
									"description": "The due date of the task. It is the timestamp (in UTC time standard)"
								},
								{
									"key": "title",
									"value": "<string>",
									"description": "The title/name of the task."
								},
								{
									"key": "type",
									"value": "<string>",
									"description": "The task type."
								},
								{
									"key": "sortField",
									"value": "DUE_DATE",
									"description": "The field on which the results are sorted. On due date by default."
								},
								{
									"key": "sortOrder",
									"value": "DESC",
									"description": "The sorting order."
								}
							]
						},
						"description": "Returns the workflow tasks matching given search criteria."
					},
					"response": [
						{
							"name": "The paged response with found workflow tasks",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": "Added as a part of security scheme: basic"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/workflowTasks?offset=0&limit=0&countLimit=-1&businessItemId=<uuid>&businessItemType=DOMAIN&workflowTaskUserRelation=ALL&businessItemName=<string>&description=<string>&userId=<uuid>&createDate=<long>&dueDate=<long>&title=<string>&type=<string>&sortField=DUE_DATE&sortOrder=DESC",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflowTasks"
									],
									"query": [
										{
											"key": "offset",
											"value": "0",
											"description": "The first result to retrieve. If not set (offset = <code>0</code>), results will be retrieved starting from row <code>0</code>."
										},
										{
											"key": "limit",
											"value": "0",
											"description": "The maximum number of results to retrieve. If not set (limit = <code>0</code>), the default limit will be used. The maximum allowed limit is 1000."
										},
										{
											"key": "countLimit",
											"value": "-1",
											"description": "Allows to limit the number of elements that will be counted. -1 will count everything and 0 will cause the count to be skipped"
										},
										{
											"key": "businessItemId",
											"value": "<uuid>",
											"description": "The ID of the business item"
										},
										{
											"key": "businessItemType",
											"value": "DOMAIN",
											"description": "The type of the business item"
										},
										{
											"key": "workflowTaskUserRelation",
											"value": "ALL",
											"description": "The type of relation between user and searched tasks. This could be either set to search for all the tasks the user is permitted to view or just those assigned to the user."
										},
										{
											"key": "businessItemName",
											"value": "<string>",
											"description": "The part of the name of the business item."
										},
										{
											"key": "description",
											"value": "<string>",
											"description": "The part of the task description."
										},
										{
											"key": "userId",
											"value": "<uuid>",
											"description": "The ID of the user for which the tasks need to be returned. If empty, the current logged in user will be used"
										},
										{
											"key": "createDate",
											"value": "<long>",
											"description": "The creation date of the task. It is the timestamp (in UTC time standard)"
										},
										{
											"key": "dueDate",
											"value": "<long>",
											"description": "The due date of the task. It is the timestamp (in UTC time standard)"
										},
										{
											"key": "title",
											"value": "<string>",
											"description": "The title/name of the task."
										},
										{
											"key": "type",
											"value": "<string>",
											"description": "The task type."
										},
										{
											"key": "sortField",
											"value": "DUE_DATE",
											"description": "The field on which the results are sorted. On due date by default."
										},
										{
											"key": "sortOrder",
											"value": "DESC",
											"description": "The sorting order."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total\": \"<long>\",\n  \"offset\": \"<long>\",\n  \"limit\": \"<long>\",\n  \"results\": [\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"ComplexRelationType\",\n      \"system\": \"<boolean>\",\n      \"workflowDefinition\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"AssignedCharacteristicType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\",\n        \"processId\": \"<string>\"\n      },\n      \"workflowInstanceId\": \"<uuid>\",\n      \"key\": \"<string>\",\n      \"type\": \"<string>\",\n      \"aggregationKey\": \"<string>\",\n      \"priority\": \"<integer>\",\n      \"owner\": \"<string>\",\n      \"candidateUsers\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"NumericAttribute\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"userName\": \"<string>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"emailAddress\": \"<string>\",\n          \"gender\": \"FEMALE\",\n          \"language\": \"<string>\",\n          \"additionalEmailAddresses\": [\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"Address\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"emailAddress\": \"<string>\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"DataQualityRule\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"emailAddress\": \"<string>\"\n            }\n          ],\n          \"phoneNumbers\": [\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"Rating\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"type\": \"WORK\",\n              \"phoneNumber\": \"<string>\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"NumericAttribute\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"type\": \"PAGER\",\n              \"phoneNumber\": \"<string>\"\n            }\n          ],\n          \"instantMessagingAccounts\": [\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"Notification\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"account\": \"<string>\",\n              \"type\": \"GTALK\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"DataQualityRule\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"account\": \"<string>\",\n              \"type\": \"SKYPE\"\n            }\n          ],\n          \"websites\": [\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"NumericAttributeType\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"url\": \"<string>\",\n              \"type\": \"WEBSITE\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"Context\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"url\": \"<string>\",\n              \"type\": \"TWITTER\"\n            }\n          ],\n          \"addresses\": [\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"InstantMessagingAccount\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"city\": \"<string>\",\n              \"street\": \"<string>\",\n              \"number\": \"<string>\",\n              \"state\": \"<string>\",\n              \"country\": \"<string>\",\n              \"postalCode\": \"<string>\",\n              \"type\": \"HOME\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"Attribute\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"city\": \"<string>\",\n              \"street\": \"<string>\",\n              \"number\": \"<string>\",\n              \"state\": \"<string>\",\n              \"country\": \"<string>\",\n              \"postalCode\": \"<string>\",\n              \"type\": \"HOME\"\n            }\n          ],\n          \"activated\": \"<boolean>\",\n          \"enabled\": \"<boolean>\",\n          \"ldapUser\": \"<boolean>\",\n          \"userSource\": \"INTERNAL\",\n          \"guestUser\": \"<boolean>\",\n          \"apiUser\": \"<boolean>\",\n          \"licenseType\": \"AUTHOR\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ArticulationRule\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"userName\": \"<string>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"emailAddress\": \"<string>\",\n          \"gender\": \"UNKNOWN\",\n          \"language\": \"<string>\",\n          \"additionalEmailAddresses\": [\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"AssignedCharacteristicType\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"emailAddress\": \"<string>\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"ConnectionStringParameter\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"emailAddress\": \"<string>\"\n            }\n          ],\n          \"phoneNumbers\": [\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"Domain\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"type\": \"FAX\",\n              \"phoneNumber\": \"<string>\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"ScriptAttributeType\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"type\": \"MOBILE\",\n              \"phoneNumber\": \"<string>\"\n            }\n          ],\n          \"instantMessagingAccounts\": [\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"AttributeType\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"account\": \"<string>\",\n              \"type\": \"ICQ\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"ScriptAttribute\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"account\": \"<string>\",\n              \"type\": \"YAHOO_MESSENGER\"\n            }\n          ],\n          \"websites\": [\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"Role\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"url\": \"<string>\",\n              \"type\": \"LINKEDIN\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"Attribute\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"url\": \"<string>\",\n              \"type\": \"FACEBOOK\"\n            }\n          ],\n          \"addresses\": [\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"Website\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"city\": \"<string>\",\n              \"street\": \"<string>\",\n              \"number\": \"<string>\",\n              \"state\": \"<string>\",\n              \"country\": \"<string>\",\n              \"postalCode\": \"<string>\",\n              \"type\": \"WORK\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"NumericAttribute\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"city\": \"<string>\",\n              \"street\": \"<string>\",\n              \"number\": \"<string>\",\n              \"state\": \"<string>\",\n              \"country\": \"<string>\",\n              \"postalCode\": \"<string>\",\n              \"type\": \"HOME\"\n            }\n          ],\n          \"activated\": \"<boolean>\",\n          \"enabled\": \"<boolean>\",\n          \"ldapUser\": \"<boolean>\",\n          \"userSource\": \"LDAP\",\n          \"guestUser\": \"<boolean>\",\n          \"apiUser\": \"<boolean>\",\n          \"licenseType\": \"AUTHOR\"\n        }\n      ],\n      \"createTime\": \"<long>\",\n      \"dueDate\": \"<long>\",\n      \"cancelable\": \"<boolean>\",\n      \"reassignable\": \"<boolean>\",\n      \"formRequired\": \"<boolean>\",\n      \"formKeyAvailable\": \"<boolean>\",\n      \"containsActivityStream\": \"<boolean>\",\n      \"inError\": \"<boolean>\",\n      \"errorMessage\": \"<string>\",\n      \"customButtons\": [\n        {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"writable\": \"<boolean>\",\n          \"required\": \"<boolean>\",\n          \"enumValues\": [\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            },\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            }\n          ],\n          \"checkButtons\": [\n            {\n              \"label\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ],\n          \"radioButtons\": [\n            {\n              \"label\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ],\n          \"defaultDropdownValues\": [\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            },\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            }\n          ],\n          \"proposedDropdownValues\": [\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            },\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            }\n          ],\n          \"dateTimeType\": \"<string>\",\n          \"multiValue\": \"<boolean>\",\n          \"proposedFixed\": \"<boolean>\",\n          \"defaultFromResource\": \"<boolean>\",\n          \"multiDefaultDropdownValues\": {\n            \"ut_3d7\": [\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              },\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              }\n            ],\n            \"laboreb5\": [\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              },\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              }\n            ],\n            \"proident_4e\": [\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              },\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              }\n            ]\n          },\n          \"multiProposedDropdownValues\": {\n            \"adipisicing_77\": [\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              },\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              }\n            ]\n          },\n          \"assetType\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"NumericAttribute\",\n            \"resourceDiscriminator\": \"<string>\"\n          },\n          \"assetTypeIds\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ],\n          \"communityIds\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ],\n          \"domainIds\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ],\n          \"statusIds\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ],\n          \"helpText\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"writable\": \"<boolean>\",\n          \"required\": \"<boolean>\",\n          \"enumValues\": [\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            },\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            }\n          ],\n          \"checkButtons\": [\n            {\n              \"label\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ],\n          \"radioButtons\": [\n            {\n              \"label\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ],\n          \"defaultDropdownValues\": [\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            },\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            }\n          ],\n          \"proposedDropdownValues\": [\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            },\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            }\n          ],\n          \"dateTimeType\": \"<string>\",\n          \"multiValue\": \"<boolean>\",\n          \"proposedFixed\": \"<boolean>\",\n          \"defaultFromResource\": \"<boolean>\",\n          \"multiDefaultDropdownValues\": {\n            \"incididunt_1d\": [\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              },\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              }\n            ]\n          },\n          \"multiProposedDropdownValues\": {\n            \"veniam76c\": [\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              },\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              }\n            ],\n            \"ea_1\": [\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              },\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              }\n            ]\n          },\n          \"assetType\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"Website\",\n            \"resourceDiscriminator\": \"<string>\"\n          },\n          \"assetTypeIds\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ],\n          \"communityIds\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ],\n          \"domainIds\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ],\n          \"statusIds\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ],\n          \"helpText\": \"<string>\"\n        }\n      ],\n      \"description\": \"<string>\",\n      \"title\": \"<string>\",\n      \"businessItem\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ComplexRelationLegType\",\n        \"resourceDiscriminator\": \"<string>\"\n      },\n      \"businessItemReference\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"StringAttributeType\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"resourceType\": \"NumericAttribute\",\n      \"system\": \"<boolean>\",\n      \"workflowDefinition\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Comment\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\",\n        \"processId\": \"<string>\"\n      },\n      \"workflowInstanceId\": \"<uuid>\",\n      \"key\": \"<string>\",\n      \"type\": \"<string>\",\n      \"aggregationKey\": \"<string>\",\n      \"priority\": \"<integer>\",\n      \"owner\": \"<string>\",\n      \"candidateUsers\": [\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ExcelIngestionProperties\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"userName\": \"<string>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"emailAddress\": \"<string>\",\n          \"gender\": \"UNKNOWN\",\n          \"language\": \"<string>\",\n          \"additionalEmailAddresses\": [\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"ValidationRule\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"emailAddress\": \"<string>\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"BaseDataType\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"emailAddress\": \"<string>\"\n            }\n          ],\n          \"phoneNumbers\": [\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"ValidationRule\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"type\": \"MOBILE\",\n              \"phoneNumber\": \"<string>\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"DataQualityRule\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"type\": \"FAX\",\n              \"phoneNumber\": \"<string>\"\n            }\n          ],\n          \"instantMessagingAccounts\": [\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"BaseDataType\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"account\": \"<string>\",\n              \"type\": \"AOL\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"ClassificationMatch\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"account\": \"<string>\",\n              \"type\": \"YAHOO_MESSENGER\"\n            }\n          ],\n          \"websites\": [\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"SingleValueListAttribute\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"url\": \"<string>\",\n              \"type\": \"FACEBOOK\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"PhysicalDataConnector\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"url\": \"<string>\",\n              \"type\": \"MYSPACE\"\n            }\n          ],\n          \"addresses\": [\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"ComplexRelationLeg\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"city\": \"<string>\",\n              \"street\": \"<string>\",\n              \"number\": \"<string>\",\n              \"state\": \"<string>\",\n              \"country\": \"<string>\",\n              \"postalCode\": \"<string>\",\n              \"type\": \"WORK\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"BaseDataType\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"city\": \"<string>\",\n              \"street\": \"<string>\",\n              \"number\": \"<string>\",\n              \"state\": \"<string>\",\n              \"country\": \"<string>\",\n              \"postalCode\": \"<string>\",\n              \"type\": \"HOME\"\n            }\n          ],\n          \"activated\": \"<boolean>\",\n          \"enabled\": \"<boolean>\",\n          \"ldapUser\": \"<boolean>\",\n          \"userSource\": \"INTERNAL\",\n          \"guestUser\": \"<boolean>\",\n          \"apiUser\": \"<boolean>\",\n          \"licenseType\": \"AUTHOR\"\n        },\n        {\n          \"id\": \"<uuid>\",\n          \"resourceType\": \"ComplexRelationType\",\n          \"createdBy\": \"<uuid>\",\n          \"createdOn\": \"<long>\",\n          \"lastModifiedBy\": \"<uuid>\",\n          \"lastModifiedOn\": \"<long>\",\n          \"system\": \"<boolean>\",\n          \"userName\": \"<string>\",\n          \"firstName\": \"<string>\",\n          \"lastName\": \"<string>\",\n          \"emailAddress\": \"<string>\",\n          \"gender\": \"FEMALE\",\n          \"language\": \"<string>\",\n          \"additionalEmailAddresses\": [\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"Domain\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"emailAddress\": \"<string>\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"Responsibility\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"emailAddress\": \"<string>\"\n            }\n          ],\n          \"phoneNumbers\": [\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"ComplexRelationLeg\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"type\": \"OTHER\",\n              \"phoneNumber\": \"<string>\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"RelationType\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"type\": \"OTHER\",\n              \"phoneNumber\": \"<string>\"\n            }\n          ],\n          \"instantMessagingAccounts\": [\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"ViewAssignmentRule\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"account\": \"<string>\",\n              \"type\": \"LIVE_MESSENGER\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"Email\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"account\": \"<string>\",\n              \"type\": \"ICQ\"\n            }\n          ],\n          \"websites\": [\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"Classification\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"url\": \"<string>\",\n              \"type\": \"LINKEDIN\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"BooleanAttributeType\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"url\": \"<string>\",\n              \"type\": \"WEBSITE\"\n            }\n          ],\n          \"addresses\": [\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"JdbcDriver\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"city\": \"<string>\",\n              \"street\": \"<string>\",\n              \"number\": \"<string>\",\n              \"state\": \"<string>\",\n              \"country\": \"<string>\",\n              \"postalCode\": \"<string>\",\n              \"type\": \"WORK\"\n            },\n            {\n              \"id\": \"<uuid>\",\n              \"resourceType\": \"StringAttributeType\",\n              \"createdBy\": \"<uuid>\",\n              \"createdOn\": \"<long>\",\n              \"lastModifiedBy\": \"<uuid>\",\n              \"lastModifiedOn\": \"<long>\",\n              \"system\": \"<boolean>\",\n              \"city\": \"<string>\",\n              \"street\": \"<string>\",\n              \"number\": \"<string>\",\n              \"state\": \"<string>\",\n              \"country\": \"<string>\",\n              \"postalCode\": \"<string>\",\n              \"type\": \"WORK\"\n            }\n          ],\n          \"activated\": \"<boolean>\",\n          \"enabled\": \"<boolean>\",\n          \"ldapUser\": \"<boolean>\",\n          \"userSource\": \"LDAP\",\n          \"guestUser\": \"<boolean>\",\n          \"apiUser\": \"<boolean>\",\n          \"licenseType\": \"CONSUMER\"\n        }\n      ],\n      \"createTime\": \"<long>\",\n      \"dueDate\": \"<long>\",\n      \"cancelable\": \"<boolean>\",\n      \"reassignable\": \"<boolean>\",\n      \"formRequired\": \"<boolean>\",\n      \"formKeyAvailable\": \"<boolean>\",\n      \"containsActivityStream\": \"<boolean>\",\n      \"inError\": \"<boolean>\",\n      \"errorMessage\": \"<string>\",\n      \"customButtons\": [\n        {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"writable\": \"<boolean>\",\n          \"required\": \"<boolean>\",\n          \"enumValues\": [\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            },\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            }\n          ],\n          \"checkButtons\": [\n            {\n              \"label\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ],\n          \"radioButtons\": [\n            {\n              \"label\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ],\n          \"defaultDropdownValues\": [\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            },\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            }\n          ],\n          \"proposedDropdownValues\": [\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            },\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            }\n          ],\n          \"dateTimeType\": \"<string>\",\n          \"multiValue\": \"<boolean>\",\n          \"proposedFixed\": \"<boolean>\",\n          \"defaultFromResource\": \"<boolean>\",\n          \"multiDefaultDropdownValues\": {\n            \"dolore0\": [\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              },\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              }\n            ],\n            \"in_e\": [\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              },\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              }\n            ],\n            \"dolor4e0\": [\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              },\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              }\n            ]\n          },\n          \"multiProposedDropdownValues\": {\n            \"sunt_b\": [\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              },\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              }\n            ]\n          },\n          \"assetType\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"Comment\",\n            \"resourceDiscriminator\": \"<string>\"\n          },\n          \"assetTypeIds\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ],\n          \"communityIds\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ],\n          \"domainIds\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ],\n          \"statusIds\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ],\n          \"helpText\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"type\": \"<string>\",\n          \"value\": \"<string>\",\n          \"writable\": \"<boolean>\",\n          \"required\": \"<boolean>\",\n          \"enumValues\": [\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            },\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            }\n          ],\n          \"checkButtons\": [\n            {\n              \"label\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ],\n          \"radioButtons\": [\n            {\n              \"label\": \"<string>\",\n              \"value\": \"<string>\"\n            },\n            {\n              \"label\": \"<string>\",\n              \"value\": \"<string>\"\n            }\n          ],\n          \"defaultDropdownValues\": [\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            },\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            }\n          ],\n          \"proposedDropdownValues\": [\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            },\n            {\n              \"idAsString\": \"<string>\",\n              \"parents\": [\n                \"<string>\",\n                \"<string>\"\n              ],\n              \"id\": \"<uuid>\",\n              \"text\": \"<string>\"\n            }\n          ],\n          \"dateTimeType\": \"<string>\",\n          \"multiValue\": \"<boolean>\",\n          \"proposedFixed\": \"<boolean>\",\n          \"defaultFromResource\": \"<boolean>\",\n          \"multiDefaultDropdownValues\": {\n            \"sint_0\": [\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              },\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              }\n            ],\n            \"proident_8b\": [\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              },\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              }\n            ]\n          },\n          \"multiProposedDropdownValues\": {\n            \"Duis_dc9\": [\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              },\n              {\n                \"idAsString\": \"<string>\",\n                \"parents\": [\n                  \"<string>\",\n                  \"<string>\"\n                ],\n                \"id\": \"<uuid>\",\n                \"text\": \"<string>\"\n              }\n            ]\n          },\n          \"assetType\": {\n            \"id\": \"<uuid>\",\n            \"resourceType\": \"JdbcIngestionProperties\",\n            \"resourceDiscriminator\": \"<string>\"\n          },\n          \"assetTypeIds\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ],\n          \"communityIds\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ],\n          \"domainIds\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ],\n          \"statusIds\": [\n            \"<uuid>\",\n            \"<uuid>\"\n          ],\n          \"helpText\": \"<string>\"\n        }\n      ],\n      \"description\": \"<string>\",\n      \"title\": \"<string>\",\n      \"businessItem\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"ViewSharingRule\",\n        \"resourceDiscriminator\": \"<string>\"\n      },\n      \"businessItemReference\": {\n        \"id\": \"<uuid>\",\n        \"resourceType\": \"Activity\",\n        \"resourceDiscriminator\": \"<string>\",\n        \"name\": \"<string>\"\n      }\n    }\n  ]\n}"
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://insigniafinancial-dev.collibra.com/rest/2.0"
		},
		{
			"key": "basicAuthUsername",
			"value": "your_account",
			"type": "default"
		},
		{
			"key": "basicAuthPassword",
			"value": "your_password",
			"type": "default"
		},
		{
			"key": "csrfToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "token",
			"value": ""
		}
	]
}